  apiVersion: opentelemetry.io/v1beta1
  kind: OpenTelemetryCollector
  metadata:
    name: otel
    namespace: bosca
  spec:
    config:
      receivers:
        otlp:
          protocols:
            grpc:
              endpoint: ${env:POD_NAME}:4317
            http:
              endpoint: ${env:POD_NAME}:4318
        prometheus:
          config:
            scrape_configs:
              - job_name: postgresql
                scrape_interval: 5s
                static_configs:
                  - targets: [coroot-pg-agent.coroot.svc.cluster.local]

      processors:
        batch:
          send_batch_size: 1000
          timeout: 10s

      exporters:
        otlphttp/coroot-traces:
          endpoint: "http://coroot.coroot.svc.cluster.local:8080"
          encoding: proto
          headers:
            "x-api-key": "oq69cbkj"
        otlphttp/coroot-metrics:
          endpoint: "http://coroot-opentelemetry-collector.coroot.svc.cluster.local:4318"
          encoding: proto
          headers:
            "x-api-key": "oq69cbkj"
        otlphttp/coroot-logs:
          endpoint: "http://coroot.coroot.svc.cluster.local:8080"
          encoding: proto
          headers:
            "x-api-key": "oq69cbkj"
        prometheusremotewrite:
          endpoint: http://coroot-prometheus-server.coroot.svc.cluster.local/api/v1/write
          tls:
            insecure: true

      service:
        pipelines:
          metrics:
            receivers: [prometheus]
            processors: [batch]
            exporters: [prometheusremotewrite]
          traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [otlphttp/coroot-traces]
          logs:
            receivers: [otlp]
            processors: [batch]
            exporters: [otlphttp/coroot-logs]

