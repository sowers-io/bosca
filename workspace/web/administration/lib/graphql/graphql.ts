/* eslint-disable */
// @ts-nocheck
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core'
export type Maybe<T> = T | null
export type InputMaybe<T> = Maybe<T>
export type Exact<T extends { [key: string]: unknown }> = {
  [K in keyof T]: T[K]
}
export type MakeOptional<T, K extends keyof T> =
  & Omit<T, K>
  & { [SubKey in K]?: Maybe<T[SubKey]> }
export type MakeMaybe<T, K extends keyof T> =
  & Omit<T, K>
  & { [SubKey in K]: Maybe<T[SubKey]> }
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> =
  { [_ in K]?: never }
export type Incremental<T> =
  | T
  | {
    [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never
  }
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string }
  String: { input: string; output: string }
  Boolean: { input: boolean; output: boolean }
  Int: { input: number; output: number }
  Float: { input: number; output: number }
  /**
   * Implement the DateTime<Utc> scalar
   *
   * The input/output is a string in RFC3339 format.
   */
  DateTime: { input: any; output: any }
  /** A scalar that can represent any JSON value. */
  JSON: { input: any; output: any }
  Upload: { input: any; output: any }
}

export type Activities = {
  __typename?: 'Activities'
  activity?: Maybe<Activity>
  all: Array<Activity>
}

export type ActivitiesActivityArgs = {
  id: Scalars['String']['input']
}

export type ActivitiesMutation = {
  __typename?: 'ActivitiesMutation'
  add?: Maybe<Activity>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<Activity>
}

export type ActivitiesMutationAddArgs = {
  activity: ActivityInput
}

export type ActivitiesMutationDeleteArgs = {
  activityId: Scalars['String']['input']
}

export type ActivitiesMutationEditArgs = {
  activity: ActivityInput
}

export type Activity = {
  __typename?: 'Activity'
  childWorkflowId?: Maybe<Scalars['String']['output']>
  configuration?: Maybe<Scalars['JSON']['output']>
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  inputs: Array<ActivityParameter>
  name: Scalars['String']['output']
  outputs: Array<ActivityParameter>
}

export type ActivityInput = {
  childWorkflowId?: InputMaybe<Scalars['String']['input']>
  configuration?: InputMaybe<Scalars['JSON']['input']>
  description: Scalars['String']['input']
  id: Scalars['String']['input']
  inputs: Array<ActivityParameterInput>
  name: Scalars['String']['input']
  outputs: Array<ActivityParameterInput>
}

export type ActivityParameter = {
  __typename?: 'ActivityParameter'
  name: Scalars['String']['output']
  type: ActivityParameterType
}

export type ActivityParameterInput = {
  name: Scalars['String']['input']
  type: ActivityParameterType
}

export enum ActivityParameterType {
  Context = 'CONTEXT',
  Supplementary = 'SUPPLEMENTARY',
  SupplementaryArray = 'SUPPLEMENTARY_ARRAY',
}

export enum AttributeType {
  Collection = 'COLLECTION',
  Date = 'DATE',
  DateTime = 'DATE_TIME',
  Float = 'FLOAT',
  Int = 'INT',
  Metadata = 'METADATA',
  Profile = 'PROFILE',
  String = 'STRING',
}

export enum AttributeUiType {
  Collection = 'COLLECTION',
  File = 'FILE',
  Image = 'IMAGE',
  Input = 'INPUT',
  Metadata = 'METADATA',
  Profile = 'PROFILE',
  Textarea = 'TEXTAREA',
}

export type AttributesFilterInput = {
  attributes: Array<Scalars['String']['input']>
  childAttributes?: InputMaybe<AttributesFilterInput>
}

export type BeginTransitionInput = {
  collectionId?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  restart?: InputMaybe<Scalars['Boolean']['input']>
  stateId: Scalars['String']['input']
  stateValid?: InputMaybe<Scalars['DateTime']['input']>
  status: Scalars['String']['input']
  supplementaryId?: InputMaybe<Scalars['String']['input']>
  version?: InputMaybe<Scalars['Int']['input']>
  waitForCompletion?: InputMaybe<Scalars['Boolean']['input']>
}

export type Categories = {
  __typename?: 'Categories'
  all: Array<Category>
}

export type Category = {
  __typename?: 'Category'
  id: Scalars['String']['output']
  name: Scalars['String']['output']
}

export type CategoryInput = {
  name: Scalars['String']['input']
}

export type CategoryMutation = {
  __typename?: 'CategoryMutation'
  add: Category
  delete: Scalars['Boolean']['output']
  edit: Category
}

export type CategoryMutationAddArgs = {
  category: CategoryInput
}

export type CategoryMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type CategoryMutationEditArgs = {
  category: CategoryInput
  id: Scalars['String']['input']
}

export type Collection = {
  __typename?: 'Collection'
  attributes?: Maybe<Scalars['JSON']['output']>
  categories: Array<Category>
  collections: Array<Collection>
  collectionsCount: Scalars['Int']['output']
  created: Scalars['DateTime']['output']
  deleted: Scalars['Boolean']['output']
  description?: Maybe<Scalars['String']['output']>
  etag?: Maybe<Scalars['String']['output']>
  id: Scalars['String']['output']
  itemAttributes?: Maybe<Scalars['JSON']['output']>
  items: Array<CollectionItem>
  itemsCount: Scalars['Int']['output']
  labels: Array<Scalars['String']['output']>
  metadata: Array<Metadata>
  metadataCount: Scalars['Int']['output']
  metadataRelationships: Array<CollectionMetadataRelationship>
  modified: Scalars['DateTime']['output']
  name: Scalars['String']['output']
  ordering?: Maybe<Array<Ordering>>
  parentCollections: Array<Collection>
  permissions: Array<Permission>
  public: Scalars['Boolean']['output']
  publicList: Scalars['Boolean']['output']
  publicSupplementary: Scalars['Boolean']['output']
  ready?: Maybe<Scalars['DateTime']['output']>
  slug?: Maybe<Scalars['String']['output']>
  supplementary: Array<CollectionSupplementary>
  systemAttributes?: Maybe<Scalars['JSON']['output']>
  templateMetadata?: Maybe<Metadata>
  traitIds: Array<Scalars['String']['output']>
  type: CollectionType
  workflow: CollectionWorkflow
}

export type CollectionAttributesArgs = {
  filter?: InputMaybe<AttributesFilterInput>
}

export type CollectionCollectionsArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type CollectionEtagArgs = {
  addHeader: Scalars['Boolean']['input']
}

export type CollectionItemsArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type CollectionMetadataArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type CollectionParentCollectionsArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type CollectionSupplementaryArgs = {
  key?: InputMaybe<Scalars['String']['input']>
  planId?: InputMaybe<Scalars['String']['input']>
}

export type CollectionChildInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  collection: CollectionInput
}

export type CollectionInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  categoryIds?: InputMaybe<Array<Scalars['String']['input']>>
  collectionType?: InputMaybe<CollectionType>
  collections?: InputMaybe<Array<CollectionChildInput>>
  description?: InputMaybe<Scalars['String']['input']>
  labels?: InputMaybe<Array<Scalars['String']['input']>>
  metadata?: InputMaybe<Array<MetadataChildInput>>
  name: Scalars['String']['input']
  ordering?: InputMaybe<Array<OrderingInput>>
  parentCollectionId?: InputMaybe<Scalars['String']['input']>
  slug?: InputMaybe<Scalars['String']['input']>
  state?: InputMaybe<CollectionWorkflowInput>
  templateMetadataId?: InputMaybe<Scalars['String']['input']>
  templateMetadataVersion?: InputMaybe<Scalars['Int']['input']>
  traitIds?: InputMaybe<Array<Scalars['String']['input']>>
}

export type CollectionItem = Collection | Metadata

export type CollectionMetadataRelationship = {
  __typename?: 'CollectionMetadataRelationship'
  attributes?: Maybe<Scalars['JSON']['output']>
  metadata: Metadata
  relationship?: Maybe<Scalars['String']['output']>
}

export type CollectionMetadataRelationshipInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  id: Scalars['String']['input']
  metadataId: Scalars['String']['input']
  relationship?: InputMaybe<Scalars['String']['input']>
}

export type CollectionMutation = {
  __typename?: 'CollectionMutation'
  add: Collection
  addBulk: Array<Collection>
  addChildCollection: Collection
  addChildMetadata: Collection
  addMetadataRelationship: CollectionMetadataRelationship
  addPermission: Permission
  addSupplementary: CollectionSupplementary
  delete: Scalars['Boolean']['output']
  deleteMetadataRelationship: Scalars['Boolean']['output']
  deletePermission: Permission
  deleteSupplementary: Scalars['Boolean']['output']
  edit: Collection
  editMetadataRelationship: Scalars['Boolean']['output']
  permanentlyDelete: Scalars['Boolean']['output']
  removeChildCollection: Collection
  removeChildMetadata: Collection
  setChildItemAttributes: Collection
  setCollectionAttributes: Scalars['Boolean']['output']
  setCollectionOrdering: Scalars['Boolean']['output']
  setPublic: Collection
  setPublicList: Collection
  setPublicSupplementary: Collection
  setReady: Scalars['Boolean']['output']
  setSupplementaryContents: Scalars['Boolean']['output']
  setSupplementaryTextContents: Scalars['Boolean']['output']
  setSupplementaryUploaded: Scalars['Boolean']['output']
  setWorkflowState: Scalars['Boolean']['output']
  setWorkflowStateComplete: Scalars['Boolean']['output']
}

export type CollectionMutationAddArgs = {
  collection: CollectionInput
  collectionItemAttributes?: InputMaybe<Scalars['JSON']['input']>
}

export type CollectionMutationAddBulkArgs = {
  collections: Array<CollectionChildInput>
}

export type CollectionMutationAddChildCollectionArgs = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  collectionId: Scalars['String']['input']
  id: Scalars['String']['input']
}

export type CollectionMutationAddChildMetadataArgs = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  id: Scalars['String']['input']
  metadataId: Scalars['String']['input']
}

export type CollectionMutationAddMetadataRelationshipArgs = {
  relationship: CollectionMetadataRelationshipInput
}

export type CollectionMutationAddPermissionArgs = {
  permission: PermissionInput
}

export type CollectionMutationAddSupplementaryArgs = {
  supplementary: CollectionSupplementaryInput
}

export type CollectionMutationDeleteArgs = {
  id: Scalars['String']['input']
  recursive?: InputMaybe<Scalars['Boolean']['input']>
}

export type CollectionMutationDeleteMetadataRelationshipArgs = {
  id: Scalars['String']['input']
  metadataId: Scalars['String']['input']
  relationship: Scalars['String']['input']
}

export type CollectionMutationDeletePermissionArgs = {
  permission: PermissionInput
}

export type CollectionMutationDeleteSupplementaryArgs = {
  id: Scalars['String']['input']
}

export type CollectionMutationEditArgs = {
  collection: CollectionInput
  id: Scalars['String']['input']
}

export type CollectionMutationEditMetadataRelationshipArgs = {
  relationship: CollectionMetadataRelationshipInput
}

export type CollectionMutationPermanentlyDeleteArgs = {
  collectionId: Scalars['String']['input']
  recursive?: InputMaybe<Scalars['Boolean']['input']>
}

export type CollectionMutationRemoveChildCollectionArgs = {
  collectionId: Scalars['String']['input']
  id: Scalars['String']['input']
}

export type CollectionMutationRemoveChildMetadataArgs = {
  id: Scalars['String']['input']
  metadataId: Scalars['String']['input']
}

export type CollectionMutationSetChildItemAttributesArgs = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  childCollectionId?: InputMaybe<Scalars['String']['input']>
  childMetadataId?: InputMaybe<Scalars['String']['input']>
  id: Scalars['String']['input']
}

export type CollectionMutationSetCollectionAttributesArgs = {
  attributes: Scalars['JSON']['input']
  id: Scalars['String']['input']
}

export type CollectionMutationSetCollectionOrderingArgs = {
  id: Scalars['String']['input']
  ordering: Scalars['JSON']['input']
}

export type CollectionMutationSetPublicArgs = {
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}

export type CollectionMutationSetPublicListArgs = {
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}

export type CollectionMutationSetPublicSupplementaryArgs = {
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}

export type CollectionMutationSetReadyArgs = {
  id: Scalars['String']['input']
}

export type CollectionMutationSetSupplementaryContentsArgs = {
  contentType: Scalars['String']['input']
  file: Scalars['Upload']['input']
  supplementaryId: Scalars['String']['input']
}

export type CollectionMutationSetSupplementaryTextContentsArgs = {
  content: Scalars['String']['input']
  contentType: Scalars['String']['input']
  supplementaryId: Scalars['String']['input']
}

export type CollectionMutationSetSupplementaryUploadedArgs = {
  contentType: Scalars['String']['input']
  len: Scalars['Int']['input']
  supplementaryId: Scalars['String']['input']
}

export type CollectionMutationSetWorkflowStateArgs = {
  state: CollectionWorkflowState
}

export type CollectionMutationSetWorkflowStateCompleteArgs = {
  state: CollectionWorkflowCompleteState
}

export type CollectionSupplementary = {
  __typename?: 'CollectionSupplementary'
  attributes?: Maybe<Scalars['JSON']['output']>
  collectionId: Scalars['String']['output']
  content: CollectionSupplementaryContent
  created: Scalars['String']['output']
  id: Scalars['String']['output']
  key: Scalars['String']['output']
  modified: Scalars['String']['output']
  name: Scalars['String']['output']
  planId?: Maybe<Scalars['String']['output']>
  source: CollectionSupplementarySource
  uploaded?: Maybe<Scalars['String']['output']>
}

export type CollectionSupplementaryContent = {
  __typename?: 'CollectionSupplementaryContent'
  json: Scalars['JSON']['output']
  length?: Maybe<Scalars['Int']['output']>
  text: Scalars['String']['output']
  type: Scalars['String']['output']
  urls: CollectionSupplementaryContentUrls
}

export type CollectionSupplementaryContentUrls = {
  __typename?: 'CollectionSupplementaryContentUrls'
  download: SignedUrl
  upload: SignedUrl
}

export type CollectionSupplementaryInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  collectionId: Scalars['String']['input']
  contentLength?: InputMaybe<Scalars['Int']['input']>
  contentType: Scalars['String']['input']
  key: Scalars['String']['input']
  name: Scalars['String']['input']
  planId: Scalars['String']['input']
  sourceId?: InputMaybe<Scalars['String']['input']>
  sourceIdentifier?: InputMaybe<Scalars['String']['input']>
}

export type CollectionSupplementarySource = {
  __typename?: 'CollectionSupplementarySource'
  id: Scalars['String']['output']
  identifier?: Maybe<Scalars['String']['output']>
}

export type CollectionTemplate = {
  __typename?: 'CollectionTemplate'
  attributes: Array<TemplateAttribute>
  collectionFilter?: Maybe<FindQueries>
  configuration?: Maybe<Scalars['JSON']['output']>
  defaultAttributes?: Maybe<Scalars['JSON']['output']>
  metadata?: Maybe<Metadata>
  metadataFilter?: Maybe<FindQueries>
}

export type CollectionTemplateInput = {
  attributes: Array<TemplateAttributeInput>
  collectionFilter?: InputMaybe<FindQueriesInput>
  configuration?: InputMaybe<Scalars['JSON']['input']>
  defaultAttributes?: InputMaybe<Scalars['JSON']['input']>
  metadataFilter?: InputMaybe<FindQueriesInput>
}

export type CollectionTemplates = {
  __typename?: 'CollectionTemplates'
  all: Array<CollectionTemplate>
}

export enum CollectionType {
  Folder = 'FOLDER',
  Queue = 'QUEUE',
  Root = 'ROOT',
  Standard = 'STANDARD',
  System = 'SYSTEM',
}

export type CollectionWorkflow = {
  __typename?: 'CollectionWorkflow'
  deleteWorkflow?: Maybe<Scalars['String']['output']>
  pending?: Maybe<Scalars['String']['output']>
  plans: Array<WorkflowExecutionPlan>
  running: Scalars['Int']['output']
  state: Scalars['String']['output']
  stateValid?: Maybe<Scalars['DateTime']['output']>
}

export type CollectionWorkflowCompleteState = {
  collectionId: Scalars['String']['input']
  status: Scalars['String']['input']
}

export type CollectionWorkflowInput = {
  deleteWorkflowId?: InputMaybe<Scalars['String']['input']>
  state: Scalars['String']['input']
}

export type CollectionWorkflowState = {
  collectionId: Scalars['String']['input']
  immediate: Scalars['Boolean']['input']
  stateId: Scalars['String']['input']
  status: Scalars['String']['input']
}

export type Configuration = {
  __typename?: 'Configuration'
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  key: Scalars['String']['output']
  permissions: Array<ConfigurationPermission>
  value?: Maybe<Scalars['JSON']['output']>
}

export type ConfigurationInput = {
  description: Scalars['String']['input']
  key: Scalars['String']['input']
  permissions: Array<PermissionInput>
  public: Scalars['Boolean']['input']
  value: Scalars['JSON']['input']
}

export type ConfigurationPermission = {
  __typename?: 'ConfigurationPermission'
  action: PermissionAction
  group: Group
}

export type Configurations = {
  __typename?: 'Configurations'
  all: Array<Configuration>
  configuration?: Maybe<Configuration>
}

export type ConfigurationsConfigurationArgs = {
  key: Scalars['String']['input']
}

export type ConfigurationsMutation = {
  __typename?: 'ConfigurationsMutation'
  deleteConfiguration?: Maybe<Scalars['String']['output']>
  setConfiguration?: Maybe<Configuration>
}

export type ConfigurationsMutationDeleteConfigurationArgs = {
  key: Scalars['String']['input']
}

export type ConfigurationsMutationSetConfigurationArgs = {
  configuration: ConfigurationInput
}

export type Content = {
  __typename?: 'Content'
  categories: Categories
  collection?: Maybe<Collection>
  collectionSupplementary?: Maybe<CollectionSupplementary>
  collectionTemplates: CollectionTemplates
  documentTemplates: DocumentTemplates
  findCollections: Array<Collection>
  findCollectionsCount: Scalars['Int']['output']
  findMetadata: Array<Metadata>
  findMetadataCount: Scalars['Int']['output']
  guideTemplates: GuideTemplates
  metadata?: Maybe<Metadata>
  metadataSupplementary?: Maybe<MetadataSupplementary>
  slug?: Maybe<ContentItem>
  sources: Sources
}

export type ContentCollectionArgs = {
  id?: InputMaybe<Scalars['String']['input']>
}

export type ContentCollectionSupplementaryArgs = {
  supplementaryId: Scalars['String']['input']
}

export type ContentFindCollectionsArgs = {
  query: FindQueryInput
}

export type ContentFindCollectionsCountArgs = {
  query: FindQueryInput
}

export type ContentFindMetadataArgs = {
  query: FindQueryInput
}

export type ContentFindMetadataCountArgs = {
  query: FindQueryInput
}

export type ContentMetadataArgs = {
  id: Scalars['String']['input']
  version?: InputMaybe<Scalars['Int']['input']>
}

export type ContentMetadataSupplementaryArgs = {
  supplementaryId: Scalars['String']['input']
}

export type ContentSlugArgs = {
  slug: Scalars['String']['input']
}

export type ContentItem = Collection | Metadata | Profile

export type ContentMutation = {
  __typename?: 'ContentMutation'
  category: CategoryMutation
  collection: CollectionMutation
  metadata: MetadataMutation
  rebuildStorageSystemContent: Scalars['Boolean']['output']
  sources: SourceMutation
}

export type Document = {
  __typename?: 'Document'
  content: Scalars['JSON']['output']
  template?: Maybe<Metadata>
  title: Scalars['String']['output']
}

export type DocumentInput = {
  content: Scalars['JSON']['input']
  templateMetadataId?: InputMaybe<Scalars['String']['input']>
  templateMetadataVersion?: InputMaybe<Scalars['Int']['input']>
  title: Scalars['String']['input']
}

export type DocumentTemplate = {
  __typename?: 'DocumentTemplate'
  attributes: Array<TemplateAttribute>
  configuration?: Maybe<Scalars['JSON']['output']>
  containers: Array<DocumentTemplateContainer>
  content: Scalars['JSON']['output']
  defaultAttributes?: Maybe<Scalars['JSON']['output']>
  metadata?: Maybe<Metadata>
  schema?: Maybe<Scalars['JSON']['output']>
}

export type DocumentTemplateContainer = {
  __typename?: 'DocumentTemplateContainer'
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  supplementaryKey?: Maybe<Scalars['String']['output']>
  workflows: Array<TemplateWorkflow>
}

export type DocumentTemplateContainerInput = {
  description: Scalars['String']['input']
  id: Scalars['String']['input']
  name: Scalars['String']['input']
  supplementaryKey?: InputMaybe<Scalars['String']['input']>
  workflows: Array<TemplateWorkflowInput>
}

export type DocumentTemplateInput = {
  attributes: Array<TemplateAttributeInput>
  configuration?: InputMaybe<Scalars['JSON']['input']>
  containers?: InputMaybe<Array<DocumentTemplateContainerInput>>
  content: Scalars['JSON']['input']
  defaultAttributes?: InputMaybe<Scalars['JSON']['input']>
  schema?: InputMaybe<Scalars['JSON']['input']>
}

export type DocumentTemplates = {
  __typename?: 'DocumentTemplates'
  all: Array<DocumentTemplate>
}

export enum ExtensionFilterType {
  CollectionTemplate = 'COLLECTION_TEMPLATE',
  Document = 'DOCUMENT',
  DocumentTemplate = 'DOCUMENT_TEMPLATE',
  Guide = 'GUIDE',
  GuideTemplate = 'GUIDE_TEMPLATE',
}

export type FindAttribute = {
  __typename?: 'FindAttribute'
  key: Scalars['String']['output']
  value: Scalars['String']['output']
}

export type FindAttributeInput = {
  key: Scalars['String']['input']
  value: Scalars['String']['input']
}

export type FindAttributes = {
  __typename?: 'FindAttributes'
  attributes: Array<FindAttribute>
}

export type FindAttributesInput = {
  attributes: Array<FindAttributeInput>
}

export type FindQueries = {
  __typename?: 'FindQueries'
  options: Array<FindQueryOption>
}

export type FindQueriesInput = {
  options: Array<FindQueryOptionInput>
}

export type FindQuery = {
  __typename?: 'FindQuery'
  attributes: Array<FindAttributes>
  categoryIds?: Maybe<Array<Scalars['String']['output']>>
  collectionType?: Maybe<CollectionType>
  contentTypes?: Maybe<Array<Scalars['String']['output']>>
  extensionFilter?: Maybe<ExtensionFilterType>
  limit?: Maybe<Scalars['Int']['output']>
  offset?: Maybe<Scalars['Int']['output']>
}

export type FindQueryInput = {
  attributes: Array<FindAttributesInput>
  categoryIds?: InputMaybe<Array<Scalars['String']['input']>>
  collectionType?: InputMaybe<CollectionType>
  contentTypes?: InputMaybe<Array<Scalars['String']['input']>>
  extensionFilter?: InputMaybe<ExtensionFilterType>
  limit?: InputMaybe<Scalars['Int']['input']>
  offset?: InputMaybe<Scalars['Int']['input']>
  ordering?: InputMaybe<Array<OrderingInput>>
}

export type FindQueryOption = {
  __typename?: 'FindQueryOption'
  name: Scalars['String']['output']
  query: FindQuery
}

export type FindQueryOptionInput = {
  name: Scalars['String']['input']
  query: FindQueryInput
}

export type Group = {
  __typename?: 'Group'
  id: Scalars['String']['output']
  name: Scalars['String']['output']
}

export type Groups = {
  __typename?: 'Groups'
  all: Array<Group>
}

export type GroupsAllArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type Guide = {
  __typename?: 'Guide'
  recurrences?: Maybe<Array<Scalars['DateTime']['output']>>
  rrule?: Maybe<Scalars['String']['output']>
  step?: Maybe<GuideStep>
  stepCount: Scalars['Int']['output']
  steps: Array<GuideStep>
  template?: Maybe<Metadata>
  type: GuideType
}

export type GuideStepArgs = {
  date?: InputMaybe<Scalars['DateTime']['input']>
  stepId?: InputMaybe<Scalars['Int']['input']>
}

export type GuideStepsArgs = {
  limit?: InputMaybe<Scalars['Int']['input']>
  offset?: InputMaybe<Scalars['Int']['input']>
}

export type GuideInput = {
  guideType: GuideType
  rrule?: InputMaybe<Scalars['String']['input']>
  steps: Array<GuideStepInput>
  templateMetadataId?: InputMaybe<Scalars['String']['input']>
  templateMetadataVersion?: InputMaybe<Scalars['Int']['input']>
}

export type GuideStep = {
  __typename?: 'GuideStep'
  date?: Maybe<Scalars['DateTime']['output']>
  id: Scalars['Int']['output']
  metadata?: Maybe<Metadata>
  modules: Array<GuideStepModule>
}

export type GuideStepInput = {
  metadata?: InputMaybe<MetadataInput>
  modules: Array<GuideStepModuleInput>
  stepMetadataId?: InputMaybe<Scalars['String']['input']>
  stepMetadataVersion?: InputMaybe<Scalars['Int']['input']>
}

export type GuideStepModule = {
  __typename?: 'GuideStepModule'
  id: Scalars['Int']['output']
  metadata?: Maybe<Metadata>
}

export type GuideStepModuleInput = {
  metadata?: InputMaybe<MetadataInput>
  moduleMetadataId?: InputMaybe<Scalars['String']['input']>
  moduleMetadataVersion?: InputMaybe<Scalars['Int']['input']>
}

export type GuideTemplate = {
  __typename?: 'GuideTemplate'
  rrule?: Maybe<Scalars['String']['output']>
  steps: Array<GuideTemplateStep>
  type: GuideType
}

export type GuideTemplateInput = {
  rrule: Scalars['String']['input']
  steps: Array<GuideTemplateStepInput>
  type: GuideType
}

export type GuideTemplateStep = {
  __typename?: 'GuideTemplateStep'
  id: Scalars['Int']['output']
  metadata?: Maybe<Metadata>
  modules: Array<GuideTemplateStepModule>
}

export type GuideTemplateStepInput = {
  modules: Array<GuideTemplateStepModuleInput>
  templateMetadataId: Scalars['String']['input']
  templateMetadataVersion: Scalars['Int']['input']
}

export type GuideTemplateStepModule = {
  __typename?: 'GuideTemplateStepModule'
  id: Scalars['Int']['output']
  metadata?: Maybe<Metadata>
}

export type GuideTemplateStepModuleInput = {
  templateMetadataId: Scalars['String']['input']
  templateMetadataVersion: Scalars['Int']['input']
}

export type GuideTemplates = {
  __typename?: 'GuideTemplates'
  all: Array<GuideTemplate>
}

export enum GuideType {
  Calendar = 'CALENDAR',
  CalendarProgress = 'CALENDAR_PROGRESS',
  Linear = 'LINEAR',
  LinearProgress = 'LINEAR_PROGRESS',
}

export type Login = {
  __typename?: 'Login'
  password: LoginResponse
}

export type LoginPasswordArgs = {
  identifier: Scalars['String']['input']
  password: Scalars['String']['input']
}

export type LoginMutation = {
  __typename?: 'LoginMutation'
  password: LoginResponse
  refreshToken: LoginResponse
}

export type LoginMutationPasswordArgs = {
  identifier: Scalars['String']['input']
  password: Scalars['String']['input']
}

export type LoginMutationRefreshTokenArgs = {
  refreshToken: Scalars['String']['input']
}

export type LoginResponse = {
  __typename?: 'LoginResponse'
  principal: Principal
  profile?: Maybe<Profile>
  refreshToken: Scalars['String']['output']
  token: Token
}

export type Metadata = {
  __typename?: 'Metadata'
  attributes?: Maybe<Scalars['JSON']['output']>
  categories: Array<Category>
  collectionTemplate?: Maybe<CollectionTemplate>
  content: MetadataContent
  created: Scalars['DateTime']['output']
  deleted: Scalars['Boolean']['output']
  document?: Maybe<Document>
  documentTemplate?: Maybe<DocumentTemplate>
  etag?: Maybe<Scalars['String']['output']>
  guide?: Maybe<Guide>
  guideTemplate?: Maybe<GuideTemplate>
  id: Scalars['String']['output']
  itemAttributes?: Maybe<Scalars['JSON']['output']>
  labels: Array<Scalars['String']['output']>
  languageTag: Scalars['String']['output']
  modified: Scalars['DateTime']['output']
  name: Scalars['String']['output']
  parentCollections: Array<Collection>
  parentId?: Maybe<Scalars['String']['output']>
  permissions: Array<Permission>
  profiles: Array<MetadataProfile>
  public: Scalars['Boolean']['output']
  publicContent: Scalars['Boolean']['output']
  publicSupplementary: Scalars['Boolean']['output']
  ready?: Maybe<Scalars['DateTime']['output']>
  relationships: Array<MetadataRelationship>
  slug?: Maybe<Scalars['String']['output']>
  source: MetadataSource
  supplementary: Array<MetadataSupplementary>
  systemAttributes?: Maybe<Scalars['JSON']['output']>
  traitIds: Array<Scalars['String']['output']>
  type: MetadataType
  uploaded?: Maybe<Scalars['DateTime']['output']>
  version: Scalars['Int']['output']
  workflow: MetadataWorkflow
}

export type MetadataAttributesArgs = {
  filter?: InputMaybe<AttributesFilterInput>
}

export type MetadataEtagArgs = {
  addHeader: Scalars['Boolean']['input']
}

export type MetadataParentCollectionsArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type MetadataRelationshipsArgs = {
  filter?: InputMaybe<Array<Scalars['String']['input']>>
}

export type MetadataSupplementaryArgs = {
  key?: InputMaybe<Scalars['String']['input']>
  planId?: InputMaybe<Scalars['String']['input']>
}

export type MetadataChildInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  metadata: MetadataInput
}

export type MetadataContent = {
  __typename?: 'MetadataContent'
  json: Scalars['JSON']['output']
  length?: Maybe<Scalars['Int']['output']>
  text: Scalars['String']['output']
  type: Scalars['String']['output']
  urls: MetadataContentUrls
}

export type MetadataContentUrls = {
  __typename?: 'MetadataContentUrls'
  download: SignedUrl
  upload: SignedUrl
}

export type MetadataInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  categoryIds?: InputMaybe<Array<Scalars['String']['input']>>
  collectionTemplate?: InputMaybe<CollectionTemplateInput>
  contentLength?: InputMaybe<Scalars['Int']['input']>
  contentType: Scalars['String']['input']
  document?: InputMaybe<DocumentInput>
  documentTemplate?: InputMaybe<DocumentTemplateInput>
  guide?: InputMaybe<GuideInput>
  guideTemplate?: InputMaybe<GuideTemplateInput>
  labels?: InputMaybe<Array<Scalars['String']['input']>>
  languageTag: Scalars['String']['input']
  metadataType?: InputMaybe<MetadataType>
  name: Scalars['String']['input']
  parentCollectionId?: InputMaybe<Scalars['String']['input']>
  parentId?: InputMaybe<Scalars['String']['input']>
  profiles?: InputMaybe<Array<MetadataProfileInput>>
  slug?: InputMaybe<Scalars['String']['input']>
  source?: InputMaybe<MetadataSourceInput>
  state?: InputMaybe<MetadataWorkflowInput>
  traitIds?: InputMaybe<Array<Scalars['String']['input']>>
  version?: InputMaybe<Scalars['Int']['input']>
}

export type MetadataMutation = {
  __typename?: 'MetadataMutation'
  add: Metadata
  addBulk: Array<Metadata>
  addCategory: Scalars['Boolean']['output']
  addDocument?: Maybe<Metadata>
  addGuide?: Maybe<Metadata>
  addGuideStep: GuideStep
  addGuideStepModule: GuideStepModule
  addPermission: Permission
  addRelationship: MetadataRelationship
  addSupplementary: MetadataSupplementary
  addTrait: Array<WorkflowExecutionPlan>
  delete: Scalars['Boolean']['output']
  deleteCategory: Scalars['Boolean']['output']
  deleteContent: Scalars['Boolean']['output']
  deleteGuide: Scalars['Boolean']['output']
  deleteGuideStep: Scalars['Boolean']['output']
  deletePermission: Permission
  deleteRelationship: Scalars['Boolean']['output']
  deleteSupplementary: Scalars['Boolean']['output']
  deleteTrait: Array<WorkflowExecutionPlan>
  detachSupplementary: Scalars['Boolean']['output']
  edit: Metadata
  editRelationship: Scalars['Boolean']['output']
  permanentlyDelete: Scalars['Boolean']['output']
  setMetadataAttributes: Scalars['Boolean']['output']
  setMetadataContents: Scalars['Boolean']['output']
  setMetadataDocument: Scalars['Boolean']['output']
  setMetadataJsonContents: Scalars['Boolean']['output']
  setMetadataReady: Scalars['Boolean']['output']
  setMetadataSystemAttributes: Scalars['Boolean']['output']
  setMetadataTextContents: Scalars['Boolean']['output']
  setMetadataUploaded: Scalars['Boolean']['output']
  setPublic: Metadata
  setPublicContent: Metadata
  setPublicSupplementary: Metadata
  setSupplementaryContents: Scalars['Boolean']['output']
  setSupplementaryTextContents: Scalars['Boolean']['output']
  setSupplementaryUploaded: Scalars['Boolean']['output']
  setWorkflowState: Scalars['Boolean']['output']
  setWorkflowStateComplete: Scalars['Boolean']['output']
}

export type MetadataMutationAddArgs = {
  collectionItemAttributes?: InputMaybe<Scalars['JSON']['input']>
  metadata: MetadataInput
}

export type MetadataMutationAddBulkArgs = {
  metadatas: Array<MetadataChildInput>
}

export type MetadataMutationAddCategoryArgs = {
  categoryId: Scalars['String']['input']
  metadataId: Scalars['String']['input']
}

export type MetadataMutationAddDocumentArgs = {
  parentCollectionId: Scalars['String']['input']
  templateId: Scalars['String']['input']
  templateVersion: Scalars['Int']['input']
}

export type MetadataMutationAddGuideArgs = {
  parentCollectionId: Scalars['String']['input']
  templateId: Scalars['String']['input']
  templateVersion: Scalars['Int']['input']
}

export type MetadataMutationAddGuideStepArgs = {
  metadataId: Scalars['String']['input']
  metadataVersion: Scalars['Int']['input']
  sort: Scalars['Int']['input']
  templateId: Scalars['String']['input']
  templateStepId: Scalars['Int']['input']
  templateVersion: Scalars['Int']['input']
}

export type MetadataMutationAddGuideStepModuleArgs = {
  metadataId: Scalars['String']['input']
  metadataVersion: Scalars['Int']['input']
  sort: Scalars['Int']['input']
  stepId: Scalars['Int']['input']
  templateId: Scalars['String']['input']
  templateModuleId: Scalars['Int']['input']
  templateStepId: Scalars['Int']['input']
  templateVersion: Scalars['Int']['input']
}

export type MetadataMutationAddPermissionArgs = {
  permission: PermissionInput
}

export type MetadataMutationAddRelationshipArgs = {
  relationship: MetadataRelationshipInput
}

export type MetadataMutationAddSupplementaryArgs = {
  supplementary: MetadataSupplementaryInput
}

export type MetadataMutationAddTraitArgs = {
  metadataId: Scalars['String']['input']
  traitId: Scalars['String']['input']
}

export type MetadataMutationDeleteArgs = {
  metadataId: Scalars['String']['input']
}

export type MetadataMutationDeleteCategoryArgs = {
  categoryId: Scalars['String']['input']
  metadataId: Scalars['String']['input']
}

export type MetadataMutationDeleteContentArgs = {
  metadataId: Scalars['String']['input']
}

export type MetadataMutationDeleteGuideArgs = {
  metadataId: Scalars['String']['input']
  metadataVersion: Scalars['Int']['input']
}

export type MetadataMutationDeleteGuideStepArgs = {
  metadataId: Scalars['String']['input']
  metadataVersion: Scalars['Int']['input']
  stepId: Scalars['Int']['input']
}

export type MetadataMutationDeletePermissionArgs = {
  permission: PermissionInput
}

export type MetadataMutationDeleteRelationshipArgs = {
  id1: Scalars['String']['input']
  id2: Scalars['String']['input']
  relationship: Scalars['String']['input']
}

export type MetadataMutationDeleteSupplementaryArgs = {
  id: Scalars['String']['input']
}

export type MetadataMutationDeleteTraitArgs = {
  metadataId: Scalars['String']['input']
  traitId: Scalars['String']['input']
}

export type MetadataMutationDetachSupplementaryArgs = {
  id: Scalars['String']['input']
}

export type MetadataMutationEditArgs = {
  id: Scalars['String']['input']
  metadata: MetadataInput
}

export type MetadataMutationEditRelationshipArgs = {
  relationship: MetadataRelationshipInput
}

export type MetadataMutationPermanentlyDeleteArgs = {
  metadataId: Scalars['String']['input']
}

export type MetadataMutationSetMetadataAttributesArgs = {
  attributes: Scalars['JSON']['input']
  id: Scalars['String']['input']
}

export type MetadataMutationSetMetadataContentsArgs = {
  contentType?: InputMaybe<Scalars['String']['input']>
  file: Scalars['Upload']['input']
  id: Scalars['String']['input']
}

export type MetadataMutationSetMetadataDocumentArgs = {
  document: DocumentInput
  id: Scalars['String']['input']
  version: Scalars['Int']['input']
}

export type MetadataMutationSetMetadataJsonContentsArgs = {
  content: Scalars['JSON']['input']
  contentType?: InputMaybe<Scalars['String']['input']>
  id: Scalars['String']['input']
}

export type MetadataMutationSetMetadataReadyArgs = {
  configurations?: InputMaybe<Array<WorkflowConfigurationInput>>
  id: Scalars['String']['input']
}

export type MetadataMutationSetMetadataSystemAttributesArgs = {
  attributes: Scalars['JSON']['input']
  id: Scalars['String']['input']
}

export type MetadataMutationSetMetadataTextContentsArgs = {
  content: Scalars['String']['input']
  contentType?: InputMaybe<Scalars['String']['input']>
  id: Scalars['String']['input']
}

export type MetadataMutationSetMetadataUploadedArgs = {
  configurations?: InputMaybe<Array<WorkflowConfigurationInput>>
  contentType?: InputMaybe<Scalars['String']['input']>
  id: Scalars['String']['input']
  len: Scalars['Int']['input']
  ready?: InputMaybe<Scalars['Boolean']['input']>
}

export type MetadataMutationSetPublicArgs = {
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}

export type MetadataMutationSetPublicContentArgs = {
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}

export type MetadataMutationSetPublicSupplementaryArgs = {
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}

export type MetadataMutationSetSupplementaryContentsArgs = {
  contentType: Scalars['String']['input']
  file: Scalars['Upload']['input']
  supplementaryId: Scalars['String']['input']
}

export type MetadataMutationSetSupplementaryTextContentsArgs = {
  content: Scalars['String']['input']
  contentType: Scalars['String']['input']
  supplementaryId: Scalars['String']['input']
}

export type MetadataMutationSetSupplementaryUploadedArgs = {
  contentType: Scalars['String']['input']
  len: Scalars['Int']['input']
  supplementaryId: Scalars['String']['input']
}

export type MetadataMutationSetWorkflowStateArgs = {
  state: MetadataWorkflowState
}

export type MetadataMutationSetWorkflowStateCompleteArgs = {
  state: MetadataWorkflowCompleteState
}

export type MetadataProfile = {
  __typename?: 'MetadataProfile'
  profile?: Maybe<Profile>
  relationship: Scalars['String']['output']
}

export type MetadataProfileInput = {
  profileId: Scalars['String']['input']
  relationship: Scalars['String']['input']
}

export type MetadataRelationship = {
  __typename?: 'MetadataRelationship'
  attributes?: Maybe<Scalars['JSON']['output']>
  id: Scalars['String']['output']
  metadata: Metadata
  relationship: Scalars['String']['output']
}

export type MetadataRelationshipInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  id1: Scalars['String']['input']
  id2: Scalars['String']['input']
  relationship?: InputMaybe<Scalars['String']['input']>
}

export type MetadataSource = {
  __typename?: 'MetadataSource'
  id?: Maybe<Scalars['String']['output']>
  identifier?: Maybe<Scalars['String']['output']>
  sourceUrl?: Maybe<Scalars['String']['output']>
}

export type MetadataSourceInput = {
  id?: InputMaybe<Scalars['String']['input']>
  identifier?: InputMaybe<Scalars['String']['input']>
  sourceUrl?: InputMaybe<Scalars['String']['input']>
}

export type MetadataSupplementary = {
  __typename?: 'MetadataSupplementary'
  attributes?: Maybe<Scalars['JSON']['output']>
  content: MetadataSupplementaryContent
  created: Scalars['String']['output']
  id: Scalars['String']['output']
  key: Scalars['String']['output']
  metadataId: Scalars['String']['output']
  modified: Scalars['String']['output']
  name: Scalars['String']['output']
  planId?: Maybe<Scalars['String']['output']>
  source: MetadataSupplementarySource
  uploaded?: Maybe<Scalars['String']['output']>
}

export type MetadataSupplementaryContent = {
  __typename?: 'MetadataSupplementaryContent'
  json: Scalars['JSON']['output']
  length?: Maybe<Scalars['Int']['output']>
  text: Scalars['String']['output']
  type: Scalars['String']['output']
  urls: MetadataSupplementaryContentUrls
}

export type MetadataSupplementaryContentUrls = {
  __typename?: 'MetadataSupplementaryContentUrls'
  download: SignedUrl
  upload: SignedUrl
}

export type MetadataSupplementaryInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  contentLength?: InputMaybe<Scalars['Int']['input']>
  contentType: Scalars['String']['input']
  key: Scalars['String']['input']
  metadataId: Scalars['String']['input']
  name: Scalars['String']['input']
  planId: Scalars['String']['input']
  sourceId?: InputMaybe<Scalars['String']['input']>
  sourceIdentifier?: InputMaybe<Scalars['String']['input']>
}

export type MetadataSupplementarySource = {
  __typename?: 'MetadataSupplementarySource'
  id: Scalars['String']['output']
  identifier?: Maybe<Scalars['String']['output']>
}

export enum MetadataType {
  Standard = 'STANDARD',
  Variant = 'VARIANT',
}

export type MetadataWorkflow = {
  __typename?: 'MetadataWorkflow'
  deleteWorkflow?: Maybe<Scalars['String']['output']>
  pending?: Maybe<Scalars['String']['output']>
  plans: Array<WorkflowExecutionPlan>
  running: Scalars['Int']['output']
  state: Scalars['String']['output']
  stateValid?: Maybe<Scalars['DateTime']['output']>
}

export type MetadataWorkflowCompleteState = {
  metadataId: Scalars['String']['input']
  status: Scalars['String']['input']
}

export type MetadataWorkflowInput = {
  deleteWorkflowId?: InputMaybe<Scalars['String']['input']>
  state: Scalars['String']['input']
}

export type MetadataWorkflowState = {
  immediate: Scalars['Boolean']['input']
  metadataId: Scalars['String']['input']
  stateId: Scalars['String']['input']
  status: Scalars['String']['input']
}

export type Model = {
  __typename?: 'Model'
  configuration: Scalars['JSON']['output']
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  type: Scalars['String']['output']
}

export type ModelInput = {
  configuration: Scalars['JSON']['input']
  description: Scalars['String']['input']
  name: Scalars['String']['input']
  type: Scalars['String']['input']
}

export type Models = {
  __typename?: 'Models'
  all: Array<Model>
  model?: Maybe<Model>
}

export type ModelsModelArgs = {
  id: Scalars['String']['input']
}

export type ModelsMutation = {
  __typename?: 'ModelsMutation'
  add?: Maybe<Model>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<Model>
}

export type ModelsMutationAddArgs = {
  model: ModelInput
}

export type ModelsMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type ModelsMutationEditArgs = {
  id: Scalars['String']['input']
  model: ModelInput
}

export type Mutation = {
  __typename?: 'Mutation'
  clearCache: Scalars['Boolean']['output']
  configurations: ConfigurationsMutation
  content: ContentMutation
  persistedQueries: PersistedQueriesMutation
  profiles: ProfilesMutation
  security: SecurityMutation
  workflows: WorkflowsMutation
}

export enum Order {
  Ascending = 'ASCENDING',
  Descending = 'DESCENDING',
}

export type Ordering = {
  __typename?: 'Ordering'
  field?: Maybe<Scalars['String']['output']>
  order: Order
  path?: Maybe<Array<Scalars['String']['output']>>
  type?: Maybe<AttributeType>
}

export type OrderingInput = {
  field?: InputMaybe<Scalars['String']['input']>
  order: Order
  path?: InputMaybe<Array<Scalars['String']['input']>>
  type?: InputMaybe<AttributeType>
}

export type Permission = {
  __typename?: 'Permission'
  action: PermissionAction
  group: Group
  groupId: Scalars['String']['output']
}

export enum PermissionAction {
  Delete = 'DELETE',
  Edit = 'EDIT',
  Execute = 'EXECUTE',
  Impersonate = 'IMPERSONATE',
  List = 'LIST',
  Manage = 'MANAGE',
  View = 'VIEW',
}

export type PermissionInput = {
  action: PermissionAction
  entityId: Scalars['String']['input']
  groupId: Scalars['String']['input']
}

export type PersistedQueriesMutation = {
  __typename?: 'PersistedQueriesMutation'
  add: Scalars['Boolean']['output']
  addAll: Scalars['Boolean']['output']
  delete: Scalars['Boolean']['output']
  deleteAll: Scalars['Boolean']['output']
}

export type PersistedQueriesMutationAddArgs = {
  application: Scalars['String']['input']
  query: Scalars['String']['input']
  sha256: Scalars['String']['input']
}

export type PersistedQueriesMutationAddAllArgs = {
  application: Scalars['String']['input']
  queries: Array<PersistedQueryInput>
}

export type PersistedQueriesMutationDeleteArgs = {
  application: Scalars['String']['input']
  sha256: Scalars['String']['input']
}

export type PersistedQueriesObject = {
  __typename?: 'PersistedQueriesObject'
  all: Array<PersistedQuery>
  query?: Maybe<PersistedQuery>
}

export type PersistedQueriesObjectQueryArgs = {
  sha256: Scalars['String']['input']
}

export type PersistedQuery = {
  __typename?: 'PersistedQuery'
  application: Scalars['String']['output']
  query: Scalars['String']['output']
  sha256: Scalars['String']['output']
}

export type PersistedQueryInput = {
  query: Scalars['String']['input']
  sha256: Scalars['String']['input']
}

export type Principal = {
  __typename?: 'Principal'
  groups: Array<Group>
  id: Scalars['String']['output']
  verified: Scalars['Boolean']['output']
}

export type Principals = {
  __typename?: 'Principals'
  all: Array<Principal>
  current: Principal
}

export type PrincipalsAllArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type Profile = {
  __typename?: 'Profile'
  attributes: Array<ProfileAttribute>
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  slug?: Maybe<Scalars['String']['output']>
  visibility: ProfileVisibility
}

export type ProfileAttribute = {
  __typename?: 'ProfileAttribute'
  attributes?: Maybe<Scalars['JSON']['output']>
  confidence: Scalars['Int']['output']
  expires?: Maybe<Scalars['DateTime']['output']>
  id: Scalars['String']['output']
  metadata?: Maybe<Metadata>
  priority: Scalars['Int']['output']
  source: Scalars['String']['output']
  typeId: Scalars['String']['output']
  visibility: ProfileVisibility
}

export type ProfileAttributeInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  confidence: Scalars['Int']['input']
  expiration?: InputMaybe<Scalars['DateTime']['input']>
  id?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  metadataSupplementary?: InputMaybe<Scalars['String']['input']>
  priority: Scalars['Int']['input']
  source: Scalars['String']['input']
  typeId: Scalars['String']['input']
  visibility: ProfileVisibility
}

export type ProfileAttributeType = {
  __typename?: 'ProfileAttributeType'
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  visibility: ProfileVisibility
}

export type ProfileAttributeTypeInput = {
  description: Scalars['String']['input']
  id: Scalars['String']['input']
  name: Scalars['String']['input']
  visibility: ProfileVisibility
}

export type ProfileAttributeTypes = {
  __typename?: 'ProfileAttributeTypes'
  all: Array<ProfileAttributeType>
}

export type ProfileInput = {
  attributes: Array<ProfileAttributeInput>
  name: Scalars['String']['input']
  slug?: InputMaybe<Scalars['String']['input']>
  visibility: ProfileVisibility
}

export enum ProfileVisibility {
  Friends = 'FRIENDS',
  FriendsOfFriends = 'FRIENDS_OF_FRIENDS',
  Public = 'PUBLIC',
  System = 'SYSTEM',
  User = 'USER',
}

export type Profiles = {
  __typename?: 'Profiles'
  all: Array<Profile>
  attributeTypes: ProfileAttributeTypes
  current?: Maybe<Profile>
  profile?: Maybe<Profile>
}

export type ProfilesAllArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
}

export type ProfilesProfileArgs = {
  id: Scalars['String']['input']
}

export type ProfilesMutation = {
  __typename?: 'ProfilesMutation'
  add?: Maybe<Profile>
  addAttributeType: Scalars['Boolean']['output']
  deleteAttributeType: Scalars['Boolean']['output']
  edit?: Maybe<Profile>
  editAttributeType: Scalars['Boolean']['output']
}

export type ProfilesMutationAddArgs = {
  profile: ProfileInput
}

export type ProfilesMutationAddAttributeTypeArgs = {
  attribute: ProfileAttributeTypeInput
}

export type ProfilesMutationDeleteAttributeTypeArgs = {
  attributeId: Scalars['String']['input']
}

export type ProfilesMutationEditArgs = {
  id?: InputMaybe<Scalars['String']['input']>
  profile: ProfileInput
}

export type ProfilesMutationEditAttributeTypeArgs = {
  attribute: ProfileAttributeTypeInput
}

export type Prompt = {
  __typename?: 'Prompt'
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  inputType: Scalars['String']['output']
  name: Scalars['String']['output']
  outputType: Scalars['String']['output']
  schema?: Maybe<Scalars['JSON']['output']>
  systemPrompt: Scalars['String']['output']
  userPrompt: Scalars['String']['output']
}

export type PromptInput = {
  description: Scalars['String']['input']
  inputType: Scalars['String']['input']
  name: Scalars['String']['input']
  outputType: Scalars['String']['input']
  schema?: InputMaybe<Scalars['JSON']['input']>
  systemPrompt: Scalars['String']['input']
  userPrompt: Scalars['String']['input']
}

export type Prompts = {
  __typename?: 'Prompts'
  all: Array<Prompt>
  prompt?: Maybe<Prompt>
}

export type PromptsPromptArgs = {
  id: Scalars['String']['input']
}

export type PromptsMutation = {
  __typename?: 'PromptsMutation'
  add?: Maybe<Prompt>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<Prompt>
}

export type PromptsMutationAddArgs = {
  prompt: PromptInput
}

export type PromptsMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type PromptsMutationEditArgs = {
  id: Scalars['String']['input']
  prompt: PromptInput
}

export type Query = {
  __typename?: 'Query'
  configurations: Configurations
  content: Content
  persistedQueries: PersistedQueriesObject
  profiles: Profiles
  search: SearchResultObject
  security: Security
  server: Server
  workflows: Workflows
}

export type QuerySearchArgs = {
  query: SearchQuery
}

export type SearchDocument = {
  __typename?: 'SearchDocument'
  collection?: Maybe<Collection>
  metadata?: Maybe<Metadata>
  profile?: Maybe<Profile>
}

export type SearchQuery = {
  facets?: InputMaybe<Array<Scalars['String']['input']>>
  filter?: InputMaybe<Scalars['String']['input']>
  limit?: InputMaybe<Scalars['Int']['input']>
  offset?: InputMaybe<Scalars['Int']['input']>
  query: Scalars['String']['input']
  sort?: InputMaybe<Array<Scalars['String']['input']>>
  storageSystemId?: InputMaybe<Scalars['String']['input']>
  storageSystemName?: InputMaybe<Scalars['String']['input']>
}

export type SearchResultFacet = {
  __typename?: 'SearchResultFacet'
  count: Scalars['Int']['output']
  field: Scalars['String']['output']
  value: Scalars['String']['output']
}

export type SearchResultObject = {
  __typename?: 'SearchResultObject'
  documents: Array<SearchDocument>
  estimatedHits: Scalars['Int']['output']
  facets: Array<SearchResultFacet>
}

export type Security = {
  __typename?: 'Security'
  actions: Array<Scalars['String']['output']>
  groups: Groups
  login: Login
  principal: Principal
  principals: Principals
}

export type SecurityMutation = {
  __typename?: 'SecurityMutation'
  addPrincipalGroup: Scalars['Boolean']['output']
  expireRefreshTokens: Scalars['Boolean']['output']
  login: LoginMutation
  signup: SignupMutation
}

export type SecurityMutationAddPrincipalGroupArgs = {
  groupId: Scalars['String']['input']
  principalId: Scalars['String']['input']
}

export type Server = {
  __typename?: 'Server'
  now: Scalars['DateTime']['output']
}

export type SignedUrl = {
  __typename?: 'SignedUrl'
  headers: Array<SignedUrlHeader>
  url: Scalars['String']['output']
}

export type SignedUrlHeader = {
  __typename?: 'SignedUrlHeader'
  name: Scalars['String']['output']
  value: Scalars['String']['output']
}

export type SignupMutation = {
  __typename?: 'SignupMutation'
  password: Principal
  passwordVerify: Scalars['Boolean']['output']
}

export type SignupMutationPasswordArgs = {
  identifier: Scalars['String']['input']
  password: Scalars['String']['input']
  profile: ProfileInput
}

export type SignupMutationPasswordVerifyArgs = {
  verificationToken: Scalars['String']['input']
}

export type Source = {
  __typename?: 'Source'
  configuration: Scalars['JSON']['output']
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  name: Scalars['String']['output']
}

export type SourceInput = {
  configuration: Scalars['JSON']['input']
  description: Scalars['String']['input']
  name: Scalars['String']['input']
}

export type SourceMutation = {
  __typename?: 'SourceMutation'
  add?: Maybe<Source>
}

export type SourceMutationAddArgs = {
  source: SourceInput
}

export type Sources = {
  __typename?: 'Sources'
  all: Array<Source>
  source?: Maybe<Source>
}

export type SourcesSourceArgs = {
  id: Scalars['String']['input']
}

export type StorageSystem = {
  __typename?: 'StorageSystem'
  configuration?: Maybe<Scalars['JSON']['output']>
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  models: Array<StorageSystemModel>
  name: Scalars['String']['output']
  type: StorageSystemType
}

export type StorageSystemInput = {
  configuration?: InputMaybe<Scalars['JSON']['input']>
  description: Scalars['String']['input']
  models: Array<StorageSystemModelInput>
  name: Scalars['String']['input']
  type: StorageSystemType
}

export type StorageSystemModel = {
  __typename?: 'StorageSystemModel'
  configuration: Scalars['JSON']['output']
  model?: Maybe<Model>
  modelId: Scalars['String']['output']
}

export type StorageSystemModelInput = {
  configuration: Scalars['JSON']['input']
  modelId: Scalars['String']['input']
}

export enum StorageSystemType {
  Search = 'SEARCH',
  Supplementary = 'SUPPLEMENTARY',
  Vector = 'VECTOR',
}

export type StorageSystems = {
  __typename?: 'StorageSystems'
  all: Array<StorageSystem>
  storageSystem?: Maybe<StorageSystem>
}

export type StorageSystemsStorageSystemArgs = {
  id: Scalars['String']['input']
}

export type StorageSystemsMutation = {
  __typename?: 'StorageSystemsMutation'
  add?: Maybe<StorageSystem>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<StorageSystem>
}

export type StorageSystemsMutationAddArgs = {
  storageSystem: StorageSystemInput
}

export type StorageSystemsMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type StorageSystemsMutationEditArgs = {
  id: Scalars['String']['input']
  storageSystem: StorageSystemInput
}

export type Subscription = {
  __typename?: 'Subscription'
  activity: Scalars['String']['output']
  category: Scalars['String']['output']
  collection: Scalars['String']['output']
  collectionSupplementary: SupplementaryIdObject
  configuration: Scalars['String']['output']
  metadata: Scalars['String']['output']
  metadataSupplementary: SupplementaryIdObject
  model: Scalars['String']['output']
  prompt: Scalars['String']['output']
  state: Scalars['String']['output']
  storageSystem: Scalars['String']['output']
  trait: Scalars['String']['output']
  transition: TransitionIdObject
  workflow: Scalars['String']['output']
  workflowPlanFailed: WorkflowExecutionId
  workflowPlanFinished: WorkflowExecutionId
  workflowSchedule: Scalars['String']['output']
}

export type SupplementaryIdObject = {
  __typename?: 'SupplementaryIdObject'
  contentId: Scalars['String']['output']
  id: Scalars['String']['output']
  key: Scalars['String']['output']
  planId?: Maybe<Scalars['String']['output']>
}

export type TemplateAttribute = {
  __typename?: 'TemplateAttribute'
  configuration?: Maybe<Scalars['JSON']['output']>
  description: Scalars['String']['output']
  key: Scalars['String']['output']
  list: Scalars['Boolean']['output']
  name: Scalars['String']['output']
  supplementaryKey?: Maybe<Scalars['String']['output']>
  type: AttributeType
  ui: AttributeUiType
  workflows: Array<TemplateWorkflow>
}

export type TemplateAttributeInput = {
  configuration?: InputMaybe<Scalars['JSON']['input']>
  description: Scalars['String']['input']
  key: Scalars['String']['input']
  list: Scalars['Boolean']['input']
  name: Scalars['String']['input']
  supplementaryKey?: InputMaybe<Scalars['String']['input']>
  type: AttributeType
  ui: AttributeUiType
  workflows: Array<TemplateWorkflowInput>
}

export type TemplateWorkflow = {
  __typename?: 'TemplateWorkflow'
  autoRun: Scalars['Boolean']['output']
  workflow?: Maybe<Workflow>
}

export type TemplateWorkflowInput = {
  autoRun: Scalars['Boolean']['input']
  workflowId: Scalars['String']['input']
}

export type Token = {
  __typename?: 'Token'
  expiresAt: Scalars['Int']['output']
  issuedAt: Scalars['Int']['output']
  token: Scalars['String']['output']
}

export type Trait = {
  __typename?: 'Trait'
  contentTypes: Array<Scalars['String']['output']>
  deleteWorkflowId?: Maybe<Scalars['String']['output']>
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  workflowIds: Array<Scalars['String']['output']>
  workflows: Array<Workflow>
}

export type TraitInput = {
  contentTypes: Array<Scalars['String']['input']>
  deleteWorkflowId?: InputMaybe<Scalars['String']['input']>
  description: Scalars['String']['input']
  id: Scalars['String']['input']
  name: Scalars['String']['input']
  workflowIds: Array<Scalars['String']['input']>
}

export type Traits = {
  __typename?: 'Traits'
  all: Array<Trait>
  trait?: Maybe<Trait>
}

export type TraitsTraitArgs = {
  id: Scalars['String']['input']
}

export type TraitsMutation = {
  __typename?: 'TraitsMutation'
  add?: Maybe<Trait>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<Trait>
}

export type TraitsMutationAddArgs = {
  model: TraitInput
}

export type TraitsMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type TraitsMutationEditArgs = {
  model: TraitInput
}

export type Transition = {
  __typename?: 'Transition'
  description: Scalars['String']['output']
  fromStateId: Scalars['String']['output']
  toStateId: Scalars['String']['output']
}

export type TransitionIdObject = {
  __typename?: 'TransitionIdObject'
  fromStateId: Scalars['String']['output']
  toStateId: Scalars['String']['output']
}

export type TransitionInput = {
  description: Scalars['String']['input']
  fromStateId: Scalars['String']['input']
  toStateId: Scalars['String']['input']
}

export type Transitions = {
  __typename?: 'Transitions'
  all: Array<Transition>
  transition?: Maybe<Transition>
}

export type TransitionsTransitionArgs = {
  fromStateId: Scalars['String']['input']
  toStateId: Scalars['String']['input']
}

export type TransitionsMutation = {
  __typename?: 'TransitionsMutation'
  add?: Maybe<Transition>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<Transition>
}

export type TransitionsMutationAddArgs = {
  transition: TransitionInput
}

export type TransitionsMutationDeleteArgs = {
  fromStateId: Scalars['String']['input']
  toStateId: Scalars['String']['input']
}

export type TransitionsMutationEditArgs = {
  transition: TransitionInput
}

export type Workflow = {
  __typename?: 'Workflow'
  activities: Array<WorkflowActivity>
  configuration: Scalars['JSON']['output']
  description: Scalars['String']['output']
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  queue: Scalars['String']['output']
}

export type WorkflowActivity = {
  __typename?: 'WorkflowActivity'
  activityId: Scalars['String']['output']
  configuration?: Maybe<Scalars['JSON']['output']>
  executionGroup: Scalars['Int']['output']
  id: Scalars['Int']['output']
  inputs: Array<WorkflowActivityParameter>
  models: Array<WorkflowActivityModel>
  outputs: Array<WorkflowActivityParameter>
  prompts: Array<WorkflowActivityPrompt>
  queue: Scalars['String']['output']
  storageSystems: Array<WorkflowActivityStorageSystem>
}

export type WorkflowActivityInput = {
  activityId: Scalars['String']['input']
  configuration?: InputMaybe<Scalars['JSON']['input']>
  description: Scalars['String']['input']
  executionGroup: Scalars['Int']['input']
  inputs: Array<WorkflowActivityParameterInput>
  models: Array<WorkflowActivityModelInput>
  outputs: Array<WorkflowActivityParameterInput>
  prompts: Array<WorkflowActivityPromptInput>
  queue: Scalars['String']['input']
  storageSystems: Array<WorkflowActivityStorageSystemInput>
}

export type WorkflowActivityModel = {
  __typename?: 'WorkflowActivityModel'
  configuration?: Maybe<Scalars['JSON']['output']>
  model: Model
}

export type WorkflowActivityModelInput = {
  configuration?: InputMaybe<Scalars['JSON']['input']>
  modelId: Scalars['String']['input']
}

export type WorkflowActivityParameter = {
  __typename?: 'WorkflowActivityParameter'
  name: Scalars['String']['output']
  value: Scalars['String']['output']
}

export type WorkflowActivityParameterInput = {
  name: Scalars['String']['input']
  value: Scalars['String']['input']
}

export type WorkflowActivityPrompt = {
  __typename?: 'WorkflowActivityPrompt'
  configuration?: Maybe<Scalars['JSON']['output']>
  prompt: Prompt
}

export type WorkflowActivityPromptInput = {
  configuration?: InputMaybe<Scalars['JSON']['input']>
  promptId: Scalars['String']['input']
}

export type WorkflowActivityStorageSystem = {
  __typename?: 'WorkflowActivityStorageSystem'
  configuration?: Maybe<Scalars['JSON']['output']>
  system: StorageSystem
}

export type WorkflowActivityStorageSystemInput = {
  configuration?: InputMaybe<Scalars['JSON']['input']>
  systemId: Scalars['String']['input']
}

export type WorkflowConfigurationInput = {
  activityId: Scalars['String']['input']
  configuration: Scalars['JSON']['input']
}

export type WorkflowExecution = WorkflowExecutionPlan | WorkflowJob

export type WorkflowExecutionId = {
  __typename?: 'WorkflowExecutionId'
  id: Scalars['String']['output']
  queue: Scalars['String']['output']
}

export type WorkflowExecutionIdInput = {
  id: Scalars['String']['input']
  queue: Scalars['String']['input']
}

export type WorkflowExecutionPlan = {
  __typename?: 'WorkflowExecutionPlan'
  active: Array<Scalars['Int']['output']>
  cancelled: Scalars['Boolean']['output']
  collectionId?: Maybe<Scalars['String']['output']>
  complete: Array<Scalars['Int']['output']>
  context?: Maybe<Scalars['JSON']['output']>
  error?: Maybe<Scalars['String']['output']>
  failed: Array<Scalars['Int']['output']>
  id: WorkflowExecutionId
  jobs: Array<WorkflowJob>
  metadata?: Maybe<Metadata>
  metadataId?: Maybe<Scalars['String']['output']>
  metadataVersion?: Maybe<Scalars['Int']['output']>
  parent?: Maybe<WorkflowJobId>
  supplementaryId?: Maybe<Scalars['String']['output']>
  workflow: Workflow
}

export type WorkflowInput = {
  activities: Array<WorkflowActivityInput>
  configuration: Scalars['JSON']['input']
  description: Scalars['String']['input']
  id: Scalars['String']['input']
  name: Scalars['String']['input']
  queue: Scalars['String']['input']
}

export type WorkflowJob = {
  __typename?: 'WorkflowJob'
  activity: Activity
  children: Array<WorkflowExecutionId>
  collection?: Maybe<Collection>
  collectionId?: Maybe<Scalars['String']['output']>
  completedChildren: Array<WorkflowExecutionId>
  context?: Maybe<Scalars['JSON']['output']>
  error?: Maybe<Scalars['String']['output']>
  failedChildren: Array<WorkflowExecutionId>
  id: WorkflowJobId
  metadata?: Maybe<Metadata>
  metadataVersion?: Maybe<Scalars['Int']['output']>
  models: Array<WorkflowActivityModel>
  parent?: Maybe<WorkflowJobId>
  planId: WorkflowExecutionId
  profile?: Maybe<Profile>
  prompts: Array<WorkflowActivityPrompt>
  storageSystems: Array<WorkflowActivityStorageSystem>
  supplementaryId?: Maybe<Scalars['String']['output']>
  workflow: Workflow
  workflowActivity: WorkflowActivity
}

export type WorkflowJobId = {
  __typename?: 'WorkflowJobId'
  id: Scalars['String']['output']
  index: Scalars['Int']['output']
  queue: Scalars['String']['output']
}

export type WorkflowJobIdInput = {
  id: Scalars['String']['input']
  index: Scalars['Int']['input']
  queue: Scalars['String']['input']
}

export type WorkflowSchedule = {
  __typename?: 'WorkflowSchedule'
  attributes?: Maybe<Scalars['JSON']['output']>
  collection?: Maybe<Collection>
  configuration?: Maybe<Scalars['JSON']['output']>
  enabled: Scalars['Boolean']['output']
  ends?: Maybe<Scalars['DateTime']['output']>
  id: Scalars['String']['output']
  lastRun?: Maybe<Scalars['DateTime']['output']>
  lastScheduled?: Maybe<Scalars['DateTime']['output']>
  metadata?: Maybe<Metadata>
  nextRun?: Maybe<Scalars['DateTime']['output']>
  rrule: Scalars['String']['output']
  starts: Scalars['DateTime']['output']
  workflow?: Maybe<Workflow>
}

export type WorkflowScheduleInput = {
  attributes?: InputMaybe<Scalars['JSON']['input']>
  configuration?: InputMaybe<Scalars['JSON']['input']>
  enabled: Scalars['Boolean']['input']
  ends?: InputMaybe<Scalars['DateTime']['input']>
  rrule: Scalars['String']['input']
  workflowId: Scalars['String']['input']
}

export type WorkflowSchedules = {
  __typename?: 'WorkflowSchedules'
  all: Array<WorkflowSchedule>
}

export type WorkflowSchedulesMutation = {
  __typename?: 'WorkflowSchedulesMutation'
  add?: Maybe<WorkflowSchedule>
  delete: Scalars['Boolean']['output']
}

export type WorkflowSchedulesMutationAddArgs = {
  collectionId?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  schedule: WorkflowScheduleInput
}

export type WorkflowSchedulesMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type WorkflowState = {
  __typename?: 'WorkflowState'
  configuration?: Maybe<Scalars['JSON']['output']>
  description: Scalars['String']['output']
  entryWorkflowId?: Maybe<Scalars['String']['output']>
  exitWorkflowId?: Maybe<Scalars['String']['output']>
  id: Scalars['String']['output']
  name: Scalars['String']['output']
  type: WorkflowStateType
  workflowId?: Maybe<Scalars['String']['output']>
}

export type WorkflowStateInput = {
  configuration: Scalars['JSON']['input']
  description: Scalars['String']['input']
  entryWorkflowId?: InputMaybe<Scalars['String']['input']>
  exitWorkflowId?: InputMaybe<Scalars['String']['input']>
  id: Scalars['String']['input']
  name: Scalars['String']['input']
  type: WorkflowStateType
  workflowId?: InputMaybe<Scalars['String']['input']>
}

export enum WorkflowStateType {
  Approval = 'APPROVAL',
  Approved = 'APPROVED',
  Draft = 'DRAFT',
  Failure = 'FAILURE',
  Pending = 'PENDING',
  Processing = 'PROCESSING',
  Published = 'PUBLISHED',
}

export type WorkflowStates = {
  __typename?: 'WorkflowStates'
  all: Array<WorkflowState>
  state?: Maybe<WorkflowState>
}

export type WorkflowStatesStateArgs = {
  id: Scalars['String']['input']
}

export type WorkflowStatesMutation = {
  __typename?: 'WorkflowStatesMutation'
  add?: Maybe<WorkflowState>
  delete: Scalars['Boolean']['output']
  edit?: Maybe<WorkflowState>
}

export type WorkflowStatesMutationAddArgs = {
  state: WorkflowStateInput
}

export type WorkflowStatesMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type WorkflowStatesMutationEditArgs = {
  state: WorkflowStateInput
}

export type Workflows = {
  __typename?: 'Workflows'
  activities: Activities
  all: Array<Workflow>
  executionPlan?: Maybe<WorkflowExecutionPlan>
  executions: Array<WorkflowExecution>
  models: Models
  nextJob?: Maybe<WorkflowJob>
  prompts: Prompts
  schedules: WorkflowSchedules
  states: WorkflowStates
  storageSystems: StorageSystems
  traits: Traits
  transitions: Transitions
  workflow?: Maybe<Workflow>
  workflowActivity?: Maybe<WorkflowActivity>
}

export type WorkflowsExecutionPlanArgs = {
  id: Scalars['String']['input']
  queue: Scalars['String']['input']
}

export type WorkflowsExecutionsArgs = {
  limit: Scalars['Int']['input']
  offset: Scalars['Int']['input']
  queue: Scalars['String']['input']
}

export type WorkflowsNextJobArgs = {
  queue: Scalars['String']['input']
}

export type WorkflowsWorkflowArgs = {
  id: Scalars['String']['input']
}

export type WorkflowsWorkflowActivityArgs = {
  id: Scalars['Int']['input']
}

export type WorkflowsMutation = {
  __typename?: 'WorkflowsMutation'
  activities: ActivitiesMutation
  add: Workflow
  beginTransition: Scalars['Boolean']['output']
  cancelTransition: Scalars['Boolean']['output']
  cancelWorkflows: Scalars['Boolean']['output']
  delete: Scalars['Boolean']['output']
  edit: Workflow
  enqueueChildWorkflow: WorkflowExecutionId
  enqueueChildWorkflows: Array<WorkflowExecutionId>
  enqueueWorkflow: WorkflowExecutionId
  expireAll: Scalars['Boolean']['output']
  findAndEnqueueWorkflow: Array<WorkflowExecutionId>
  models: ModelsMutation
  prompts: PromptsMutation
  schedules: WorkflowSchedulesMutation
  setExecutionPlanContext: Scalars['Boolean']['output']
  setExecutionPlanJobCheckin: Scalars['Boolean']['output']
  setExecutionPlanJobComplete: Scalars['Boolean']['output']
  setExecutionPlanJobContext: Scalars['Boolean']['output']
  setExecutionPlanJobDelayed: Scalars['Boolean']['output']
  setExecutionPlanJobFailed: Scalars['Boolean']['output']
  states: WorkflowStatesMutation
  storageSystems: StorageSystemsMutation
  traits: TraitsMutation
  transitions: TransitionsMutation
}

export type WorkflowsMutationAddArgs = {
  workflow: WorkflowInput
}

export type WorkflowsMutationBeginTransitionArgs = {
  configurations?: InputMaybe<Array<WorkflowConfigurationInput>>
  request: BeginTransitionInput
}

export type WorkflowsMutationCancelTransitionArgs = {
  collectionId?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  metadataVersion?: InputMaybe<Scalars['Int']['input']>
}

export type WorkflowsMutationCancelWorkflowsArgs = {
  collectionId?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  metadataVersion?: InputMaybe<Scalars['Int']['input']>
  workflowId: Scalars['String']['input']
}

export type WorkflowsMutationDeleteArgs = {
  id: Scalars['String']['input']
}

export type WorkflowsMutationEditArgs = {
  workflow: WorkflowInput
}

export type WorkflowsMutationEnqueueChildWorkflowArgs = {
  configurations?: InputMaybe<Array<WorkflowConfigurationInput>>
  delayUntil?: InputMaybe<Scalars['DateTime']['input']>
  jobId: WorkflowJobIdInput
  workflowId: Scalars['String']['input']
}

export type WorkflowsMutationEnqueueChildWorkflowsArgs = {
  delayUntil?: InputMaybe<Scalars['DateTime']['input']>
  jobId: WorkflowJobIdInput
  workflowIds: Array<Scalars['String']['input']>
}

export type WorkflowsMutationEnqueueWorkflowArgs = {
  collectionId?: InputMaybe<Scalars['String']['input']>
  configurations?: InputMaybe<Array<WorkflowConfigurationInput>>
  delayUntil?: InputMaybe<Scalars['DateTime']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  version?: InputMaybe<Scalars['Int']['input']>
  workflowId: Scalars['String']['input']
}

export type WorkflowsMutationFindAndEnqueueWorkflowArgs = {
  configurations?: InputMaybe<Array<WorkflowConfigurationInput>>
  delayUntil?: InputMaybe<Scalars['DateTime']['input']>
  query: FindQueryInput
  workflowId: Scalars['String']['input']
}

export type WorkflowsMutationSetExecutionPlanContextArgs = {
  context: Scalars['JSON']['input']
  planId: WorkflowExecutionIdInput
}

export type WorkflowsMutationSetExecutionPlanJobCheckinArgs = {
  jobId: WorkflowJobIdInput
}

export type WorkflowsMutationSetExecutionPlanJobCompleteArgs = {
  jobId: WorkflowJobIdInput
}

export type WorkflowsMutationSetExecutionPlanJobContextArgs = {
  context: Scalars['JSON']['input']
  jobId: WorkflowJobIdInput
}

export type WorkflowsMutationSetExecutionPlanJobDelayedArgs = {
  delayedUntil: Scalars['DateTime']['input']
  jobId: WorkflowJobIdInput
}

export type WorkflowsMutationSetExecutionPlanJobFailedArgs = {
  error: Scalars['String']['input']
  jobId: WorkflowJobIdInput
}

export type AddActivityMutationVariables = Exact<{
  activity: ActivityInput
}>

export type AddActivityMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    activities: {
      __typename?: 'ActivitiesMutation'
      add?: {
        __typename?: 'Activity'
        childWorkflowId?: string | null
        configuration?: any | null
        description: string
        id: string
        name: string
        inputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
        outputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
      } | null
    }
  }
}

export type AddCollectionMutationVariables = Exact<{
  collection: CollectionInput
}>

export type AddCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      add: { __typename?: 'Collection'; id: string }
    }
  }
}

export type AddCollectionCollectionMutationVariables = Exact<{
  collectionId: Scalars['String']['input']
  id: Scalars['String']['input']
}>

export type AddCollectionCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      addChildCollection: { __typename?: 'Collection'; id: string }
    }
  }
}

export type AddCollectionMetadataRelationshipMutationVariables = Exact<{
  relationship: CollectionMetadataRelationshipInput
}>

export type AddCollectionMetadataRelationshipMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      addMetadataRelationship: {
        __typename?: 'CollectionMetadataRelationship'
        metadata: { __typename?: 'Metadata'; id: string }
      }
    }
  }
}

export type AddCollectionPermissionMutationVariables = Exact<{
  permission: PermissionInput
}>

export type AddCollectionPermissionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      addPermission: {
        __typename?: 'Permission'
        groupId: string
        action: PermissionAction
      }
    }
  }
}

export type AddDocumentMutationVariables = Exact<{
  parentCollectionId: Scalars['String']['input']
  templateId: Scalars['String']['input']
  templateVersion: Scalars['Int']['input']
}>

export type AddDocumentMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addDocument?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
    }
  }
}

export type AddGuideMutationVariables = Exact<{
  parentCollectionId: Scalars['String']['input']
  templateId: Scalars['String']['input']
  templateVersion: Scalars['Int']['input']
}>

export type AddGuideMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addGuide?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
    }
  }
}

export type AddGuideStepMutationVariables = Exact<{
  metadataId: Scalars['String']['input']
  version: Scalars['Int']['input']
  sort: Scalars['Int']['input']
  templateId: Scalars['String']['input']
  templateStepId: Scalars['Int']['input']
  templateVersion: Scalars['Int']['input']
}>

export type AddGuideStepMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addGuideStep: {
        __typename?: 'GuideStep'
        id: number
        date?: any | null
        metadata?: {
          __typename: 'Metadata'
          id: string
          version: number
          slug?: string | null
          name: string
          labels: Array<string>
          languageTag: string
          public: boolean
          publicContent: boolean
          publicSupplementary: boolean
          parentId?: string | null
          type: MetadataType
          created: any
          modified: any
          uploaded?: any | null
          ready?: any | null
          attributes?: any | null
          systemAttributes?: any | null
          traitIds: Array<string>
          source: {
            __typename?: 'MetadataSource'
            id?: string | null
            identifier?: string | null
          }
          categories: Array<
            { __typename?: 'Category'; id: string; name: string }
          >
          content: {
            __typename?: 'MetadataContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          workflow: {
            __typename?: 'MetadataWorkflow'
            state: string
            stateValid?: any | null
            pending?: string | null
            running: number
          }
          supplementary: Array<
            {
              __typename?: 'MetadataSupplementary'
              key: string
              name: string
              uploaded?: string | null
              attributes?: any | null
              content: {
                __typename?: 'MetadataSupplementaryContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataSupplementaryContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              source: {
                __typename?: 'MetadataSupplementarySource'
                id: string
                identifier?: string | null
              }
            }
          >
          profiles: Array<
            {
              __typename?: 'MetadataProfile'
              relationship: string
              profile?: {
                __typename: 'Profile'
                id: string
                slug?: string | null
                name: string
                visibility: ProfileVisibility
                attributes: Array<
                  {
                    __typename?: 'ProfileAttribute'
                    id: string
                    typeId: string
                    visibility: ProfileVisibility
                    attributes?: any | null
                    metadata?: {
                      __typename?: 'Metadata'
                      id: string
                      content: {
                        __typename?: 'MetadataContent'
                        urls: {
                          __typename?: 'MetadataContentUrls'
                          download: {
                            __typename?: 'SignedUrl'
                            url: string
                            headers: Array<
                              {
                                __typename?: 'SignedUrlHeader'
                                name: string
                                value: string
                              }
                            >
                          }
                        }
                      }
                    } | null
                  }
                >
              } | null
            }
          >
        } | null
        modules: Array<
          {
            __typename?: 'GuideStepModule'
            metadata?: {
              __typename: 'Metadata'
              id: string
              version: number
              slug?: string | null
              name: string
              labels: Array<string>
              languageTag: string
              public: boolean
              publicContent: boolean
              publicSupplementary: boolean
              parentId?: string | null
              type: MetadataType
              created: any
              modified: any
              uploaded?: any | null
              ready?: any | null
              attributes?: any | null
              systemAttributes?: any | null
              traitIds: Array<string>
              source: {
                __typename?: 'MetadataSource'
                id?: string | null
                identifier?: string | null
              }
              categories: Array<
                { __typename?: 'Category'; id: string; name: string }
              >
              content: {
                __typename?: 'MetadataContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              workflow: {
                __typename?: 'MetadataWorkflow'
                state: string
                stateValid?: any | null
                pending?: string | null
                running: number
              }
              supplementary: Array<
                {
                  __typename?: 'MetadataSupplementary'
                  key: string
                  name: string
                  uploaded?: string | null
                  attributes?: any | null
                  content: {
                    __typename?: 'MetadataSupplementaryContent'
                    type: string
                    length?: number | null
                    urls: {
                      __typename?: 'MetadataSupplementaryContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                  source: {
                    __typename?: 'MetadataSupplementarySource'
                    id: string
                    identifier?: string | null
                  }
                }
              >
              profiles: Array<
                {
                  __typename?: 'MetadataProfile'
                  relationship: string
                  profile?: {
                    __typename: 'Profile'
                    id: string
                    slug?: string | null
                    name: string
                    visibility: ProfileVisibility
                    attributes: Array<
                      {
                        __typename?: 'ProfileAttribute'
                        id: string
                        typeId: string
                        visibility: ProfileVisibility
                        attributes?: any | null
                        metadata?: {
                          __typename?: 'Metadata'
                          id: string
                          content: {
                            __typename?: 'MetadataContent'
                            urls: {
                              __typename?: 'MetadataContentUrls'
                              download: {
                                __typename?: 'SignedUrl'
                                url: string
                                headers: Array<
                                  {
                                    __typename?: 'SignedUrlHeader'
                                    name: string
                                    value: string
                                  }
                                >
                              }
                            }
                          }
                        } | null
                      }
                    >
                  } | null
                }
              >
            } | null
          }
        >
      }
    }
  }
}

export type AddGuideStepModuleMutationVariables = Exact<{
  metadataId: Scalars['String']['input']
  version: Scalars['Int']['input']
  stepId: Scalars['Int']['input']
  sort: Scalars['Int']['input']
  templateId: Scalars['String']['input']
  templateVersion: Scalars['Int']['input']
  templateStepId: Scalars['Int']['input']
  templateModuleId: Scalars['Int']['input']
}>

export type AddGuideStepModuleMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addGuideStepModule: {
        __typename?: 'GuideStepModule'
        metadata?: {
          __typename: 'Metadata'
          id: string
          version: number
          slug?: string | null
          name: string
          labels: Array<string>
          languageTag: string
          public: boolean
          publicContent: boolean
          publicSupplementary: boolean
          parentId?: string | null
          type: MetadataType
          created: any
          modified: any
          uploaded?: any | null
          ready?: any | null
          attributes?: any | null
          systemAttributes?: any | null
          traitIds: Array<string>
          source: {
            __typename?: 'MetadataSource'
            id?: string | null
            identifier?: string | null
          }
          categories: Array<
            { __typename?: 'Category'; id: string; name: string }
          >
          content: {
            __typename?: 'MetadataContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          workflow: {
            __typename?: 'MetadataWorkflow'
            state: string
            stateValid?: any | null
            pending?: string | null
            running: number
          }
          supplementary: Array<
            {
              __typename?: 'MetadataSupplementary'
              key: string
              name: string
              uploaded?: string | null
              attributes?: any | null
              content: {
                __typename?: 'MetadataSupplementaryContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataSupplementaryContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              source: {
                __typename?: 'MetadataSupplementarySource'
                id: string
                identifier?: string | null
              }
            }
          >
          profiles: Array<
            {
              __typename?: 'MetadataProfile'
              relationship: string
              profile?: {
                __typename: 'Profile'
                id: string
                slug?: string | null
                name: string
                visibility: ProfileVisibility
                attributes: Array<
                  {
                    __typename?: 'ProfileAttribute'
                    id: string
                    typeId: string
                    visibility: ProfileVisibility
                    attributes?: any | null
                    metadata?: {
                      __typename?: 'Metadata'
                      id: string
                      content: {
                        __typename?: 'MetadataContent'
                        urls: {
                          __typename?: 'MetadataContentUrls'
                          download: {
                            __typename?: 'SignedUrl'
                            url: string
                            headers: Array<
                              {
                                __typename?: 'SignedUrlHeader'
                                name: string
                                value: string
                              }
                            >
                          }
                        }
                      }
                    } | null
                  }
                >
              } | null
            }
          >
        } | null
      }
    }
  }
}

export type AddMetadataMutationVariables = Exact<{
  metadata: MetadataInput
}>

export type AddMetadataMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      add: { __typename?: 'Metadata'; id: string }
    }
  }
}

export type AddMetadataCollectionMutationVariables = Exact<{
  collectionId: Scalars['String']['input']
  id: Scalars['String']['input']
}>

export type AddMetadataCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      addChildMetadata: { __typename?: 'Collection'; id: string }
    }
  }
}

export type AddMetadataPermissionMutationVariables = Exact<{
  permission: PermissionInput
}>

export type AddMetadataPermissionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addPermission: {
        __typename?: 'Permission'
        groupId: string
        action: PermissionAction
      }
    }
  }
}

export type AddMetadataRelationshipMutationVariables = Exact<{
  relationship: MetadataRelationshipInput
}>

export type AddMetadataRelationshipMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addRelationship: { __typename?: 'MetadataRelationship'; id: string }
    }
  }
}

export type AddMetadataTraitMutationVariables = Exact<{
  metadataId: Scalars['String']['input']
  traitId: Scalars['String']['input']
}>

export type AddMetadataTraitMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      addTrait: Array<
        {
          __typename?: 'WorkflowExecutionPlan'
          id: { __typename?: 'WorkflowExecutionId'; id: string; queue: string }
        }
      >
    }
  }
}

export type AddModelMutationVariables = Exact<{
  model: ModelInput
}>

export type AddModelMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    models: {
      __typename?: 'ModelsMutation'
      add?: {
        __typename?: 'Model'
        id: string
        name: string
        type: string
        description: string
        configuration: any
      } | null
    }
  }
}

export type AddPersistedQueriesMutationVariables = Exact<{
  application: Scalars['String']['input']
  queries: Array<PersistedQueryInput> | PersistedQueryInput
}>

export type AddPersistedQueriesMutation = {
  __typename?: 'Mutation'
  persistedQueries: { __typename?: 'PersistedQueriesMutation'; addAll: boolean }
}

export type AddPromptMutationVariables = Exact<{
  prompt: PromptInput
}>

export type AddPromptMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    prompts: {
      __typename?: 'PromptsMutation'
      add?: {
        __typename?: 'Prompt'
        id: string
        name: string
        description: string
        inputType: string
        outputType: string
        systemPrompt: string
        userPrompt: string
      } | null
    }
  }
}

export type AddStateMutationVariables = Exact<{
  state: WorkflowStateInput
}>

export type AddStateMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    states: {
      __typename?: 'WorkflowStatesMutation'
      add?: {
        __typename?: 'WorkflowState'
        id: string
        name: string
        configuration?: any | null
        description: string
        entryWorkflowId?: string | null
        exitWorkflowId?: string | null
        workflowId?: string | null
        type: WorkflowStateType
      } | null
    }
  }
}

export type AddStorageSystemMutationVariables = Exact<{
  system: StorageSystemInput
}>

export type AddStorageSystemMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    storageSystems: {
      __typename?: 'StorageSystemsMutation'
      add?: {
        __typename?: 'StorageSystem'
        id: string
        name: string
        type: StorageSystemType
        description: string
        configuration?: any | null
        models: Array<
          {
            __typename?: 'StorageSystemModel'
            modelId: string
            configuration: any
          }
        >
      } | null
    }
  }
}

export type AddTraitMutationVariables = Exact<{
  trait: TraitInput
}>

export type AddTraitMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    traits: {
      __typename?: 'TraitsMutation'
      add?: {
        __typename?: 'Trait'
        id: string
        name: string
        description: string
        contentTypes: Array<string>
        workflowIds: Array<string>
        deleteWorkflowId?: string | null
      } | null
    }
  }
}

export type AddTransitionMutationVariables = Exact<{
  transition: TransitionInput
}>

export type AddTransitionMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    transitions: {
      __typename?: 'TransitionsMutation'
      add?: {
        __typename?: 'Transition'
        fromStateId: string
        toStateId: string
        description: string
      } | null
    }
  }
}

export type AddWorkflowMutationVariables = Exact<{
  workflow: WorkflowInput
}>

export type AddWorkflowMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    add: {
      __typename?: 'Workflow'
      id: string
      queue: string
      name: string
      description: string
      configuration: any
    }
  }
}

export type BeginCollectionTransitionMutationVariables = Exact<{
  id: Scalars['String']['input']
  state: Scalars['String']['input']
  status: Scalars['String']['input']
}>

export type BeginCollectionTransitionMutation = {
  __typename?: 'Mutation'
  workflows: { __typename?: 'WorkflowsMutation'; beginTransition: boolean }
}

export type BeginMetadataTransitionMutationVariables = Exact<{
  id: Scalars['String']['input']
  version: Scalars['Int']['input']
  state: Scalars['String']['input']
  status: Scalars['String']['input']
  stateValid?: InputMaybe<Scalars['DateTime']['input']>
}>

export type BeginMetadataTransitionMutation = {
  __typename?: 'Mutation'
  workflows: { __typename?: 'WorkflowsMutation'; beginTransition: boolean }
}

export type CancelMetadataWorkflowsMutationVariables = Exact<{
  id: Scalars['String']['input']
  version: Scalars['Int']['input']
  workflowId: Scalars['String']['input']
}>

export type CancelMetadataWorkflowsMutation = {
  __typename?: 'Mutation'
  workflows: { __typename?: 'WorkflowsMutation'; cancelWorkflows: boolean }
}

export type CancelTransitionMutationVariables = Exact<{
  collectionId?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  version?: InputMaybe<Scalars['Int']['input']>
}>

export type CancelTransitionMutation = {
  __typename?: 'Mutation'
  workflows: { __typename?: 'WorkflowsMutation'; cancelTransition: boolean }
}

export type DeleteActivityMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteActivityMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    activities: { __typename?: 'ActivitiesMutation'; delete: boolean }
  }
}

export type DeleteCollectionMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: { __typename?: 'CollectionMutation'; delete: boolean }
  }
}

export type DeleteConfigurationMutationVariables = Exact<{
  key: Scalars['String']['input']
}>

export type DeleteConfigurationMutation = {
  __typename?: 'Mutation'
  configurations: {
    __typename?: 'ConfigurationsMutation'
    deleteConfiguration?: string | null
  }
}

export type DeleteGuideMutationVariables = Exact<{
  id: Scalars['String']['input']
  version: Scalars['Int']['input']
}>

export type DeleteGuideMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: { __typename?: 'MetadataMutation'; deleteGuide: boolean }
  }
}

export type DeleteGuideStepMutationVariables = Exact<{
  metadataId: Scalars['String']['input']
  version: Scalars['Int']['input']
  stepId: Scalars['Int']['input']
}>

export type DeleteGuideStepMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: { __typename?: 'MetadataMutation'; deleteGuideStep: boolean }
  }
}

export type DeleteMetadataMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteMetadataMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: { __typename?: 'MetadataMutation'; delete: boolean }
  }
}

export type DeleteModelMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteModelMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    models: { __typename?: 'ModelsMutation'; delete: boolean }
  }
}

export type DeletePromptMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeletePromptMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    prompts: { __typename?: 'PromptsMutation'; delete: boolean }
  }
}

export type DeleteStateMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteStateMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    states: { __typename?: 'WorkflowStatesMutation'; delete: boolean }
  }
}

export type DeleteStorageSystemMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteStorageSystemMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    storageSystems: { __typename?: 'StorageSystemsMutation'; delete: boolean }
  }
}

export type DeleteTraitMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteTraitMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    traits: { __typename?: 'TraitsMutation'; delete: boolean }
  }
}

export type DeleteTransitionMutationVariables = Exact<{
  fromStateId: Scalars['String']['input']
  toStateId: Scalars['String']['input']
}>

export type DeleteTransitionMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    transitions: { __typename?: 'TransitionsMutation'; delete: boolean }
  }
}

export type DeleteWorkflowMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type DeleteWorkflowMutation = {
  __typename?: 'Mutation'
  workflows: { __typename?: 'WorkflowsMutation'; delete: boolean }
}

export type EditActivityMutationVariables = Exact<{
  input: ActivityInput
}>

export type EditActivityMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    activities: {
      __typename?: 'ActivitiesMutation'
      edit?: {
        __typename?: 'Activity'
        childWorkflowId?: string | null
        configuration?: any | null
        description: string
        id: string
        name: string
        inputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
        outputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
      } | null
    }
  }
}

export type EditCollectionMutationVariables = Exact<{
  id: Scalars['String']['input']
  input: CollectionInput
}>

export type EditCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      edit: { __typename?: 'Collection'; id: string }
    }
  }
}

export type EditMetadataMutationVariables = Exact<{
  id: Scalars['String']['input']
  metadata: MetadataInput
}>

export type EditMetadataMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      edit: { __typename?: 'Metadata'; id: string }
    }
  }
}

export type EditModelMutationVariables = Exact<{
  id: Scalars['String']['input']
  input: ModelInput
}>

export type EditModelMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    models: {
      __typename?: 'ModelsMutation'
      edit?: {
        __typename?: 'Model'
        id: string
        name: string
        type: string
        description: string
        configuration: any
      } | null
    }
  }
}

export type EditPromptMutationVariables = Exact<{
  id: Scalars['String']['input']
  input: PromptInput
}>

export type EditPromptMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    prompts: {
      __typename?: 'PromptsMutation'
      edit?: {
        __typename?: 'Prompt'
        id: string
        name: string
        description: string
        inputType: string
        outputType: string
        systemPrompt: string
        userPrompt: string
      } | null
    }
  }
}

export type EditStateMutationVariables = Exact<{
  input: WorkflowStateInput
}>

export type EditStateMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    states: {
      __typename?: 'WorkflowStatesMutation'
      edit?: {
        __typename?: 'WorkflowState'
        id: string
        name: string
        configuration?: any | null
        description: string
        entryWorkflowId?: string | null
        exitWorkflowId?: string | null
        workflowId?: string | null
        type: WorkflowStateType
      } | null
    }
  }
}

export type EditStorageSystemMutationVariables = Exact<{
  id: Scalars['String']['input']
  input: StorageSystemInput
}>

export type EditStorageSystemMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    storageSystems: {
      __typename?: 'StorageSystemsMutation'
      edit?: {
        __typename?: 'StorageSystem'
        id: string
        name: string
        type: StorageSystemType
        description: string
        configuration?: any | null
        models: Array<
          {
            __typename?: 'StorageSystemModel'
            modelId: string
            configuration: any
          }
        >
      } | null
    }
  }
}

export type EditTraitMutationVariables = Exact<{
  input: TraitInput
}>

export type EditTraitMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    traits: {
      __typename?: 'TraitsMutation'
      edit?: {
        __typename?: 'Trait'
        id: string
        name: string
        description: string
        contentTypes: Array<string>
        workflowIds: Array<string>
        deleteWorkflowId?: string | null
      } | null
    }
  }
}

export type EditTransitionMutationVariables = Exact<{
  input: TransitionInput
}>

export type EditTransitionMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    transitions: {
      __typename?: 'TransitionsMutation'
      edit?: {
        __typename?: 'Transition'
        fromStateId: string
        toStateId: string
        description: string
      } | null
    }
  }
}

export type EditWorkflowMutationVariables = Exact<{
  input: WorkflowInput
}>

export type EditWorkflowMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    edit: { __typename?: 'Workflow'; id: string }
  }
}

export type EnqueueWorkflowMutationVariables = Exact<{
  workflowId: Scalars['String']['input']
  collectionId?: InputMaybe<Scalars['String']['input']>
  metadataId?: InputMaybe<Scalars['String']['input']>
  version?: InputMaybe<Scalars['Int']['input']>
  configurations?: InputMaybe<
    Array<WorkflowConfigurationInput> | WorkflowConfigurationInput
  >
}>

export type EnqueueWorkflowMutation = {
  __typename?: 'Mutation'
  workflows: {
    __typename?: 'WorkflowsMutation'
    enqueueWorkflow: {
      __typename?: 'WorkflowExecutionId'
      id: string
      queue: string
    }
  }
}

export type ExecuteSearchQueryVariables = Exact<{
  query: Scalars['String']['input']
  filter?: InputMaybe<Scalars['String']['input']>
  offset: Scalars['Int']['input']
  limit: Scalars['Int']['input']
  storageSystemId: Scalars['String']['input']
}>

export type ExecuteSearchQuery = {
  __typename?: 'Query'
  search: {
    __typename?: 'SearchResultObject'
    documents: Array<
      {
        __typename?: 'SearchDocument'
        collection?:
          | { __typename: 'Collection'; id: string; name: string }
          | null
        metadata?: {
          __typename: 'Metadata'
          id: string
          version: number
          slug?: string | null
          name: string
          content: { __typename?: 'MetadataContent'; type: string }
        } | null
        profile?: { __typename: 'Profile'; id: string; name: string } | null
      }
    >
  }
}

export type FindCollectionsQueryVariables = Exact<{
  query: FindQueryInput
}>

export type FindCollectionsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    findCollections: Array<
      {
        __typename: 'Collection'
        id: string
        slug?: string | null
        traitIds: Array<string>
        name: string
        description?: string | null
        labels: Array<string>
        created: any
        modified: any
        attributes?: any | null
        systemAttributes?: any | null
        ready?: any | null
        public: boolean
        publicList: boolean
        collectionType: CollectionType
        templateMetadata?: {
          __typename?: 'Metadata'
          id: string
          version: number
        } | null
        ordering?:
          | Array<
            {
              __typename?: 'Ordering'
              path?: Array<string> | null
              order: Order
            }
          >
          | null
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        workflow: {
          __typename?: 'CollectionWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'CollectionSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'CollectionSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'CollectionSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'CollectionSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
      }
    >
  }
}

export type FindCollectionsCountQueryVariables = Exact<{
  query: FindQueryInput
}>

export type FindCollectionsCountQuery = {
  __typename?: 'Query'
  content: { __typename?: 'Content'; findCollectionsCount: number }
}

export type FindMetadataQueryVariables = Exact<{
  query: FindQueryInput
}>

export type FindMetadataQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    findMetadata: Array<
      {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      }
    >
  }
}

export type FindMetadataCountQueryVariables = Exact<{
  query: FindQueryInput
}>

export type FindMetadataCountQuery = {
  __typename?: 'Query'
  content: { __typename?: 'Content'; findMetadataCount: number }
}

export type GetActivitiesQueryVariables = Exact<{ [key: string]: never }>

export type GetActivitiesQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    activities: {
      __typename?: 'Activities'
      all: Array<
        {
          __typename?: 'Activity'
          childWorkflowId?: string | null
          configuration?: any | null
          description: string
          id: string
          name: string
          inputs: Array<
            {
              __typename?: 'ActivityParameter'
              name: string
              type: ActivityParameterType
            }
          >
          outputs: Array<
            {
              __typename?: 'ActivityParameter'
              name: string
              type: ActivityParameterType
            }
          >
        }
      >
    }
  }
}

export type GetActivityQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetActivityQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    activities: {
      __typename?: 'Activities'
      activity?: {
        __typename?: 'Activity'
        childWorkflowId?: string | null
        configuration?: any | null
        description: string
        id: string
        name: string
        inputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
        outputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
      } | null
    }
  }
}

export type GetCollectionQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']['input']>
}>

export type GetCollectionQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename: 'Collection'
      id: string
      slug?: string | null
      traitIds: Array<string>
      name: string
      description?: string | null
      labels: Array<string>
      created: any
      modified: any
      attributes?: any | null
      systemAttributes?: any | null
      ready?: any | null
      public: boolean
      publicList: boolean
      collectionType: CollectionType
      templateMetadata?: {
        __typename?: 'Metadata'
        id: string
        version: number
      } | null
      ordering?:
        | Array<
          { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
        >
        | null
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      workflow: {
        __typename?: 'CollectionWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'CollectionSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'CollectionSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'CollectionSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'CollectionSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
    } | null
  }
}

export type GetCollectionChildrenCollectionsQueryVariables = Exact<{
  id: Scalars['String']['input']
  offset: Scalars['Int']['input']
  limit: Scalars['Int']['input']
}>

export type GetCollectionChildrenCollectionsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      collectionsCount: number
      collections: Array<
        {
          __typename: 'Collection'
          id: string
          slug?: string | null
          traitIds: Array<string>
          name: string
          description?: string | null
          labels: Array<string>
          created: any
          modified: any
          attributes?: any | null
          systemAttributes?: any | null
          ready?: any | null
          public: boolean
          publicList: boolean
          collectionType: CollectionType
          templateMetadata?: {
            __typename?: 'Metadata'
            id: string
            version: number
          } | null
          ordering?:
            | Array<
              {
                __typename?: 'Ordering'
                path?: Array<string> | null
                order: Order
              }
            >
            | null
          categories: Array<
            { __typename?: 'Category'; id: string; name: string }
          >
          workflow: {
            __typename?: 'CollectionWorkflow'
            state: string
            stateValid?: any | null
            pending?: string | null
            running: number
          }
          supplementary: Array<
            {
              __typename?: 'CollectionSupplementary'
              key: string
              name: string
              uploaded?: string | null
              attributes?: any | null
              content: {
                __typename?: 'CollectionSupplementaryContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'CollectionSupplementaryContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              source: {
                __typename?: 'CollectionSupplementarySource'
                id: string
                identifier?: string | null
              }
            }
          >
        }
      >
    } | null
  }
}

export type GetCollectionChildrenMetadataQueryVariables = Exact<{
  id: Scalars['String']['input']
  offset: Scalars['Int']['input']
  limit: Scalars['Int']['input']
}>

export type GetCollectionChildrenMetadataQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      metadataCount: number
      metadata: Array<
        {
          __typename: 'Metadata'
          id: string
          version: number
          slug?: string | null
          name: string
          labels: Array<string>
          languageTag: string
          public: boolean
          publicContent: boolean
          publicSupplementary: boolean
          parentId?: string | null
          type: MetadataType
          created: any
          modified: any
          uploaded?: any | null
          ready?: any | null
          attributes?: any | null
          systemAttributes?: any | null
          traitIds: Array<string>
          source: {
            __typename?: 'MetadataSource'
            id?: string | null
            identifier?: string | null
          }
          categories: Array<
            { __typename?: 'Category'; id: string; name: string }
          >
          content: {
            __typename?: 'MetadataContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          workflow: {
            __typename?: 'MetadataWorkflow'
            state: string
            stateValid?: any | null
            pending?: string | null
            running: number
          }
          supplementary: Array<
            {
              __typename?: 'MetadataSupplementary'
              key: string
              name: string
              uploaded?: string | null
              attributes?: any | null
              content: {
                __typename?: 'MetadataSupplementaryContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataSupplementaryContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              source: {
                __typename?: 'MetadataSupplementarySource'
                id: string
                identifier?: string | null
              }
            }
          >
          profiles: Array<
            {
              __typename?: 'MetadataProfile'
              relationship: string
              profile?: {
                __typename: 'Profile'
                id: string
                slug?: string | null
                name: string
                visibility: ProfileVisibility
                attributes: Array<
                  {
                    __typename?: 'ProfileAttribute'
                    id: string
                    typeId: string
                    visibility: ProfileVisibility
                    attributes?: any | null
                    metadata?: {
                      __typename?: 'Metadata'
                      id: string
                      content: {
                        __typename?: 'MetadataContent'
                        urls: {
                          __typename?: 'MetadataContentUrls'
                          download: {
                            __typename?: 'SignedUrl'
                            url: string
                            headers: Array<
                              {
                                __typename?: 'SignedUrlHeader'
                                name: string
                                value: string
                              }
                            >
                          }
                        }
                      }
                    } | null
                  }
                >
              } | null
            }
          >
        }
      >
    } | null
  }
}

export type GetCollectionListQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']['input']>
}>

export type GetCollectionListQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename: 'Collection'
      id: string
      slug?: string | null
      traitIds: Array<string>
      name: string
      description?: string | null
      labels: Array<string>
      created: any
      modified: any
      attributes?: any | null
      systemAttributes?: any | null
      ready?: any | null
      public: boolean
      publicList: boolean
      collectionType: CollectionType
      items: Array<
        {
          __typename: 'Collection'
          id: string
          slug?: string | null
          traitIds: Array<string>
          name: string
          description?: string | null
          labels: Array<string>
          created: any
          modified: any
          attributes?: any | null
          systemAttributes?: any | null
          ready?: any | null
          public: boolean
          publicList: boolean
          collectionType: CollectionType
          templateMetadata?: {
            __typename?: 'Metadata'
            id: string
            version: number
          } | null
          ordering?:
            | Array<
              {
                __typename?: 'Ordering'
                path?: Array<string> | null
                order: Order
              }
            >
            | null
          categories: Array<
            { __typename?: 'Category'; id: string; name: string }
          >
          workflow: {
            __typename?: 'CollectionWorkflow'
            state: string
            stateValid?: any | null
            pending?: string | null
            running: number
          }
          supplementary: Array<
            {
              __typename?: 'CollectionSupplementary'
              key: string
              name: string
              uploaded?: string | null
              attributes?: any | null
              content: {
                __typename?: 'CollectionSupplementaryContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'CollectionSupplementaryContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              source: {
                __typename?: 'CollectionSupplementarySource'
                id: string
                identifier?: string | null
              }
            }
          >
        } | {
          __typename: 'Metadata'
          id: string
          version: number
          slug?: string | null
          name: string
          labels: Array<string>
          languageTag: string
          public: boolean
          publicContent: boolean
          publicSupplementary: boolean
          parentId?: string | null
          type: MetadataType
          created: any
          modified: any
          uploaded?: any | null
          ready?: any | null
          attributes?: any | null
          systemAttributes?: any | null
          traitIds: Array<string>
          source: {
            __typename?: 'MetadataSource'
            id?: string | null
            identifier?: string | null
          }
          categories: Array<
            { __typename?: 'Category'; id: string; name: string }
          >
          content: {
            __typename?: 'MetadataContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          workflow: {
            __typename?: 'MetadataWorkflow'
            state: string
            stateValid?: any | null
            pending?: string | null
            running: number
          }
          supplementary: Array<
            {
              __typename?: 'MetadataSupplementary'
              key: string
              name: string
              uploaded?: string | null
              attributes?: any | null
              content: {
                __typename?: 'MetadataSupplementaryContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataSupplementaryContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              source: {
                __typename?: 'MetadataSupplementarySource'
                id: string
                identifier?: string | null
              }
            }
          >
          profiles: Array<
            {
              __typename?: 'MetadataProfile'
              relationship: string
              profile?: {
                __typename: 'Profile'
                id: string
                slug?: string | null
                name: string
                visibility: ProfileVisibility
                attributes: Array<
                  {
                    __typename?: 'ProfileAttribute'
                    id: string
                    typeId: string
                    visibility: ProfileVisibility
                    attributes?: any | null
                    metadata?: {
                      __typename?: 'Metadata'
                      id: string
                      content: {
                        __typename?: 'MetadataContent'
                        urls: {
                          __typename?: 'MetadataContentUrls'
                          download: {
                            __typename?: 'SignedUrl'
                            url: string
                            headers: Array<
                              {
                                __typename?: 'SignedUrlHeader'
                                name: string
                                value: string
                              }
                            >
                          }
                        }
                      }
                    } | null
                  }
                >
              } | null
            }
          >
        }
      >
      templateMetadata?: {
        __typename?: 'Metadata'
        id: string
        version: number
      } | null
      ordering?:
        | Array<
          { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
        >
        | null
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      workflow: {
        __typename?: 'CollectionWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'CollectionSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'CollectionSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'CollectionSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'CollectionSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
    } | null
  }
}

export type GetCollectionMetadataRelationshipsQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetCollectionMetadataRelationshipsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      metadataRelationships: Array<
        {
          __typename?: 'CollectionMetadataRelationship'
          relationship?: string | null
          attributes?: any | null
          metadata: {
            __typename?: 'Metadata'
            id: string
            version: number
            name: string
            public: boolean
            publicContent: boolean
            workflow: {
              __typename?: 'MetadataWorkflow'
              pending?: string | null
              state: string
            }
          }
        }
      >
    } | null
  }
}

export type GetCollectionParentsQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']['input']>
}>

export type GetCollectionParentsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      parentCollections: Array<
        {
          __typename?: 'Collection'
          id: string
          name: string
          attributes?: any | null
        }
      >
    } | null
  }
}

export type GetCollectionPermissionsQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']['input']>
}>

export type GetCollectionPermissionsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      permissions: Array<
        {
          __typename?: 'Permission'
          action: PermissionAction
          group: { __typename?: 'Group'; id: string; name: string }
        }
      >
    } | null
  }
}

export type GetCollectionRelationshipsQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetCollectionRelationshipsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      metadataRelationships: Array<
        {
          __typename?: 'CollectionMetadataRelationship'
          relationship?: string | null
          attributes?: any | null
          metadata: {
            __typename?: 'Metadata'
            id: string
            version: number
            name: string
            public: boolean
            publicContent: boolean
            workflow: {
              __typename?: 'MetadataWorkflow'
              pending?: string | null
              state: string
            }
          }
        }
      >
    } | null
  }
}

export type GetCollectionSupplementaryQueryVariables = Exact<{
  id: Scalars['String']['input']
  key?: InputMaybe<Scalars['String']['input']>
}>

export type GetCollectionSupplementaryQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      supplementary: Array<
        {
          __typename?: 'CollectionSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'CollectionSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'CollectionSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'CollectionSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
    } | null
  }
}

export type GetCollectionTemplateQueryVariables = Exact<{
  id: Scalars['String']['input']
  version?: InputMaybe<Scalars['Int']['input']>
}>

export type GetCollectionTemplateQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      collectionTemplate?: {
        __typename?: 'CollectionTemplate'
        configuration?: any | null
        defaultAttributes?: any | null
        collectionFilter?: {
          __typename?: 'FindQueries'
          options: Array<
            {
              __typename?: 'FindQueryOption'
              name: string
              query: {
                __typename?: 'FindQuery'
                categoryIds?: Array<string> | null
                collectionType?: CollectionType | null
                contentTypes?: Array<string> | null
                extensionFilter?: ExtensionFilterType | null
                offset?: number | null
                limit?: number | null
                attributes: Array<
                  {
                    __typename?: 'FindAttributes'
                    attributes: Array<
                      {
                        __typename?: 'FindAttribute'
                        key: string
                        value: string
                      }
                    >
                  }
                >
              }
            }
          >
        } | null
        attributes: Array<
          {
            __typename?: 'TemplateAttribute'
            key: string
            name: string
            description: string
            type: AttributeType
            supplementaryKey?: string | null
            ui: AttributeUiType
            list: boolean
            configuration?: any | null
            workflows: Array<
              {
                __typename?: 'TemplateWorkflow'
                autoRun: boolean
                workflow?: {
                  __typename?: 'Workflow'
                  id: string
                  queue: string
                  name: string
                  description: string
                  configuration: any
                } | null
              }
            >
          }
        >
      } | null
    } | null
  }
}

export type GetCollectionWorkflowPlansQueryVariables = Exact<{
  id?: InputMaybe<Scalars['String']['input']>
}>

export type GetCollectionWorkflowPlansQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    collection?: {
      __typename?: 'Collection'
      workflow: {
        __typename?: 'CollectionWorkflow'
        plans: Array<
          {
            __typename?: 'WorkflowExecutionPlan'
            complete: Array<number>
            active: Array<number>
            failed: Array<number>
            error?: string | null
            cancelled: boolean
            id: {
              __typename?: 'WorkflowExecutionId'
              id: string
              queue: string
            }
            workflow: { __typename?: 'Workflow'; id: string; name: string }
          }
        >
      }
    } | null
  }
}

export type GetConfigurationQueryVariables = Exact<{
  key: Scalars['String']['input']
}>

export type GetConfigurationQuery = {
  __typename?: 'Query'
  configurations: {
    __typename?: 'Configurations'
    configuration?: {
      __typename?: 'Configuration'
      id: string
      key: string
      description: string
      value?: any | null
      permissions: Array<
        {
          __typename?: 'ConfigurationPermission'
          action: PermissionAction
          group: { __typename?: 'Group'; id: string; name: string }
        }
      >
    } | null
  }
}

export type GetConfigurationsQueryVariables = Exact<{ [key: string]: never }>

export type GetConfigurationsQuery = {
  __typename?: 'Query'
  configurations: {
    __typename?: 'Configurations'
    all: Array<
      {
        __typename?: 'Configuration'
        id: string
        key: string
        description: string
        value?: any | null
        permissions: Array<
          {
            __typename?: 'ConfigurationPermission'
            action: PermissionAction
            group: { __typename?: 'Group'; id: string; name: string }
          }
        >
      }
    >
  }
}

export type GetCurrentProfileQueryVariables = Exact<{ [key: string]: never }>

export type GetCurrentProfileQuery = {
  __typename?: 'Query'
  profiles: {
    __typename?: 'Profiles'
    current?: {
      __typename: 'Profile'
      id: string
      slug?: string | null
      name: string
      visibility: ProfileVisibility
      attributes: Array<
        {
          __typename?: 'ProfileAttribute'
          id: string
          typeId: string
          visibility: ProfileVisibility
          attributes?: any | null
          metadata?: {
            __typename?: 'Metadata'
            id: string
            content: {
              __typename?: 'MetadataContent'
              urls: {
                __typename?: 'MetadataContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
          } | null
        }
      >
    } | null
  }
}

export type GetGroupsQueryVariables = Exact<{
  offset: Scalars['Int']['input']
  limit: Scalars['Int']['input']
}>

export type GetGroupsQuery = {
  __typename?: 'Query'
  security: {
    __typename?: 'Security'
    groups: {
      __typename?: 'Groups'
      all: Array<{ __typename?: 'Group'; id: string; name: string }>
    }
  }
}

export type GetMetadataQueryVariables = Exact<{
  id: Scalars['String']['input']
  version?: InputMaybe<Scalars['Int']['input']>
}>

export type GetMetadataQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename: 'Metadata'
      id: string
      version: number
      slug?: string | null
      name: string
      labels: Array<string>
      languageTag: string
      public: boolean
      publicContent: boolean
      publicSupplementary: boolean
      parentId?: string | null
      type: MetadataType
      created: any
      modified: any
      uploaded?: any | null
      ready?: any | null
      attributes?: any | null
      systemAttributes?: any | null
      traitIds: Array<string>
      source: {
        __typename?: 'MetadataSource'
        id?: string | null
        identifier?: string | null
      }
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      content: {
        __typename?: 'MetadataContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'MetadataContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      workflow: {
        __typename?: 'MetadataWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'MetadataSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'MetadataSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
      profiles: Array<
        {
          __typename?: 'MetadataProfile'
          relationship: string
          profile?: {
            __typename: 'Profile'
            id: string
            slug?: string | null
            name: string
            visibility: ProfileVisibility
            attributes: Array<
              {
                __typename?: 'ProfileAttribute'
                id: string
                typeId: string
                visibility: ProfileVisibility
                attributes?: any | null
                metadata?: {
                  __typename?: 'Metadata'
                  id: string
                  content: {
                    __typename?: 'MetadataContent'
                    urls: {
                      __typename?: 'MetadataContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                } | null
              }
            >
          } | null
        }
      >
    } | null
  }
}

export type GetMetadataUploadQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataUploadQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      content: {
        __typename?: 'MetadataContent'
        urls: {
          __typename?: 'MetadataContentUrls'
          upload: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
    } | null
  }
}

export type GetMetadataDocumentQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataDocumentQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      document?: {
        __typename?: 'Document'
        title: string
        content: any
        template?:
          | { __typename?: 'Metadata'; id: string; version: number }
          | null
      } | null
    } | null
  }
}

export type GetMetadataDocumentTemplateQueryVariables = Exact<{
  id: Scalars['String']['input']
  version?: InputMaybe<Scalars['Int']['input']>
}>

export type GetMetadataDocumentTemplateQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      documentTemplate?: {
        __typename?: 'DocumentTemplate'
        configuration?: any | null
        schema?: any | null
        content: any
        defaultAttributes?: any | null
        containers: Array<
          {
            __typename?: 'DocumentTemplateContainer'
            id: string
            name: string
            description: string
            supplementaryKey?: string | null
            workflows: Array<
              {
                __typename?: 'TemplateWorkflow'
                autoRun: boolean
                workflow?:
                  | { __typename?: 'Workflow'; id: string; name: string }
                  | null
              }
            >
          }
        >
        attributes: Array<
          {
            __typename?: 'TemplateAttribute'
            key: string
            name: string
            description: string
            type: AttributeType
            supplementaryKey?: string | null
            ui: AttributeUiType
            list: boolean
            configuration?: any | null
            workflows: Array<
              {
                __typename?: 'TemplateWorkflow'
                autoRun: boolean
                workflow?:
                  | { __typename?: 'Workflow'; id: string; name: string }
                  | null
              }
            >
          }
        >
      } | null
    } | null
  }
}

export type GetMetadataGuideQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataGuideQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      guide?: {
        __typename?: 'Guide'
        type: GuideType
        rrule?: string | null
        template?:
          | { __typename?: 'Metadata'; id: string; version: number }
          | null
        steps: Array<
          {
            __typename?: 'GuideStep'
            id: number
            date?: any | null
            metadata?: {
              __typename: 'Metadata'
              id: string
              version: number
              slug?: string | null
              name: string
              labels: Array<string>
              languageTag: string
              public: boolean
              publicContent: boolean
              publicSupplementary: boolean
              parentId?: string | null
              type: MetadataType
              created: any
              modified: any
              uploaded?: any | null
              ready?: any | null
              attributes?: any | null
              systemAttributes?: any | null
              traitIds: Array<string>
              source: {
                __typename?: 'MetadataSource'
                id?: string | null
                identifier?: string | null
              }
              categories: Array<
                { __typename?: 'Category'; id: string; name: string }
              >
              content: {
                __typename?: 'MetadataContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              workflow: {
                __typename?: 'MetadataWorkflow'
                state: string
                stateValid?: any | null
                pending?: string | null
                running: number
              }
              supplementary: Array<
                {
                  __typename?: 'MetadataSupplementary'
                  key: string
                  name: string
                  uploaded?: string | null
                  attributes?: any | null
                  content: {
                    __typename?: 'MetadataSupplementaryContent'
                    type: string
                    length?: number | null
                    urls: {
                      __typename?: 'MetadataSupplementaryContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                  source: {
                    __typename?: 'MetadataSupplementarySource'
                    id: string
                    identifier?: string | null
                  }
                }
              >
              profiles: Array<
                {
                  __typename?: 'MetadataProfile'
                  relationship: string
                  profile?: {
                    __typename: 'Profile'
                    id: string
                    slug?: string | null
                    name: string
                    visibility: ProfileVisibility
                    attributes: Array<
                      {
                        __typename?: 'ProfileAttribute'
                        id: string
                        typeId: string
                        visibility: ProfileVisibility
                        attributes?: any | null
                        metadata?: {
                          __typename?: 'Metadata'
                          id: string
                          content: {
                            __typename?: 'MetadataContent'
                            urls: {
                              __typename?: 'MetadataContentUrls'
                              download: {
                                __typename?: 'SignedUrl'
                                url: string
                                headers: Array<
                                  {
                                    __typename?: 'SignedUrlHeader'
                                    name: string
                                    value: string
                                  }
                                >
                              }
                            }
                          }
                        } | null
                      }
                    >
                  } | null
                }
              >
            } | null
            modules: Array<
              {
                __typename?: 'GuideStepModule'
                metadata?: {
                  __typename: 'Metadata'
                  id: string
                  version: number
                  slug?: string | null
                  name: string
                  labels: Array<string>
                  languageTag: string
                  public: boolean
                  publicContent: boolean
                  publicSupplementary: boolean
                  parentId?: string | null
                  type: MetadataType
                  created: any
                  modified: any
                  uploaded?: any | null
                  ready?: any | null
                  attributes?: any | null
                  systemAttributes?: any | null
                  traitIds: Array<string>
                  source: {
                    __typename?: 'MetadataSource'
                    id?: string | null
                    identifier?: string | null
                  }
                  categories: Array<
                    { __typename?: 'Category'; id: string; name: string }
                  >
                  content: {
                    __typename?: 'MetadataContent'
                    type: string
                    length?: number | null
                    urls: {
                      __typename?: 'MetadataContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                  workflow: {
                    __typename?: 'MetadataWorkflow'
                    state: string
                    stateValid?: any | null
                    pending?: string | null
                    running: number
                  }
                  supplementary: Array<
                    {
                      __typename?: 'MetadataSupplementary'
                      key: string
                      name: string
                      uploaded?: string | null
                      attributes?: any | null
                      content: {
                        __typename?: 'MetadataSupplementaryContent'
                        type: string
                        length?: number | null
                        urls: {
                          __typename?: 'MetadataSupplementaryContentUrls'
                          download: {
                            __typename?: 'SignedUrl'
                            url: string
                            headers: Array<
                              {
                                __typename?: 'SignedUrlHeader'
                                name: string
                                value: string
                              }
                            >
                          }
                        }
                      }
                      source: {
                        __typename?: 'MetadataSupplementarySource'
                        id: string
                        identifier?: string | null
                      }
                    }
                  >
                  profiles: Array<
                    {
                      __typename?: 'MetadataProfile'
                      relationship: string
                      profile?: {
                        __typename: 'Profile'
                        id: string
                        slug?: string | null
                        name: string
                        visibility: ProfileVisibility
                        attributes: Array<
                          {
                            __typename?: 'ProfileAttribute'
                            id: string
                            typeId: string
                            visibility: ProfileVisibility
                            attributes?: any | null
                            metadata?: {
                              __typename?: 'Metadata'
                              id: string
                              content: {
                                __typename?: 'MetadataContent'
                                urls: {
                                  __typename?: 'MetadataContentUrls'
                                  download: {
                                    __typename?: 'SignedUrl'
                                    url: string
                                    headers: Array<
                                      {
                                        __typename?: 'SignedUrlHeader'
                                        name: string
                                        value: string
                                      }
                                    >
                                  }
                                }
                              }
                            } | null
                          }
                        >
                      } | null
                    }
                  >
                } | null
              }
            >
          }
        >
      } | null
    } | null
  }
}

export type GetMetadataGuideTemplateQueryVariables = Exact<{
  id: Scalars['String']['input']
  version?: InputMaybe<Scalars['Int']['input']>
}>

export type GetMetadataGuideTemplateQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      guideTemplate?: {
        __typename?: 'GuideTemplate'
        rrule?: string | null
        type: GuideType
        steps: Array<
          {
            __typename?: 'GuideTemplateStep'
            id: number
            metadata?: {
              __typename: 'Metadata'
              id: string
              version: number
              slug?: string | null
              name: string
              labels: Array<string>
              languageTag: string
              public: boolean
              publicContent: boolean
              publicSupplementary: boolean
              parentId?: string | null
              type: MetadataType
              created: any
              modified: any
              uploaded?: any | null
              ready?: any | null
              attributes?: any | null
              systemAttributes?: any | null
              traitIds: Array<string>
              source: {
                __typename?: 'MetadataSource'
                id?: string | null
                identifier?: string | null
              }
              categories: Array<
                { __typename?: 'Category'; id: string; name: string }
              >
              content: {
                __typename?: 'MetadataContent'
                type: string
                length?: number | null
                urls: {
                  __typename?: 'MetadataContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
              workflow: {
                __typename?: 'MetadataWorkflow'
                state: string
                stateValid?: any | null
                pending?: string | null
                running: number
              }
              supplementary: Array<
                {
                  __typename?: 'MetadataSupplementary'
                  key: string
                  name: string
                  uploaded?: string | null
                  attributes?: any | null
                  content: {
                    __typename?: 'MetadataSupplementaryContent'
                    type: string
                    length?: number | null
                    urls: {
                      __typename?: 'MetadataSupplementaryContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                  source: {
                    __typename?: 'MetadataSupplementarySource'
                    id: string
                    identifier?: string | null
                  }
                }
              >
              profiles: Array<
                {
                  __typename?: 'MetadataProfile'
                  relationship: string
                  profile?: {
                    __typename: 'Profile'
                    id: string
                    slug?: string | null
                    name: string
                    visibility: ProfileVisibility
                    attributes: Array<
                      {
                        __typename?: 'ProfileAttribute'
                        id: string
                        typeId: string
                        visibility: ProfileVisibility
                        attributes?: any | null
                        metadata?: {
                          __typename?: 'Metadata'
                          id: string
                          content: {
                            __typename?: 'MetadataContent'
                            urls: {
                              __typename?: 'MetadataContentUrls'
                              download: {
                                __typename?: 'SignedUrl'
                                url: string
                                headers: Array<
                                  {
                                    __typename?: 'SignedUrlHeader'
                                    name: string
                                    value: string
                                  }
                                >
                              }
                            }
                          }
                        } | null
                      }
                    >
                  } | null
                }
              >
            } | null
            modules: Array<
              {
                __typename?: 'GuideTemplateStepModule'
                id: number
                metadata?: {
                  __typename: 'Metadata'
                  id: string
                  version: number
                  slug?: string | null
                  name: string
                  labels: Array<string>
                  languageTag: string
                  public: boolean
                  publicContent: boolean
                  publicSupplementary: boolean
                  parentId?: string | null
                  type: MetadataType
                  created: any
                  modified: any
                  uploaded?: any | null
                  ready?: any | null
                  attributes?: any | null
                  systemAttributes?: any | null
                  traitIds: Array<string>
                  source: {
                    __typename?: 'MetadataSource'
                    id?: string | null
                    identifier?: string | null
                  }
                  categories: Array<
                    { __typename?: 'Category'; id: string; name: string }
                  >
                  content: {
                    __typename?: 'MetadataContent'
                    type: string
                    length?: number | null
                    urls: {
                      __typename?: 'MetadataContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                  workflow: {
                    __typename?: 'MetadataWorkflow'
                    state: string
                    stateValid?: any | null
                    pending?: string | null
                    running: number
                  }
                  supplementary: Array<
                    {
                      __typename?: 'MetadataSupplementary'
                      key: string
                      name: string
                      uploaded?: string | null
                      attributes?: any | null
                      content: {
                        __typename?: 'MetadataSupplementaryContent'
                        type: string
                        length?: number | null
                        urls: {
                          __typename?: 'MetadataSupplementaryContentUrls'
                          download: {
                            __typename?: 'SignedUrl'
                            url: string
                            headers: Array<
                              {
                                __typename?: 'SignedUrlHeader'
                                name: string
                                value: string
                              }
                            >
                          }
                        }
                      }
                      source: {
                        __typename?: 'MetadataSupplementarySource'
                        id: string
                        identifier?: string | null
                      }
                    }
                  >
                  profiles: Array<
                    {
                      __typename?: 'MetadataProfile'
                      relationship: string
                      profile?: {
                        __typename: 'Profile'
                        id: string
                        slug?: string | null
                        name: string
                        visibility: ProfileVisibility
                        attributes: Array<
                          {
                            __typename?: 'ProfileAttribute'
                            id: string
                            typeId: string
                            visibility: ProfileVisibility
                            attributes?: any | null
                            metadata?: {
                              __typename?: 'Metadata'
                              id: string
                              content: {
                                __typename?: 'MetadataContent'
                                urls: {
                                  __typename?: 'MetadataContentUrls'
                                  download: {
                                    __typename?: 'SignedUrl'
                                    url: string
                                    headers: Array<
                                      {
                                        __typename?: 'SignedUrlHeader'
                                        name: string
                                        value: string
                                      }
                                    >
                                  }
                                }
                              }
                            } | null
                          }
                        >
                      } | null
                    }
                  >
                } | null
              }
            >
          }
        >
      } | null
    } | null
  }
}

export type GetMetadataParentsQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataParentsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      parentCollections: Array<
        {
          __typename?: 'Collection'
          id: string
          name: string
          attributes?: any | null
        }
      >
    } | null
  }
}

export type GetMetadataPermissionsQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataPermissionsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      permissions: Array<
        {
          __typename?: 'Permission'
          action: PermissionAction
          group: { __typename?: 'Group'; id: string; name: string }
        }
      >
    } | null
  }
}

export type GetMetadataRelationshipsQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataRelationshipsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      relationships: Array<
        {
          __typename?: 'MetadataRelationship'
          relationship: string
          attributes?: any | null
          metadata: {
            __typename?: 'Metadata'
            id: string
            version: number
            name: string
            public: boolean
            publicContent: boolean
            workflow: {
              __typename?: 'MetadataWorkflow'
              pending?: string | null
              state: string
            }
          }
        }
      >
    } | null
  }
}

export type GetMetadataSupplementaryQueryVariables = Exact<{
  id: Scalars['String']['input']
  key?: InputMaybe<Scalars['String']['input']>
}>

export type GetMetadataSupplementaryQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'MetadataSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'MetadataSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
    } | null
  }
}

export type GetMetadataSupplementaryJsonQueryVariables = Exact<{
  id: Scalars['String']['input']
  key: Scalars['String']['input']
}>

export type GetMetadataSupplementaryJsonQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          content: { __typename?: 'MetadataSupplementaryContent'; json: any }
        }
      >
    } | null
  }
}

export type GetMetadataSupplementaryTextQueryVariables = Exact<{
  id: Scalars['String']['input']
  key: Scalars['String']['input']
}>

export type GetMetadataSupplementaryTextQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          content: { __typename?: 'MetadataSupplementaryContent'; text: string }
        }
      >
    } | null
  }
}

export type GetMetadataWorkflowPlansQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetMetadataWorkflowPlansQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      workflow: {
        __typename?: 'MetadataWorkflow'
        plans: Array<
          {
            __typename?: 'WorkflowExecutionPlan'
            complete: Array<number>
            active: Array<number>
            failed: Array<number>
            error?: string | null
            cancelled: boolean
            id: {
              __typename?: 'WorkflowExecutionId'
              id: string
              queue: string
            }
            workflow: { __typename?: 'Workflow'; id: string; name: string }
          }
        >
      }
    } | null
  }
}

export type GetModelQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetModelQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    models: {
      __typename?: 'Models'
      model?: {
        __typename?: 'Model'
        id: string
        name: string
        type: string
        description: string
        configuration: any
      } | null
    }
  }
}

export type GetModelsQueryVariables = Exact<{ [key: string]: never }>

export type GetModelsQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    models: {
      __typename?: 'Models'
      all: Array<
        {
          __typename?: 'Model'
          id: string
          name: string
          type: string
          description: string
          configuration: any
        }
      >
    }
  }
}

export type GetPermissionActionsQueryVariables = Exact<{ [key: string]: never }>

export type GetPermissionActionsQuery = {
  __typename?: 'Query'
  security: { __typename?: 'Security'; actions: Array<string> }
}

export type GetPrincipalsQueryVariables = Exact<{
  offset: Scalars['Int']['input']
  limit: Scalars['Int']['input']
}>

export type GetPrincipalsQuery = {
  __typename?: 'Query'
  security: {
    __typename?: 'Security'
    principals: {
      __typename?: 'Principals'
      all: Array<
        {
          __typename?: 'Principal'
          id: string
          verified: boolean
          groups: Array<{ __typename?: 'Group'; id: string; name: string }>
        }
      >
    }
  }
}

export type GetProfileQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetProfileQuery = {
  __typename?: 'Query'
  profiles: {
    __typename?: 'Profiles'
    profile?: {
      __typename: 'Profile'
      id: string
      slug?: string | null
      name: string
      visibility: ProfileVisibility
      attributes: Array<
        {
          __typename?: 'ProfileAttribute'
          id: string
          typeId: string
          visibility: ProfileVisibility
          attributes?: any | null
          metadata?: {
            __typename?: 'Metadata'
            id: string
            content: {
              __typename?: 'MetadataContent'
              urls: {
                __typename?: 'MetadataContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
          } | null
        }
      >
    } | null
  }
}

export type GetProfilesQueryVariables = Exact<{
  offset: Scalars['Int']['input']
  limit: Scalars['Int']['input']
}>

export type GetProfilesQuery = {
  __typename?: 'Query'
  profiles: {
    __typename?: 'Profiles'
    all: Array<
      {
        __typename: 'Profile'
        id: string
        slug?: string | null
        name: string
        visibility: ProfileVisibility
        attributes: Array<
          {
            __typename?: 'ProfileAttribute'
            id: string
            typeId: string
            visibility: ProfileVisibility
            attributes?: any | null
            metadata?: {
              __typename?: 'Metadata'
              id: string
              content: {
                __typename?: 'MetadataContent'
                urls: {
                  __typename?: 'MetadataContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
            } | null
          }
        >
      }
    >
  }
}

export type GetPromptQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetPromptQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    prompts: {
      __typename?: 'Prompts'
      prompt?: {
        __typename?: 'Prompt'
        id: string
        name: string
        description: string
        inputType: string
        outputType: string
        systemPrompt: string
        userPrompt: string
      } | null
    }
  }
}

export type GetPromptsQueryVariables = Exact<{ [key: string]: never }>

export type GetPromptsQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    prompts: {
      __typename?: 'Prompts'
      all: Array<
        {
          __typename?: 'Prompt'
          id: string
          name: string
          description: string
          inputType: string
          outputType: string
          systemPrompt: string
          userPrompt: string
        }
      >
    }
  }
}

export type GetRunningWorkflowCountQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetRunningWorkflowCountQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      workflow: { __typename?: 'MetadataWorkflow'; running: number }
    } | null
  }
}

export type GetSlugQueryVariables = Exact<{
  slug: Scalars['String']['input']
}>

export type GetSlugQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    slug?:
      | {
        __typename: 'Collection'
        id: string
        slug?: string | null
        traitIds: Array<string>
        name: string
        description?: string | null
        labels: Array<string>
        created: any
        modified: any
        attributes?: any | null
        systemAttributes?: any | null
        ready?: any | null
        public: boolean
        publicList: boolean
        collectionType: CollectionType
        templateMetadata?: {
          __typename?: 'Metadata'
          id: string
          version: number
        } | null
        ordering?:
          | Array<
            {
              __typename?: 'Ordering'
              path?: Array<string> | null
              order: Order
            }
          >
          | null
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        workflow: {
          __typename?: 'CollectionWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'CollectionSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'CollectionSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'CollectionSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'CollectionSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
      }
      | {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      }
      | { __typename?: 'Profile' }
      | null
  }
}

export type GetStateQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetStateQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    states: {
      __typename?: 'WorkflowStates'
      state?: {
        __typename?: 'WorkflowState'
        id: string
        name: string
        configuration?: any | null
        description: string
        entryWorkflowId?: string | null
        exitWorkflowId?: string | null
        workflowId?: string | null
        type: WorkflowStateType
      } | null
    }
  }
}

export type GetStatesQueryVariables = Exact<{ [key: string]: never }>

export type GetStatesQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    states: {
      __typename?: 'WorkflowStates'
      all: Array<
        {
          __typename?: 'WorkflowState'
          id: string
          name: string
          configuration?: any | null
          description: string
          entryWorkflowId?: string | null
          exitWorkflowId?: string | null
          workflowId?: string | null
          type: WorkflowStateType
        }
      >
    }
  }
}

export type GetStorageSystemQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetStorageSystemQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    storageSystems: {
      __typename?: 'StorageSystems'
      storageSystem?: {
        __typename?: 'StorageSystem'
        id: string
        name: string
        type: StorageSystemType
        description: string
        configuration?: any | null
        models: Array<
          {
            __typename?: 'StorageSystemModel'
            modelId: string
            configuration: any
          }
        >
      } | null
    }
  }
}

export type GetStorageSystemsQueryVariables = Exact<{ [key: string]: never }>

export type GetStorageSystemsQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    storageSystems: {
      __typename?: 'StorageSystems'
      all: Array<
        {
          __typename?: 'StorageSystem'
          id: string
          name: string
          type: StorageSystemType
          description: string
          configuration?: any | null
          models: Array<
            {
              __typename?: 'StorageSystemModel'
              modelId: string
              configuration: any
            }
          >
        }
      >
    }
  }
}

export type GetSupplementaryTextContentsQueryVariables = Exact<{
  id: Scalars['String']['input']
  key: Scalars['String']['input']
}>

export type GetSupplementaryTextContentsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          content: { __typename?: 'MetadataSupplementaryContent'; text: string }
        }
      >
    } | null
  }
}

export type GetTextContentsQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetTextContentsQuery = {
  __typename?: 'Query'
  content: {
    __typename?: 'Content'
    metadata?: {
      __typename?: 'Metadata'
      content: { __typename?: 'MetadataContent'; text: string }
    } | null
  }
}

export type GetTraitQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetTraitQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    traits: {
      __typename?: 'Traits'
      trait?: {
        __typename?: 'Trait'
        id: string
        name: string
        description: string
        contentTypes: Array<string>
        workflowIds: Array<string>
        deleteWorkflowId?: string | null
      } | null
    }
  }
}

export type GetTraitsQueryVariables = Exact<{ [key: string]: never }>

export type GetTraitsQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    traits: {
      __typename?: 'Traits'
      all: Array<
        {
          __typename?: 'Trait'
          id: string
          name: string
          description: string
          contentTypes: Array<string>
          workflowIds: Array<string>
          deleteWorkflowId?: string | null
        }
      >
    }
  }
}

export type GetTransitionQueryVariables = Exact<{
  fromStateId: Scalars['String']['input']
  toStateId: Scalars['String']['input']
}>

export type GetTransitionQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    transitions: {
      __typename?: 'Transitions'
      transition?: {
        __typename?: 'Transition'
        fromStateId: string
        toStateId: string
        description: string
      } | null
    }
  }
}

export type GetTransitionsQueryVariables = Exact<{ [key: string]: never }>

export type GetTransitionsQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    transitions: {
      __typename?: 'Transitions'
      all: Array<
        {
          __typename?: 'Transition'
          fromStateId: string
          toStateId: string
          description: string
        }
      >
    }
  }
}

export type GetWorkflowQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetWorkflowQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    workflow?: {
      __typename?: 'Workflow'
      id: string
      queue: string
      name: string
      description: string
      configuration: any
      activities: Array<
        {
          __typename?: 'WorkflowActivity'
          id: number
          activityId: string
          queue: string
          executionGroup: number
          configuration?: any | null
          inputs: Array<
            {
              __typename?: 'WorkflowActivityParameter'
              name: string
              value: string
            }
          >
          outputs: Array<
            {
              __typename?: 'WorkflowActivityParameter'
              name: string
              value: string
            }
          >
          storageSystems: Array<
            {
              __typename?: 'WorkflowActivityStorageSystem'
              configuration?: any | null
              system: { __typename?: 'StorageSystem'; id: string }
            }
          >
          models: Array<
            {
              __typename?: 'WorkflowActivityModel'
              configuration?: any | null
              model: { __typename?: 'Model'; id: string }
            }
          >
          prompts: Array<
            {
              __typename?: 'WorkflowActivityPrompt'
              configuration?: any | null
              prompt: { __typename?: 'Prompt'; id: string }
            }
          >
        }
      >
    } | null
  }
}

export type GetWorkflowActivitiesQueryVariables = Exact<{
  id: Scalars['String']['input']
}>

export type GetWorkflowActivitiesQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    workflow?: {
      __typename?: 'Workflow'
      activities: Array<
        {
          __typename?: 'WorkflowActivity'
          id: number
          activityId: string
          queue: string
          executionGroup: number
          configuration?: any | null
          inputs: Array<
            {
              __typename?: 'WorkflowActivityParameter'
              name: string
              value: string
            }
          >
          outputs: Array<
            {
              __typename?: 'WorkflowActivityParameter'
              name: string
              value: string
            }
          >
          storageSystems: Array<
            {
              __typename?: 'WorkflowActivityStorageSystem'
              configuration?: any | null
              system: { __typename?: 'StorageSystem'; id: string }
            }
          >
          models: Array<
            {
              __typename?: 'WorkflowActivityModel'
              configuration?: any | null
              model: { __typename?: 'Model'; id: string }
            }
          >
          prompts: Array<
            {
              __typename?: 'WorkflowActivityPrompt'
              configuration?: any | null
              prompt: { __typename?: 'Prompt'; id: string }
            }
          >
        }
      >
    } | null
  }
}

export type GetWorkflowActivityQueryVariables = Exact<{
  id: Scalars['Int']['input']
}>

export type GetWorkflowActivityQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    workflowActivity?: {
      __typename?: 'WorkflowActivity'
      id: number
      activityId: string
      queue: string
      executionGroup: number
      configuration?: any | null
      inputs: Array<
        {
          __typename?: 'WorkflowActivityParameter'
          name: string
          value: string
        }
      >
      outputs: Array<
        {
          __typename?: 'WorkflowActivityParameter'
          name: string
          value: string
        }
      >
      storageSystems: Array<
        {
          __typename?: 'WorkflowActivityStorageSystem'
          configuration?: any | null
          system: { __typename?: 'StorageSystem'; id: string }
        }
      >
      models: Array<
        {
          __typename?: 'WorkflowActivityModel'
          configuration?: any | null
          model: { __typename?: 'Model'; id: string }
        }
      >
      prompts: Array<
        {
          __typename?: 'WorkflowActivityPrompt'
          configuration?: any | null
          prompt: { __typename?: 'Prompt'; id: string }
        }
      >
    } | null
  }
}

export type GetWorkflowsQueryVariables = Exact<{ [key: string]: never }>

export type GetWorkflowsQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    all: Array<
      {
        __typename?: 'Workflow'
        id: string
        queue: string
        name: string
        description: string
        configuration: any
      }
    >
  }
}

export type LoginMutationVariables = Exact<{
  identifier: Scalars['String']['input']
  password: Scalars['String']['input']
}>

export type LoginMutation = {
  __typename?: 'Mutation'
  security: {
    __typename?: 'SecurityMutation'
    login: {
      __typename?: 'LoginMutation'
      password: {
        __typename?: 'LoginResponse'
        profile?: {
          __typename: 'Profile'
          id: string
          slug?: string | null
          name: string
          visibility: ProfileVisibility
          attributes: Array<
            {
              __typename?: 'ProfileAttribute'
              id: string
              typeId: string
              visibility: ProfileVisibility
              attributes?: any | null
              metadata?: {
                __typename?: 'Metadata'
                id: string
                content: {
                  __typename?: 'MetadataContent'
                  urls: {
                    __typename?: 'MetadataContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
              } | null
            }
          >
        } | null
        principal: {
          __typename?: 'Principal'
          id: string
          groups: Array<{ __typename?: 'Group'; id: string; name: string }>
        }
        token: { __typename?: 'Token'; token: string }
      }
    }
  }
}

export type NextJobQueryVariables = Exact<{
  queue: Scalars['String']['input']
}>

export type NextJobQuery = {
  __typename?: 'Query'
  workflows: {
    __typename?: 'Workflows'
    nextJob?: {
      __typename?: 'WorkflowJob'
      context?: any | null
      planId: { __typename?: 'WorkflowExecutionId'; id: string; queue: string }
      id: {
        __typename?: 'WorkflowJobId'
        id: string
        index: number
        queue: string
      }
      collection?: {
        __typename: 'Collection'
        id: string
        slug?: string | null
        traitIds: Array<string>
        name: string
        description?: string | null
        labels: Array<string>
        created: any
        modified: any
        attributes?: any | null
        systemAttributes?: any | null
        ready?: any | null
        public: boolean
        publicList: boolean
        collectionType: CollectionType
        templateMetadata?: {
          __typename?: 'Metadata'
          id: string
          version: number
        } | null
        ordering?:
          | Array<
            {
              __typename?: 'Ordering'
              path?: Array<string> | null
              order: Order
            }
          >
          | null
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        workflow: {
          __typename?: 'CollectionWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'CollectionSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'CollectionSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'CollectionSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'CollectionSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
      } | null
      metadata?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
      activity: {
        __typename?: 'Activity'
        childWorkflowId?: string | null
        configuration?: any | null
        description: string
        id: string
        name: string
        inputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
        outputs: Array<
          {
            __typename?: 'ActivityParameter'
            name: string
            type: ActivityParameterType
          }
        >
      }
      workflowActivity: {
        __typename?: 'WorkflowActivity'
        id: number
        activityId: string
        queue: string
        executionGroup: number
        configuration?: any | null
        inputs: Array<
          {
            __typename?: 'WorkflowActivityParameter'
            name: string
            value: string
          }
        >
        outputs: Array<
          {
            __typename?: 'WorkflowActivityParameter'
            name: string
            value: string
          }
        >
        storageSystems: Array<
          {
            __typename?: 'WorkflowActivityStorageSystem'
            configuration?: any | null
            system: { __typename?: 'StorageSystem'; id: string }
          }
        >
        models: Array<
          {
            __typename?: 'WorkflowActivityModel'
            configuration?: any | null
            model: { __typename?: 'Model'; id: string }
          }
        >
        prompts: Array<
          {
            __typename?: 'WorkflowActivityPrompt'
            configuration?: any | null
            prompt: { __typename?: 'Prompt'; id: string }
          }
        >
      }
      storageSystems: Array<
        {
          __typename?: 'WorkflowActivityStorageSystem'
          configuration?: any | null
          system: {
            __typename?: 'StorageSystem'
            id: string
            name: string
            type: StorageSystemType
            description: string
            configuration?: any | null
            models: Array<
              {
                __typename?: 'StorageSystemModel'
                modelId: string
                configuration: any
              }
            >
          }
        }
      >
      prompts: Array<
        {
          __typename?: 'WorkflowActivityPrompt'
          configuration?: any | null
          prompt: {
            __typename?: 'Prompt'
            id: string
            name: string
            description: string
            inputType: string
            outputType: string
            systemPrompt: string
            userPrompt: string
          }
        }
      >
      models: Array<
        {
          __typename?: 'WorkflowActivityModel'
          configuration?: any | null
          model: {
            __typename?: 'Model'
            id: string
            name: string
            type: string
            description: string
            configuration: any
          }
        }
      >
    } | null
  }
}

export type OnActivityChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnActivityChangedSubscription = {
  __typename?: 'Subscription'
  activity: string
}

export type OnCollectionChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnCollectionChangedSubscription = {
  __typename?: 'Subscription'
  collection: string
}

export type OnMetadataChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnMetadataChangedSubscription = {
  __typename?: 'Subscription'
  metadata: string
}

export type OnMetadataSupplementaryChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnMetadataSupplementaryChangedSubscription = {
  __typename?: 'Subscription'
  metadataSupplementary: {
    __typename?: 'SupplementaryIdObject'
    contentId: string
    id: string
    key: string
    planId?: string | null
  }
}

export type OnModelChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnModelChangedSubscription = {
  __typename?: 'Subscription'
  model: string
}

export type OnPromptChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnPromptChangedSubscription = {
  __typename?: 'Subscription'
  prompt: string
}

export type OnStateChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnStateChangedSubscription = {
  __typename?: 'Subscription'
  state: string
}

export type OnStorageSystemChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnStorageSystemChangedSubscription = {
  __typename?: 'Subscription'
  storageSystem: string
}

export type OnTraitChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnTraitChangedSubscription = {
  __typename?: 'Subscription'
  trait: string
}

export type OnWorkflowChangedSubscriptionVariables = Exact<
  { [key: string]: never }
>

export type OnWorkflowChangedSubscription = {
  __typename?: 'Subscription'
  workflow: string
}

export type RemoveCollectionCollectionMutationVariables = Exact<{
  collectionId: Scalars['String']['input']
  id: Scalars['String']['input']
}>

export type RemoveCollectionCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      removeChildCollection: { __typename?: 'Collection'; id: string }
    }
  }
}

export type RemoveCollectionMetadataRelationshipMutationVariables = Exact<{
  id: Scalars['String']['input']
  metadataId: Scalars['String']['input']
  relationship: Scalars['String']['input']
}>

export type RemoveCollectionMetadataRelationshipMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      deleteMetadataRelationship: boolean
    }
  }
}

export type RemoveCollectionPermissionMutationVariables = Exact<{
  permission: PermissionInput
}>

export type RemoveCollectionPermissionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      deletePermission: {
        __typename?: 'Permission'
        groupId: string
        action: PermissionAction
      }
    }
  }
}

export type RemoveMetadataCollectionMutationVariables = Exact<{
  collectionId: Scalars['String']['input']
  id: Scalars['String']['input']
}>

export type RemoveMetadataCollectionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      removeChildMetadata: { __typename?: 'Collection'; id: string }
    }
  }
}

export type RemoveMetadataPermissionMutationVariables = Exact<{
  permission: PermissionInput
}>

export type RemoveMetadataPermissionMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      deletePermission: {
        __typename?: 'Permission'
        groupId: string
        action: PermissionAction
      }
    }
  }
}

export type RemoveMetadataRelationshipMutationVariables = Exact<{
  id1: Scalars['String']['input']
  id2: Scalars['String']['input']
  relationship: Scalars['String']['input']
}>

export type RemoveMetadataRelationshipMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: { __typename?: 'MetadataMutation'; deleteRelationship: boolean }
  }
}

export type RemoveMetadataTraitMutationVariables = Exact<{
  metadataId: Scalars['String']['input']
  traitId: Scalars['String']['input']
}>

export type RemoveMetadataTraitMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      deleteTrait: Array<
        {
          __typename?: 'WorkflowExecutionPlan'
          id: { __typename?: 'WorkflowExecutionId'; id: string; queue: string }
        }
      >
    }
  }
}

export type SetCollectionAttributesMutationVariables = Exact<{
  id: Scalars['String']['input']
  attributes: Scalars['JSON']['input']
}>

export type SetCollectionAttributesMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      setCollectionAttributes: boolean
    }
  }
}

export type SetCollectionPublicMutationVariables = Exact<{
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}>

export type SetCollectionPublicMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      setPublic: { __typename?: 'Collection'; id: string }
    }
  }
}

export type SetCollectionPublicListMutationVariables = Exact<{
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}>

export type SetCollectionPublicListMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: {
      __typename?: 'CollectionMutation'
      setPublicList: { __typename?: 'Collection'; id: string }
    }
  }
}

export type SetCollectionReadyMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type SetCollectionReadyMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    collection: { __typename?: 'CollectionMutation'; setReady: boolean }
  }
}

export type SetConfigurationMutationVariables = Exact<{
  configuration: ConfigurationInput
}>

export type SetConfigurationMutation = {
  __typename?: 'Mutation'
  configurations: {
    __typename?: 'ConfigurationsMutation'
    setConfiguration?: {
      __typename?: 'Configuration'
      id: string
      key: string
      description: string
      value?: any | null
      permissions: Array<
        {
          __typename?: 'ConfigurationPermission'
          action: PermissionAction
          group: { __typename?: 'Group'; id: string; name: string }
        }
      >
    } | null
  }
}

export type SetContentsMutationVariables = Exact<{
  id: Scalars['String']['input']
  contentType?: InputMaybe<Scalars['String']['input']>
  file: Scalars['Upload']['input']
}>

export type SetContentsMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: { __typename?: 'MetadataMutation'; setMetadataContents: boolean }
  }
}

export type SetJsonContentsMutationVariables = Exact<{
  id: Scalars['String']['input']
  contentType: Scalars['String']['input']
  content: Scalars['JSON']['input']
}>

export type SetJsonContentsMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      setMetadataJsonContents: boolean
    }
  }
}

export type SetMetadataAttributesMutationVariables = Exact<{
  id: Scalars['String']['input']
  attributes: Scalars['JSON']['input']
}>

export type SetMetadataAttributesMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      setMetadataAttributes: boolean
    }
  }
}

export type SetMetadataContentPublicMutationVariables = Exact<{
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}>

export type SetMetadataContentPublicMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      setPublicContent: { __typename?: 'Metadata'; id: string }
    }
  }
}

export type SetMetadataPublicMutationVariables = Exact<{
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}>

export type SetMetadataPublicMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      setPublic: { __typename?: 'Metadata'; id: string }
    }
  }
}

export type SetMetadataReadyMutationVariables = Exact<{
  id: Scalars['String']['input']
}>

export type SetMetadataReadyMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: { __typename?: 'MetadataMutation'; setMetadataReady: boolean }
  }
}

export type SetMetadataSupplementaryPublicMutationVariables = Exact<{
  id: Scalars['String']['input']
  public: Scalars['Boolean']['input']
}>

export type SetMetadataSupplementaryPublicMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      setPublicSupplementary: { __typename?: 'Metadata'; id: string }
    }
  }
}

export type SetTextContentsMutationVariables = Exact<{
  id: Scalars['String']['input']
  contentType: Scalars['String']['input']
  content: Scalars['String']['input']
}>

export type SetTextContentsMutation = {
  __typename?: 'Mutation'
  content: {
    __typename?: 'ContentMutation'
    metadata: {
      __typename?: 'MetadataMutation'
      setMetadataTextContents: boolean
    }
  }
}

export type SignUpMutationVariables = Exact<{
  profile: ProfileInput
  identifier: Scalars['String']['input']
  password: Scalars['String']['input']
}>

export type SignUpMutation = {
  __typename?: 'Mutation'
  security: {
    __typename?: 'SecurityMutation'
    signup: {
      __typename?: 'SignupMutation'
      password: { __typename?: 'Principal'; id: string }
    }
  }
}

export type ValidatePrincipalQueryVariables = Exact<{ [key: string]: never }>

export type ValidatePrincipalQuery = {
  __typename?: 'Query'
  security: {
    __typename?: 'Security'
    principal: { __typename?: 'Principal'; id: string }
  }
}

export type VerifySignUpMutationVariables = Exact<{
  token: Scalars['String']['input']
}>

export type VerifySignUpMutation = {
  __typename?: 'Mutation'
  security: {
    __typename?: 'SecurityMutation'
    signup: { __typename?: 'SignupMutation'; passwordVerify: boolean }
  }
}

export type ActivityFragment = {
  __typename?: 'Activity'
  childWorkflowId?: string | null
  configuration?: any | null
  description: string
  id: string
  name: string
  inputs: Array<
    {
      __typename?: 'ActivityParameter'
      name: string
      type: ActivityParameterType
    }
  >
  outputs: Array<
    {
      __typename?: 'ActivityParameter'
      name: string
      type: ActivityParameterType
    }
  >
}

export type ActivityParameterFragment = {
  __typename?: 'ActivityParameter'
  name: string
  type: ActivityParameterType
}

export type CategoryFragment = {
  __typename?: 'Category'
  id: string
  name: string
}

export type CollectionIdNameFragment = {
  __typename: 'Collection'
  id: string
  name: string
}

export type CollectionListFragment = {
  __typename: 'Collection'
  id: string
  slug?: string | null
  traitIds: Array<string>
  name: string
  description?: string | null
  labels: Array<string>
  created: any
  modified: any
  attributes?: any | null
  systemAttributes?: any | null
  ready?: any | null
  public: boolean
  publicList: boolean
  collectionType: CollectionType
  items: Array<
    {
      __typename: 'Collection'
      id: string
      slug?: string | null
      traitIds: Array<string>
      name: string
      description?: string | null
      labels: Array<string>
      created: any
      modified: any
      attributes?: any | null
      systemAttributes?: any | null
      ready?: any | null
      public: boolean
      publicList: boolean
      collectionType: CollectionType
      templateMetadata?: {
        __typename?: 'Metadata'
        id: string
        version: number
      } | null
      ordering?:
        | Array<
          { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
        >
        | null
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      workflow: {
        __typename?: 'CollectionWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'CollectionSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'CollectionSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'CollectionSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'CollectionSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
    } | {
      __typename: 'Metadata'
      id: string
      version: number
      slug?: string | null
      name: string
      labels: Array<string>
      languageTag: string
      public: boolean
      publicContent: boolean
      publicSupplementary: boolean
      parentId?: string | null
      type: MetadataType
      created: any
      modified: any
      uploaded?: any | null
      ready?: any | null
      attributes?: any | null
      systemAttributes?: any | null
      traitIds: Array<string>
      source: {
        __typename?: 'MetadataSource'
        id?: string | null
        identifier?: string | null
      }
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      content: {
        __typename?: 'MetadataContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'MetadataContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      workflow: {
        __typename?: 'MetadataWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'MetadataSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'MetadataSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
      profiles: Array<
        {
          __typename?: 'MetadataProfile'
          relationship: string
          profile?: {
            __typename: 'Profile'
            id: string
            slug?: string | null
            name: string
            visibility: ProfileVisibility
            attributes: Array<
              {
                __typename?: 'ProfileAttribute'
                id: string
                typeId: string
                visibility: ProfileVisibility
                attributes?: any | null
                metadata?: {
                  __typename?: 'Metadata'
                  id: string
                  content: {
                    __typename?: 'MetadataContent'
                    urls: {
                      __typename?: 'MetadataContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                } | null
              }
            >
          } | null
        }
      >
    }
  >
  templateMetadata?:
    | { __typename?: 'Metadata'; id: string; version: number }
    | null
  ordering?:
    | Array<
      { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
    >
    | null
  categories: Array<{ __typename?: 'Category'; id: string; name: string }>
  workflow: {
    __typename?: 'CollectionWorkflow'
    state: string
    stateValid?: any | null
    pending?: string | null
    running: number
  }
  supplementary: Array<
    {
      __typename?: 'CollectionSupplementary'
      key: string
      name: string
      uploaded?: string | null
      attributes?: any | null
      content: {
        __typename?: 'CollectionSupplementaryContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'CollectionSupplementaryContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      source: {
        __typename?: 'CollectionSupplementarySource'
        id: string
        identifier?: string | null
      }
    }
  >
}

export type CollectionFragment = {
  __typename: 'Collection'
  id: string
  slug?: string | null
  traitIds: Array<string>
  name: string
  description?: string | null
  labels: Array<string>
  created: any
  modified: any
  attributes?: any | null
  systemAttributes?: any | null
  ready?: any | null
  public: boolean
  publicList: boolean
  collectionType: CollectionType
  templateMetadata?:
    | { __typename?: 'Metadata'; id: string; version: number }
    | null
  ordering?:
    | Array<
      { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
    >
    | null
  categories: Array<{ __typename?: 'Category'; id: string; name: string }>
  workflow: {
    __typename?: 'CollectionWorkflow'
    state: string
    stateValid?: any | null
    pending?: string | null
    running: number
  }
  supplementary: Array<
    {
      __typename?: 'CollectionSupplementary'
      key: string
      name: string
      uploaded?: string | null
      attributes?: any | null
      content: {
        __typename?: 'CollectionSupplementaryContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'CollectionSupplementaryContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      source: {
        __typename?: 'CollectionSupplementarySource'
        id: string
        identifier?: string | null
      }
    }
  >
}

export type CollectionParentsFragment = {
  __typename?: 'Collection'
  parentCollections: Array<
    {
      __typename?: 'Collection'
      id: string
      name: string
      attributes?: any | null
    }
  >
}

export type CollectionPermissionsFragment = {
  __typename?: 'Collection'
  permissions: Array<
    {
      __typename?: 'Permission'
      action: PermissionAction
      group: { __typename?: 'Group'; id: string; name: string }
    }
  >
}

export type CollectionDetailFragment = {
  __typename: 'Collection'
  id: string
  slug?: string | null
  traitIds: Array<string>
  name: string
  description?: string | null
  labels: Array<string>
  created: any
  modified: any
  attributes?: any | null
  systemAttributes?: any | null
  ready?: any | null
  public: boolean
  publicList: boolean
  collectionType: CollectionType
  items: Array<
    {
      __typename: 'Collection'
      id: string
      slug?: string | null
      traitIds: Array<string>
      name: string
      description?: string | null
      labels: Array<string>
      created: any
      modified: any
      attributes?: any | null
      systemAttributes?: any | null
      ready?: any | null
      public: boolean
      publicList: boolean
      collectionType: CollectionType
      templateMetadata?: {
        __typename?: 'Metadata'
        id: string
        version: number
      } | null
      ordering?:
        | Array<
          { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
        >
        | null
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      workflow: {
        __typename?: 'CollectionWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'CollectionSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'CollectionSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'CollectionSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'CollectionSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
    } | {
      __typename: 'Metadata'
      id: string
      version: number
      slug?: string | null
      name: string
      labels: Array<string>
      languageTag: string
      public: boolean
      publicContent: boolean
      publicSupplementary: boolean
      parentId?: string | null
      type: MetadataType
      created: any
      modified: any
      uploaded?: any | null
      ready?: any | null
      attributes?: any | null
      systemAttributes?: any | null
      traitIds: Array<string>
      source: {
        __typename?: 'MetadataSource'
        id?: string | null
        identifier?: string | null
      }
      categories: Array<{ __typename?: 'Category'; id: string; name: string }>
      content: {
        __typename?: 'MetadataContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'MetadataContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      workflow: {
        __typename?: 'MetadataWorkflow'
        state: string
        stateValid?: any | null
        pending?: string | null
        running: number
      }
      supplementary: Array<
        {
          __typename?: 'MetadataSupplementary'
          key: string
          name: string
          uploaded?: string | null
          attributes?: any | null
          content: {
            __typename?: 'MetadataSupplementaryContent'
            type: string
            length?: number | null
            urls: {
              __typename?: 'MetadataSupplementaryContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
          source: {
            __typename?: 'MetadataSupplementarySource'
            id: string
            identifier?: string | null
          }
        }
      >
      profiles: Array<
        {
          __typename?: 'MetadataProfile'
          relationship: string
          profile?: {
            __typename: 'Profile'
            id: string
            slug?: string | null
            name: string
            visibility: ProfileVisibility
            attributes: Array<
              {
                __typename?: 'ProfileAttribute'
                id: string
                typeId: string
                visibility: ProfileVisibility
                attributes?: any | null
                metadata?: {
                  __typename?: 'Metadata'
                  id: string
                  content: {
                    __typename?: 'MetadataContent'
                    urls: {
                      __typename?: 'MetadataContentUrls'
                      download: {
                        __typename?: 'SignedUrl'
                        url: string
                        headers: Array<
                          {
                            __typename?: 'SignedUrlHeader'
                            name: string
                            value: string
                          }
                        >
                      }
                    }
                  }
                } | null
              }
            >
          } | null
        }
      >
    }
  >
  templateMetadata?:
    | { __typename?: 'Metadata'; id: string; version: number }
    | null
  ordering?:
    | Array<
      { __typename?: 'Ordering'; path?: Array<string> | null; order: Order }
    >
    | null
  categories: Array<{ __typename?: 'Category'; id: string; name: string }>
  workflow: {
    __typename?: 'CollectionWorkflow'
    state: string
    stateValid?: any | null
    pending?: string | null
    running: number
  }
  supplementary: Array<
    {
      __typename?: 'CollectionSupplementary'
      key: string
      name: string
      uploaded?: string | null
      attributes?: any | null
      content: {
        __typename?: 'CollectionSupplementaryContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'CollectionSupplementaryContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      source: {
        __typename?: 'CollectionSupplementarySource'
        id: string
        identifier?: string | null
      }
    }
  >
}

export type CollectionMetadataRelationshipFragment = {
  __typename?: 'CollectionMetadataRelationship'
  relationship?: string | null
  attributes?: any | null
  metadata: {
    __typename?: 'Metadata'
    id: string
    version: number
    name: string
    public: boolean
    publicContent: boolean
    workflow: {
      __typename?: 'MetadataWorkflow'
      pending?: string | null
      state: string
    }
  }
}

export type CollectionSupplementaryFragment = {
  __typename?: 'CollectionSupplementary'
  key: string
  name: string
  uploaded?: string | null
  attributes?: any | null
  content: {
    __typename?: 'CollectionSupplementaryContent'
    type: string
    length?: number | null
    urls: {
      __typename?: 'CollectionSupplementaryContentUrls'
      download: {
        __typename?: 'SignedUrl'
        url: string
        headers: Array<
          { __typename?: 'SignedUrlHeader'; name: string; value: string }
        >
      }
    }
  }
  source: {
    __typename?: 'CollectionSupplementarySource'
    id: string
    identifier?: string | null
  }
}

export type CollectionSupplementaryContentFragment = {
  __typename?: 'CollectionSupplementaryContent'
  type: string
  length?: number | null
  urls: {
    __typename?: 'CollectionSupplementaryContentUrls'
    download: {
      __typename?: 'SignedUrl'
      url: string
      headers: Array<
        { __typename?: 'SignedUrlHeader'; name: string; value: string }
      >
    }
  }
}

export type CollectionTemplateFragment = {
  __typename?: 'CollectionTemplate'
  configuration?: any | null
  defaultAttributes?: any | null
  collectionFilter?: {
    __typename?: 'FindQueries'
    options: Array<
      {
        __typename?: 'FindQueryOption'
        name: string
        query: {
          __typename?: 'FindQuery'
          categoryIds?: Array<string> | null
          collectionType?: CollectionType | null
          contentTypes?: Array<string> | null
          extensionFilter?: ExtensionFilterType | null
          offset?: number | null
          limit?: number | null
          attributes: Array<
            {
              __typename?: 'FindAttributes'
              attributes: Array<
                { __typename?: 'FindAttribute'; key: string; value: string }
              >
            }
          >
        }
      }
    >
  } | null
  attributes: Array<
    {
      __typename?: 'TemplateAttribute'
      key: string
      name: string
      description: string
      type: AttributeType
      supplementaryKey?: string | null
      ui: AttributeUiType
      list: boolean
      configuration?: any | null
      workflows: Array<
        {
          __typename?: 'TemplateWorkflow'
          autoRun: boolean
          workflow?: {
            __typename?: 'Workflow'
            id: string
            queue: string
            name: string
            description: string
            configuration: any
          } | null
        }
      >
    }
  >
}

export type CollectionWorkflowFragment = {
  __typename?: 'CollectionWorkflow'
  state: string
  stateValid?: any | null
  pending?: string | null
  running: number
}

export type ConfigurationFragment = {
  __typename?: 'Configuration'
  id: string
  key: string
  description: string
  value?: any | null
  permissions: Array<
    {
      __typename?: 'ConfigurationPermission'
      action: PermissionAction
      group: { __typename?: 'Group'; id: string; name: string }
    }
  >
}

export type DocumentFragment = {
  __typename?: 'Document'
  title: string
  content: any
  template?: { __typename?: 'Metadata'; id: string; version: number } | null
}

export type DocumentTemplateFragment = {
  __typename?: 'DocumentTemplate'
  configuration?: any | null
  schema?: any | null
  content: any
  defaultAttributes?: any | null
  containers: Array<
    {
      __typename?: 'DocumentTemplateContainer'
      id: string
      name: string
      description: string
      supplementaryKey?: string | null
      workflows: Array<
        {
          __typename?: 'TemplateWorkflow'
          autoRun: boolean
          workflow?:
            | { __typename?: 'Workflow'; id: string; name: string }
            | null
        }
      >
    }
  >
  attributes: Array<
    {
      __typename?: 'TemplateAttribute'
      key: string
      name: string
      description: string
      type: AttributeType
      supplementaryKey?: string | null
      ui: AttributeUiType
      list: boolean
      configuration?: any | null
      workflows: Array<
        {
          __typename?: 'TemplateWorkflow'
          autoRun: boolean
          workflow?:
            | { __typename?: 'Workflow'; id: string; name: string }
            | null
        }
      >
    }
  >
}

export type DocumentTemplateContainerFragment = {
  __typename?: 'DocumentTemplateContainer'
  id: string
  name: string
  description: string
  supplementaryKey?: string | null
  workflows: Array<
    {
      __typename?: 'TemplateWorkflow'
      autoRun: boolean
      workflow?: { __typename?: 'Workflow'; id: string; name: string } | null
    }
  >
}

export type FindAttributesFragment = {
  __typename?: 'FindAttributes'
  attributes: Array<
    { __typename?: 'FindAttribute'; key: string; value: string }
  >
}

export type FindAttributeFragment = {
  __typename?: 'FindAttribute'
  key: string
  value: string
}

export type FindQueryFragment = {
  __typename?: 'FindQuery'
  categoryIds?: Array<string> | null
  collectionType?: CollectionType | null
  contentTypes?: Array<string> | null
  extensionFilter?: ExtensionFilterType | null
  offset?: number | null
  limit?: number | null
  attributes: Array<
    {
      __typename?: 'FindAttributes'
      attributes: Array<
        { __typename?: 'FindAttribute'; key: string; value: string }
      >
    }
  >
}

export type FindQueryOptionFragment = {
  __typename?: 'FindQueryOption'
  name: string
  query: {
    __typename?: 'FindQuery'
    categoryIds?: Array<string> | null
    collectionType?: CollectionType | null
    contentTypes?: Array<string> | null
    extensionFilter?: ExtensionFilterType | null
    offset?: number | null
    limit?: number | null
    attributes: Array<
      {
        __typename?: 'FindAttributes'
        attributes: Array<
          { __typename?: 'FindAttribute'; key: string; value: string }
        >
      }
    >
  }
}

export type GroupFragment = { __typename?: 'Group'; id: string; name: string }

export type GuideFragment = {
  __typename?: 'Guide'
  type: GuideType
  rrule?: string | null
  template?: { __typename?: 'Metadata'; id: string; version: number } | null
  steps: Array<
    {
      __typename?: 'GuideStep'
      id: number
      date?: any | null
      metadata?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
      modules: Array<
        {
          __typename?: 'GuideStepModule'
          metadata?: {
            __typename: 'Metadata'
            id: string
            version: number
            slug?: string | null
            name: string
            labels: Array<string>
            languageTag: string
            public: boolean
            publicContent: boolean
            publicSupplementary: boolean
            parentId?: string | null
            type: MetadataType
            created: any
            modified: any
            uploaded?: any | null
            ready?: any | null
            attributes?: any | null
            systemAttributes?: any | null
            traitIds: Array<string>
            source: {
              __typename?: 'MetadataSource'
              id?: string | null
              identifier?: string | null
            }
            categories: Array<
              { __typename?: 'Category'; id: string; name: string }
            >
            content: {
              __typename?: 'MetadataContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            workflow: {
              __typename?: 'MetadataWorkflow'
              state: string
              stateValid?: any | null
              pending?: string | null
              running: number
            }
            supplementary: Array<
              {
                __typename?: 'MetadataSupplementary'
                key: string
                name: string
                uploaded?: string | null
                attributes?: any | null
                content: {
                  __typename?: 'MetadataSupplementaryContent'
                  type: string
                  length?: number | null
                  urls: {
                    __typename?: 'MetadataSupplementaryContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
                source: {
                  __typename?: 'MetadataSupplementarySource'
                  id: string
                  identifier?: string | null
                }
              }
            >
            profiles: Array<
              {
                __typename?: 'MetadataProfile'
                relationship: string
                profile?: {
                  __typename: 'Profile'
                  id: string
                  slug?: string | null
                  name: string
                  visibility: ProfileVisibility
                  attributes: Array<
                    {
                      __typename?: 'ProfileAttribute'
                      id: string
                      typeId: string
                      visibility: ProfileVisibility
                      attributes?: any | null
                      metadata?: {
                        __typename?: 'Metadata'
                        id: string
                        content: {
                          __typename?: 'MetadataContent'
                          urls: {
                            __typename?: 'MetadataContentUrls'
                            download: {
                              __typename?: 'SignedUrl'
                              url: string
                              headers: Array<
                                {
                                  __typename?: 'SignedUrlHeader'
                                  name: string
                                  value: string
                                }
                              >
                            }
                          }
                        }
                      } | null
                    }
                  >
                } | null
              }
            >
          } | null
        }
      >
    }
  >
}

export type GuideStepFragment = {
  __typename?: 'GuideStep'
  id: number
  date?: any | null
  metadata?: {
    __typename: 'Metadata'
    id: string
    version: number
    slug?: string | null
    name: string
    labels: Array<string>
    languageTag: string
    public: boolean
    publicContent: boolean
    publicSupplementary: boolean
    parentId?: string | null
    type: MetadataType
    created: any
    modified: any
    uploaded?: any | null
    ready?: any | null
    attributes?: any | null
    systemAttributes?: any | null
    traitIds: Array<string>
    source: {
      __typename?: 'MetadataSource'
      id?: string | null
      identifier?: string | null
    }
    categories: Array<{ __typename?: 'Category'; id: string; name: string }>
    content: {
      __typename?: 'MetadataContent'
      type: string
      length?: number | null
      urls: {
        __typename?: 'MetadataContentUrls'
        download: {
          __typename?: 'SignedUrl'
          url: string
          headers: Array<
            { __typename?: 'SignedUrlHeader'; name: string; value: string }
          >
        }
      }
    }
    workflow: {
      __typename?: 'MetadataWorkflow'
      state: string
      stateValid?: any | null
      pending?: string | null
      running: number
    }
    supplementary: Array<
      {
        __typename?: 'MetadataSupplementary'
        key: string
        name: string
        uploaded?: string | null
        attributes?: any | null
        content: {
          __typename?: 'MetadataSupplementaryContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataSupplementaryContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        source: {
          __typename?: 'MetadataSupplementarySource'
          id: string
          identifier?: string | null
        }
      }
    >
    profiles: Array<
      {
        __typename?: 'MetadataProfile'
        relationship: string
        profile?: {
          __typename: 'Profile'
          id: string
          slug?: string | null
          name: string
          visibility: ProfileVisibility
          attributes: Array<
            {
              __typename?: 'ProfileAttribute'
              id: string
              typeId: string
              visibility: ProfileVisibility
              attributes?: any | null
              metadata?: {
                __typename?: 'Metadata'
                id: string
                content: {
                  __typename?: 'MetadataContent'
                  urls: {
                    __typename?: 'MetadataContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
              } | null
            }
          >
        } | null
      }
    >
  } | null
  modules: Array<
    {
      __typename?: 'GuideStepModule'
      metadata?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
    }
  >
}

export type GuideStepModuleFragment = {
  __typename?: 'GuideStepModule'
  metadata?: {
    __typename: 'Metadata'
    id: string
    version: number
    slug?: string | null
    name: string
    labels: Array<string>
    languageTag: string
    public: boolean
    publicContent: boolean
    publicSupplementary: boolean
    parentId?: string | null
    type: MetadataType
    created: any
    modified: any
    uploaded?: any | null
    ready?: any | null
    attributes?: any | null
    systemAttributes?: any | null
    traitIds: Array<string>
    source: {
      __typename?: 'MetadataSource'
      id?: string | null
      identifier?: string | null
    }
    categories: Array<{ __typename?: 'Category'; id: string; name: string }>
    content: {
      __typename?: 'MetadataContent'
      type: string
      length?: number | null
      urls: {
        __typename?: 'MetadataContentUrls'
        download: {
          __typename?: 'SignedUrl'
          url: string
          headers: Array<
            { __typename?: 'SignedUrlHeader'; name: string; value: string }
          >
        }
      }
    }
    workflow: {
      __typename?: 'MetadataWorkflow'
      state: string
      stateValid?: any | null
      pending?: string | null
      running: number
    }
    supplementary: Array<
      {
        __typename?: 'MetadataSupplementary'
        key: string
        name: string
        uploaded?: string | null
        attributes?: any | null
        content: {
          __typename?: 'MetadataSupplementaryContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataSupplementaryContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        source: {
          __typename?: 'MetadataSupplementarySource'
          id: string
          identifier?: string | null
        }
      }
    >
    profiles: Array<
      {
        __typename?: 'MetadataProfile'
        relationship: string
        profile?: {
          __typename: 'Profile'
          id: string
          slug?: string | null
          name: string
          visibility: ProfileVisibility
          attributes: Array<
            {
              __typename?: 'ProfileAttribute'
              id: string
              typeId: string
              visibility: ProfileVisibility
              attributes?: any | null
              metadata?: {
                __typename?: 'Metadata'
                id: string
                content: {
                  __typename?: 'MetadataContent'
                  urls: {
                    __typename?: 'MetadataContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
              } | null
            }
          >
        } | null
      }
    >
  } | null
}

export type GuideTemplateFragment = {
  __typename?: 'GuideTemplate'
  rrule?: string | null
  type: GuideType
  steps: Array<
    {
      __typename?: 'GuideTemplateStep'
      id: number
      metadata?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
      modules: Array<
        {
          __typename?: 'GuideTemplateStepModule'
          id: number
          metadata?: {
            __typename: 'Metadata'
            id: string
            version: number
            slug?: string | null
            name: string
            labels: Array<string>
            languageTag: string
            public: boolean
            publicContent: boolean
            publicSupplementary: boolean
            parentId?: string | null
            type: MetadataType
            created: any
            modified: any
            uploaded?: any | null
            ready?: any | null
            attributes?: any | null
            systemAttributes?: any | null
            traitIds: Array<string>
            source: {
              __typename?: 'MetadataSource'
              id?: string | null
              identifier?: string | null
            }
            categories: Array<
              { __typename?: 'Category'; id: string; name: string }
            >
            content: {
              __typename?: 'MetadataContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            workflow: {
              __typename?: 'MetadataWorkflow'
              state: string
              stateValid?: any | null
              pending?: string | null
              running: number
            }
            supplementary: Array<
              {
                __typename?: 'MetadataSupplementary'
                key: string
                name: string
                uploaded?: string | null
                attributes?: any | null
                content: {
                  __typename?: 'MetadataSupplementaryContent'
                  type: string
                  length?: number | null
                  urls: {
                    __typename?: 'MetadataSupplementaryContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
                source: {
                  __typename?: 'MetadataSupplementarySource'
                  id: string
                  identifier?: string | null
                }
              }
            >
            profiles: Array<
              {
                __typename?: 'MetadataProfile'
                relationship: string
                profile?: {
                  __typename: 'Profile'
                  id: string
                  slug?: string | null
                  name: string
                  visibility: ProfileVisibility
                  attributes: Array<
                    {
                      __typename?: 'ProfileAttribute'
                      id: string
                      typeId: string
                      visibility: ProfileVisibility
                      attributes?: any | null
                      metadata?: {
                        __typename?: 'Metadata'
                        id: string
                        content: {
                          __typename?: 'MetadataContent'
                          urls: {
                            __typename?: 'MetadataContentUrls'
                            download: {
                              __typename?: 'SignedUrl'
                              url: string
                              headers: Array<
                                {
                                  __typename?: 'SignedUrlHeader'
                                  name: string
                                  value: string
                                }
                              >
                            }
                          }
                        }
                      } | null
                    }
                  >
                } | null
              }
            >
          } | null
        }
      >
    }
  >
}

export type GuideTemplateStepFragment = {
  __typename?: 'GuideTemplateStep'
  id: number
  metadata?: {
    __typename: 'Metadata'
    id: string
    version: number
    slug?: string | null
    name: string
    labels: Array<string>
    languageTag: string
    public: boolean
    publicContent: boolean
    publicSupplementary: boolean
    parentId?: string | null
    type: MetadataType
    created: any
    modified: any
    uploaded?: any | null
    ready?: any | null
    attributes?: any | null
    systemAttributes?: any | null
    traitIds: Array<string>
    source: {
      __typename?: 'MetadataSource'
      id?: string | null
      identifier?: string | null
    }
    categories: Array<{ __typename?: 'Category'; id: string; name: string }>
    content: {
      __typename?: 'MetadataContent'
      type: string
      length?: number | null
      urls: {
        __typename?: 'MetadataContentUrls'
        download: {
          __typename?: 'SignedUrl'
          url: string
          headers: Array<
            { __typename?: 'SignedUrlHeader'; name: string; value: string }
          >
        }
      }
    }
    workflow: {
      __typename?: 'MetadataWorkflow'
      state: string
      stateValid?: any | null
      pending?: string | null
      running: number
    }
    supplementary: Array<
      {
        __typename?: 'MetadataSupplementary'
        key: string
        name: string
        uploaded?: string | null
        attributes?: any | null
        content: {
          __typename?: 'MetadataSupplementaryContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataSupplementaryContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        source: {
          __typename?: 'MetadataSupplementarySource'
          id: string
          identifier?: string | null
        }
      }
    >
    profiles: Array<
      {
        __typename?: 'MetadataProfile'
        relationship: string
        profile?: {
          __typename: 'Profile'
          id: string
          slug?: string | null
          name: string
          visibility: ProfileVisibility
          attributes: Array<
            {
              __typename?: 'ProfileAttribute'
              id: string
              typeId: string
              visibility: ProfileVisibility
              attributes?: any | null
              metadata?: {
                __typename?: 'Metadata'
                id: string
                content: {
                  __typename?: 'MetadataContent'
                  urls: {
                    __typename?: 'MetadataContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
              } | null
            }
          >
        } | null
      }
    >
  } | null
  modules: Array<
    {
      __typename?: 'GuideTemplateStepModule'
      id: number
      metadata?: {
        __typename: 'Metadata'
        id: string
        version: number
        slug?: string | null
        name: string
        labels: Array<string>
        languageTag: string
        public: boolean
        publicContent: boolean
        publicSupplementary: boolean
        parentId?: string | null
        type: MetadataType
        created: any
        modified: any
        uploaded?: any | null
        ready?: any | null
        attributes?: any | null
        systemAttributes?: any | null
        traitIds: Array<string>
        source: {
          __typename?: 'MetadataSource'
          id?: string | null
          identifier?: string | null
        }
        categories: Array<{ __typename?: 'Category'; id: string; name: string }>
        content: {
          __typename?: 'MetadataContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        workflow: {
          __typename?: 'MetadataWorkflow'
          state: string
          stateValid?: any | null
          pending?: string | null
          running: number
        }
        supplementary: Array<
          {
            __typename?: 'MetadataSupplementary'
            key: string
            name: string
            uploaded?: string | null
            attributes?: any | null
            content: {
              __typename?: 'MetadataSupplementaryContent'
              type: string
              length?: number | null
              urls: {
                __typename?: 'MetadataSupplementaryContentUrls'
                download: {
                  __typename?: 'SignedUrl'
                  url: string
                  headers: Array<
                    {
                      __typename?: 'SignedUrlHeader'
                      name: string
                      value: string
                    }
                  >
                }
              }
            }
            source: {
              __typename?: 'MetadataSupplementarySource'
              id: string
              identifier?: string | null
            }
          }
        >
        profiles: Array<
          {
            __typename?: 'MetadataProfile'
            relationship: string
            profile?: {
              __typename: 'Profile'
              id: string
              slug?: string | null
              name: string
              visibility: ProfileVisibility
              attributes: Array<
                {
                  __typename?: 'ProfileAttribute'
                  id: string
                  typeId: string
                  visibility: ProfileVisibility
                  attributes?: any | null
                  metadata?: {
                    __typename?: 'Metadata'
                    id: string
                    content: {
                      __typename?: 'MetadataContent'
                      urls: {
                        __typename?: 'MetadataContentUrls'
                        download: {
                          __typename?: 'SignedUrl'
                          url: string
                          headers: Array<
                            {
                              __typename?: 'SignedUrlHeader'
                              name: string
                              value: string
                            }
                          >
                        }
                      }
                    }
                  } | null
                }
              >
            } | null
          }
        >
      } | null
    }
  >
}

export type GuideTemplateStepModuleFragment = {
  __typename?: 'GuideTemplateStepModule'
  id: number
  metadata?: {
    __typename: 'Metadata'
    id: string
    version: number
    slug?: string | null
    name: string
    labels: Array<string>
    languageTag: string
    public: boolean
    publicContent: boolean
    publicSupplementary: boolean
    parentId?: string | null
    type: MetadataType
    created: any
    modified: any
    uploaded?: any | null
    ready?: any | null
    attributes?: any | null
    systemAttributes?: any | null
    traitIds: Array<string>
    source: {
      __typename?: 'MetadataSource'
      id?: string | null
      identifier?: string | null
    }
    categories: Array<{ __typename?: 'Category'; id: string; name: string }>
    content: {
      __typename?: 'MetadataContent'
      type: string
      length?: number | null
      urls: {
        __typename?: 'MetadataContentUrls'
        download: {
          __typename?: 'SignedUrl'
          url: string
          headers: Array<
            { __typename?: 'SignedUrlHeader'; name: string; value: string }
          >
        }
      }
    }
    workflow: {
      __typename?: 'MetadataWorkflow'
      state: string
      stateValid?: any | null
      pending?: string | null
      running: number
    }
    supplementary: Array<
      {
        __typename?: 'MetadataSupplementary'
        key: string
        name: string
        uploaded?: string | null
        attributes?: any | null
        content: {
          __typename?: 'MetadataSupplementaryContent'
          type: string
          length?: number | null
          urls: {
            __typename?: 'MetadataSupplementaryContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
        source: {
          __typename?: 'MetadataSupplementarySource'
          id: string
          identifier?: string | null
        }
      }
    >
    profiles: Array<
      {
        __typename?: 'MetadataProfile'
        relationship: string
        profile?: {
          __typename: 'Profile'
          id: string
          slug?: string | null
          name: string
          visibility: ProfileVisibility
          attributes: Array<
            {
              __typename?: 'ProfileAttribute'
              id: string
              typeId: string
              visibility: ProfileVisibility
              attributes?: any | null
              metadata?: {
                __typename?: 'Metadata'
                id: string
                content: {
                  __typename?: 'MetadataContent'
                  urls: {
                    __typename?: 'MetadataContentUrls'
                    download: {
                      __typename?: 'SignedUrl'
                      url: string
                      headers: Array<
                        {
                          __typename?: 'SignedUrlHeader'
                          name: string
                          value: string
                        }
                      >
                    }
                  }
                }
              } | null
            }
          >
        } | null
      }
    >
  } | null
}

export type MetadataIdNameFragment = {
  __typename: 'Metadata'
  id: string
  version: number
  slug?: string | null
  name: string
  content: { __typename?: 'MetadataContent'; type: string }
}

export type MetadataFragment = {
  __typename: 'Metadata'
  id: string
  version: number
  slug?: string | null
  name: string
  labels: Array<string>
  languageTag: string
  public: boolean
  publicContent: boolean
  publicSupplementary: boolean
  parentId?: string | null
  type: MetadataType
  created: any
  modified: any
  uploaded?: any | null
  ready?: any | null
  attributes?: any | null
  systemAttributes?: any | null
  traitIds: Array<string>
  source: {
    __typename?: 'MetadataSource'
    id?: string | null
    identifier?: string | null
  }
  categories: Array<{ __typename?: 'Category'; id: string; name: string }>
  content: {
    __typename?: 'MetadataContent'
    type: string
    length?: number | null
    urls: {
      __typename?: 'MetadataContentUrls'
      download: {
        __typename?: 'SignedUrl'
        url: string
        headers: Array<
          { __typename?: 'SignedUrlHeader'; name: string; value: string }
        >
      }
    }
  }
  workflow: {
    __typename?: 'MetadataWorkflow'
    state: string
    stateValid?: any | null
    pending?: string | null
    running: number
  }
  supplementary: Array<
    {
      __typename?: 'MetadataSupplementary'
      key: string
      name: string
      uploaded?: string | null
      attributes?: any | null
      content: {
        __typename?: 'MetadataSupplementaryContent'
        type: string
        length?: number | null
        urls: {
          __typename?: 'MetadataSupplementaryContentUrls'
          download: {
            __typename?: 'SignedUrl'
            url: string
            headers: Array<
              { __typename?: 'SignedUrlHeader'; name: string; value: string }
            >
          }
        }
      }
      source: {
        __typename?: 'MetadataSupplementarySource'
        id: string
        identifier?: string | null
      }
    }
  >
  profiles: Array<
    {
      __typename?: 'MetadataProfile'
      relationship: string
      profile?: {
        __typename: 'Profile'
        id: string
        slug?: string | null
        name: string
        visibility: ProfileVisibility
        attributes: Array<
          {
            __typename?: 'ProfileAttribute'
            id: string
            typeId: string
            visibility: ProfileVisibility
            attributes?: any | null
            metadata?: {
              __typename?: 'Metadata'
              id: string
              content: {
                __typename?: 'MetadataContent'
                urls: {
                  __typename?: 'MetadataContentUrls'
                  download: {
                    __typename?: 'SignedUrl'
                    url: string
                    headers: Array<
                      {
                        __typename?: 'SignedUrlHeader'
                        name: string
                        value: string
                      }
                    >
                  }
                }
              }
            } | null
          }
        >
      } | null
    }
  >
}

export type MetadataContentFragment = {
  __typename?: 'MetadataContent'
  type: string
  length?: number | null
  urls: {
    __typename?: 'MetadataContentUrls'
    download: {
      __typename?: 'SignedUrl'
      url: string
      headers: Array<
        { __typename?: 'SignedUrlHeader'; name: string; value: string }
      >
    }
  }
}

export type MetadataContentUploadFragment = {
  __typename?: 'MetadataContent'
  urls: {
    __typename?: 'MetadataContentUrls'
    upload: {
      __typename?: 'SignedUrl'
      url: string
      headers: Array<
        { __typename?: 'SignedUrlHeader'; name: string; value: string }
      >
    }
  }
}

export type MetadataProfileFragment = {
  __typename?: 'MetadataProfile'
  relationship: string
  profile?: {
    __typename: 'Profile'
    id: string
    slug?: string | null
    name: string
    visibility: ProfileVisibility
    attributes: Array<
      {
        __typename?: 'ProfileAttribute'
        id: string
        typeId: string
        visibility: ProfileVisibility
        attributes?: any | null
        metadata?: {
          __typename?: 'Metadata'
          id: string
          content: {
            __typename?: 'MetadataContent'
            urls: {
              __typename?: 'MetadataContentUrls'
              download: {
                __typename?: 'SignedUrl'
                url: string
                headers: Array<
                  {
                    __typename?: 'SignedUrlHeader'
                    name: string
                    value: string
                  }
                >
              }
            }
          }
        } | null
      }
    >
  } | null
}

export type MetadataRelationshipMetadataFragment = {
  __typename?: 'Metadata'
  id: string
  version: number
  name: string
  public: boolean
  publicContent: boolean
  workflow: {
    __typename?: 'MetadataWorkflow'
    pending?: string | null
    state: string
  }
}

export type MetadataRelationshipFragment = {
  __typename?: 'MetadataRelationship'
  relationship: string
  attributes?: any | null
  metadata: {
    __typename?: 'Metadata'
    id: string
    version: number
    name: string
    public: boolean
    publicContent: boolean
    workflow: {
      __typename?: 'MetadataWorkflow'
      pending?: string | null
      state: string
    }
  }
}

export type MetadataSupplementaryFragment = {
  __typename?: 'MetadataSupplementary'
  key: string
  name: string
  uploaded?: string | null
  attributes?: any | null
  content: {
    __typename?: 'MetadataSupplementaryContent'
    type: string
    length?: number | null
    urls: {
      __typename?: 'MetadataSupplementaryContentUrls'
      download: {
        __typename?: 'SignedUrl'
        url: string
        headers: Array<
          { __typename?: 'SignedUrlHeader'; name: string; value: string }
        >
      }
    }
  }
  source: {
    __typename?: 'MetadataSupplementarySource'
    id: string
    identifier?: string | null
  }
}

export type MetadataSupplementaryContentFragment = {
  __typename?: 'MetadataSupplementaryContent'
  type: string
  length?: number | null
  urls: {
    __typename?: 'MetadataSupplementaryContentUrls'
    download: {
      __typename?: 'SignedUrl'
      url: string
      headers: Array<
        { __typename?: 'SignedUrlHeader'; name: string; value: string }
      >
    }
  }
}

export type MetadataWorkflowFragment = {
  __typename?: 'MetadataWorkflow'
  state: string
  stateValid?: any | null
  pending?: string | null
  running: number
}

export type ModelFragment = {
  __typename?: 'Model'
  id: string
  name: string
  type: string
  description: string
  configuration: any
}

export type OrderingFragment = {
  __typename?: 'Ordering'
  path?: Array<string> | null
  order: Order
}

export type ParentCollectionFragment = {
  __typename?: 'Collection'
  id: string
  name: string
  attributes?: any | null
}

export type PermissionFragment = {
  __typename?: 'Permission'
  action: PermissionAction
  group: { __typename?: 'Group'; id: string; name: string }
}

export type PlanWorkflowFragment = {
  __typename?: 'Workflow'
  id: string
  name: string
}

export type PrincipalFragment = {
  __typename?: 'Principal'
  id: string
  verified: boolean
  groups: Array<{ __typename?: 'Group'; id: string; name: string }>
}

export type ProfileIdNameFragment = {
  __typename: 'Profile'
  id: string
  name: string
}

export type ProfileFragment = {
  __typename: 'Profile'
  id: string
  slug?: string | null
  name: string
  visibility: ProfileVisibility
  attributes: Array<
    {
      __typename?: 'ProfileAttribute'
      id: string
      typeId: string
      visibility: ProfileVisibility
      attributes?: any | null
      metadata?: {
        __typename?: 'Metadata'
        id: string
        content: {
          __typename?: 'MetadataContent'
          urls: {
            __typename?: 'MetadataContentUrls'
            download: {
              __typename?: 'SignedUrl'
              url: string
              headers: Array<
                { __typename?: 'SignedUrlHeader'; name: string; value: string }
              >
            }
          }
        }
      } | null
    }
  >
}

export type PromptFragment = {
  __typename?: 'Prompt'
  id: string
  name: string
  description: string
  inputType: string
  outputType: string
  systemPrompt: string
  userPrompt: string
}

export type StorageSystemFragment = {
  __typename?: 'StorageSystem'
  id: string
  name: string
  type: StorageSystemType
  description: string
  configuration?: any | null
  models: Array<
    { __typename?: 'StorageSystemModel'; modelId: string; configuration: any }
  >
}

export type TemplateAttributeFragment = {
  __typename?: 'TemplateAttribute'
  key: string
  name: string
  description: string
  type: AttributeType
  supplementaryKey?: string | null
  ui: AttributeUiType
  list: boolean
  configuration?: any | null
  workflows: Array<
    {
      __typename?: 'TemplateWorkflow'
      autoRun: boolean
      workflow?: { __typename?: 'Workflow'; id: string; name: string } | null
    }
  >
}

export type TemplateWorkflowFragment = {
  __typename?: 'TemplateWorkflow'
  autoRun: boolean
  workflow?: { __typename?: 'Workflow'; id: string; name: string } | null
}

export type TraitFragment = {
  __typename?: 'Trait'
  id: string
  name: string
  description: string
  contentTypes: Array<string>
  workflowIds: Array<string>
  deleteWorkflowId?: string | null
}

export type TransitionFragment = {
  __typename?: 'Transition'
  fromStateId: string
  toStateId: string
  description: string
}

export type WorkflowFragment = {
  __typename?: 'Workflow'
  id: string
  queue: string
  name: string
  description: string
  configuration: any
}

export type WorkflowActivityFragment = {
  __typename?: 'WorkflowActivity'
  id: number
  activityId: string
  queue: string
  executionGroup: number
  configuration?: any | null
  inputs: Array<
    { __typename?: 'WorkflowActivityParameter'; name: string; value: string }
  >
  outputs: Array<
    { __typename?: 'WorkflowActivityParameter'; name: string; value: string }
  >
  storageSystems: Array<
    {
      __typename?: 'WorkflowActivityStorageSystem'
      configuration?: any | null
      system: { __typename?: 'StorageSystem'; id: string }
    }
  >
  models: Array<
    {
      __typename?: 'WorkflowActivityModel'
      configuration?: any | null
      model: { __typename?: 'Model'; id: string }
    }
  >
  prompts: Array<
    {
      __typename?: 'WorkflowActivityPrompt'
      configuration?: any | null
      prompt: { __typename?: 'Prompt'; id: string }
    }
  >
}

export type WorkflowActivityModelFragment = {
  __typename?: 'WorkflowActivityModel'
  configuration?: any | null
  model: { __typename?: 'Model'; id: string }
}

export type WorkflowActivityParameterFragment = {
  __typename?: 'WorkflowActivityParameter'
  name: string
  value: string
}

export type WorkflowActivityPromptFragment = {
  __typename?: 'WorkflowActivityPrompt'
  configuration?: any | null
  prompt: { __typename?: 'Prompt'; id: string }
}

export type WorkflowExecutionIdFragment = {
  __typename?: 'WorkflowExecutionId'
  id: string
  queue: string
}

export type WorkflowPlanFragment = {
  __typename?: 'WorkflowExecutionPlan'
  complete: Array<number>
  active: Array<number>
  failed: Array<number>
  error?: string | null
  cancelled: boolean
  id: { __typename?: 'WorkflowExecutionId'; id: string; queue: string }
  workflow: { __typename?: 'Workflow'; id: string; name: string }
}

export type WorkflowStateFragment = {
  __typename?: 'WorkflowState'
  id: string
  name: string
  configuration?: any | null
  description: string
  entryWorkflowId?: string | null
  exitWorkflowId?: string | null
  workflowId?: string | null
  type: WorkflowStateType
}

export type WorkflowActivityStorageSystemFragment = {
  __typename?: 'WorkflowActivityStorageSystem'
  configuration?: any | null
  system: { __typename?: 'StorageSystem'; id: string }
}

export const ActivityParameterFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }],
} as unknown as DocumentNode<ActivityParameterFragment, unknown>
export const ActivityFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Activity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Activity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'childWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }],
} as unknown as DocumentNode<ActivityFragment, unknown>
export const CollectionIdNameFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionIdName' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionIdNameFragment, unknown>
export const OrderingFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }],
} as unknown as DocumentNode<OrderingFragment, unknown>
export const CategoryFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<CategoryFragment, unknown>
export const CollectionWorkflowFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionWorkflowFragment, unknown>
export const CollectionSupplementaryContentFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionSupplementaryContentFragment, unknown>
export const CollectionSupplementaryFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionSupplementaryFragment, unknown>
export const CollectionFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionFragment, unknown>
export const MetadataContentFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataContentFragment, unknown>
export const MetadataWorkflowFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataWorkflowFragment, unknown>
export const MetadataSupplementaryContentFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataSupplementaryContentFragment, unknown>
export const MetadataSupplementaryFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataSupplementaryFragment, unknown>
export const ProfileFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<ProfileFragment, unknown>
export const MetadataProfileFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataProfileFragment, unknown>
export const MetadataFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<MetadataFragment, unknown>
export const CollectionListFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionList' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'FragmentSpread',
        'name': { 'kind': 'Name', 'value': 'Collection' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'items' },
        'arguments': [{
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'offset' },
          'value': { 'kind': 'IntValue', 'value': '0' },
        }, {
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'limit' },
          'value': { 'kind': 'IntValue', 'value': '1000' },
        }],
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': '__typename' },
          }, {
            'kind': 'InlineFragment',
            'typeCondition': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'Collection' },
            },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Collection' },
              }],
            },
          }, {
            'kind': 'InlineFragment',
            'typeCondition': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Metadata' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionListFragment, unknown>
export const ParentCollectionFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ParentCollection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
      ],
    },
  }],
} as unknown as DocumentNode<ParentCollectionFragment, unknown>
export const CollectionParentsFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionParents' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'parentCollections' },
        'arguments': [{
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'offset' },
          'value': { 'kind': 'IntValue', 'value': '0' },
        }, {
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'limit' },
          'value': { 'kind': 'IntValue', 'value': '100' },
        }],
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'ParentCollection' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ParentCollection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionParentsFragment, unknown>
export const GroupFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<GroupFragment, unknown>
export const PermissionFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Permission' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Permission' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'action' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'group' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Group' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<PermissionFragment, unknown>
export const CollectionPermissionsFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionPermissions' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'permissions' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Permission' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Permission' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Permission' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'action' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'group' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Group' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<CollectionPermissionsFragment, unknown>
export const CollectionDetailFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionDetail' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'FragmentSpread',
        'name': { 'kind': 'Name', 'value': 'Collection' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'items' },
        'arguments': [{
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'offset' },
          'value': { 'kind': 'IntValue', 'value': '0' },
        }, {
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'limit' },
          'value': { 'kind': 'IntValue', 'value': '1000' },
        }],
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': '__typename' },
          }, {
            'kind': 'InlineFragment',
            'typeCondition': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'Collection' },
            },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Collection' },
              }],
            },
          }, {
            'kind': 'InlineFragment',
            'typeCondition': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Metadata' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionDetailFragment, unknown>
export const MetadataRelationshipMetadataFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'pending' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'state' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataRelationshipMetadataFragment, unknown>
export const CollectionMetadataRelationshipFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionMetadataRelationship' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionMetadataRelationship' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'pending' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'state' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionMetadataRelationshipFragment, unknown>
export const FindAttributeFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'key' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }],
} as unknown as DocumentNode<FindAttributeFragment, unknown>
export const FindAttributesFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindAttribute' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'key' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }],
} as unknown as DocumentNode<FindAttributesFragment, unknown>
export const FindQueryFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQuery' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQuery' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'FindAttributes' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'categoryIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'collectionType' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'extensionFilter' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'offset' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'limit' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'key' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindAttribute' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<FindQueryFragment, unknown>
export const FindQueryOptionFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'query' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindQuery' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'key' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindAttribute' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQuery' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQuery' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'FindAttributes' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'categoryIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'collectionType' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'extensionFilter' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'offset' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'limit' } },
      ],
    },
  }],
} as unknown as DocumentNode<FindQueryOptionFragment, unknown>
export const WorkflowFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Workflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<WorkflowFragment, unknown>
export const CollectionTemplateFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionTemplate' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionTemplate' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'defaultAttributes' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'collectionFilter' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'options' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
              }],
            },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'description' },
            },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
            },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ui' } },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'list' } },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'workflows' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'workflow' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'FragmentSpread',
                      'name': { 'kind': 'Name', 'value': 'Workflow' },
                    }],
                  },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'autoRun' },
                }],
              },
            },
          ],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'key' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindAttribute' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQuery' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQuery' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'FindAttributes' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'categoryIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'collectionType' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'extensionFilter' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'offset' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'limit' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'query' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindQuery' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Workflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<CollectionTemplateFragment, unknown>
export const ConfigurationFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Configuration' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Configuration' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'permissions' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'action' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'group' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'name' },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<ConfigurationFragment, unknown>
export const DocumentFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Document' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Document' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'template' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'title' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'content' } },
      ],
    },
  }],
} as unknown as DocumentNode<DocumentFragment, unknown>
export const TemplateWorkflowFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'autoRun' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflow' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<TemplateWorkflowFragment, unknown>
export const DocumentTemplateContainerFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflows' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'autoRun' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflow' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<DocumentTemplateContainerFragment, unknown>
export const TemplateAttributeFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ui' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'list' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflows' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'autoRun' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflow' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<TemplateAttributeFragment, unknown>
export const DocumentTemplateFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'DocumentTemplate' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'DocumentTemplate' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'schema' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'content' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'defaultAttributes' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'containers' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'autoRun' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflow' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflows' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ui' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'list' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflows' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<DocumentTemplateFragment, unknown>
export const GuideStepModuleFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GuideStepModuleFragment, unknown>
export const GuideStepFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'date' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'metadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'modules' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<GuideStepFragment, unknown>
export const GuideFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Guide' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Guide' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'template' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'rrule' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'steps' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideStep' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'date' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'metadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'modules' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GuideFragment, unknown>
export const GuideTemplateStepModuleFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GuideTemplateStepModuleFragment, unknown>
export const GuideTemplateStepFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'modules' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<GuideTemplateStepFragment, unknown>
export const GuideTemplateFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplate' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplate' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'rrule' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'steps' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'modules' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<GuideTemplateFragment, unknown>
export const MetadataIdNameFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataIdName' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'type' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataIdNameFragment, unknown>
export const MetadataContentUploadFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContentUpload' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'urls' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'upload' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'url' },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'headers' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'name' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'value' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<MetadataContentUploadFragment, unknown>
export const MetadataRelationshipFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationship' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataRelationship' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'pending' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'state' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<MetadataRelationshipFragment, unknown>
export const ModelFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Model' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Model' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<ModelFragment, unknown>
export const PrincipalFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Principal' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Principal' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'verified' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'groups' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Group' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<PrincipalFragment, unknown>
export const ProfileIdNameFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ProfileIdName' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
      ],
    },
  }],
} as unknown as DocumentNode<ProfileIdNameFragment, unknown>
export const PromptFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Prompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Prompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'inputType' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'outputType' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemPrompt' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'userPrompt' } },
      ],
    },
  }],
} as unknown as DocumentNode<PromptFragment, unknown>
export const StorageSystemFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'modelId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<StorageSystemFragment, unknown>
export const TraitFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Trait' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Trait' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'deleteWorkflowId' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<TraitFragment, unknown>
export const TransitionFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Transition' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Transition' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'fromStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'toStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
      ],
    },
  }],
} as unknown as DocumentNode<TransitionFragment, unknown>
export const WorkflowActivityParameterFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }],
} as unknown as DocumentNode<WorkflowActivityParameterFragment, unknown>
export const WorkflowActivityStorageSystemFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'system' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }],
} as unknown as DocumentNode<WorkflowActivityStorageSystemFragment, unknown>
export const WorkflowActivityModelFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }],
} as unknown as DocumentNode<WorkflowActivityModelFragment, unknown>
export const WorkflowActivityPromptFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }],
} as unknown as DocumentNode<WorkflowActivityPromptFragment, unknown>
export const WorkflowActivityFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'activityId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'executionGroup' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'storageSystems' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'WorkflowActivityStorageSystem',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'prompts' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'system' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }],
} as unknown as DocumentNode<WorkflowActivityFragment, unknown>
export const WorkflowExecutionIdFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } }],
    },
  }],
} as unknown as DocumentNode<WorkflowExecutionIdFragment, unknown>
export const PlanWorkflowFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<PlanWorkflowFragment, unknown>
export const WorkflowPlanFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowPlan' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionPlan' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'id' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'complete' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'active' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'failed' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'error' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'cancelled' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<WorkflowPlanFragment, unknown>
export const WorkflowStateFragmentDoc = {
  'kind': 'Document',
  'definitions': [{
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'entryWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'exitWorkflowId' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
      ],
    },
  }],
} as unknown as DocumentNode<WorkflowStateFragment, unknown>
export const AddActivityDocument = {
  '__meta__': { 'hash': '2f0ee43dfb646e40e3585363cba9106cd84e49e5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddActivity' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'activity' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'ActivityInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'activities' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'activity' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'activity' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Activity' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Activity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Activity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'childWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<AddActivityMutation, AddActivityMutationVariables>
export const AddCollectionDocument = {
  '__meta__': { 'hash': 'b4dc293bd109fb0aaf245a879759f7d26a63b607' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collection' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'CollectionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'collection' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'collection' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddCollectionMutation,
  AddCollectionMutationVariables
>
export const AddCollectionCollectionDocument = {
  '__meta__': { 'hash': '8778005dfb61d22f48968d74b9c0d54900e678ff' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddCollectionCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collectionId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addChildCollection' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'collectionId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'collectionId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddCollectionCollectionMutation,
  AddCollectionCollectionMutationVariables
>
export const AddCollectionMetadataRelationshipDocument = {
  '__meta__': { 'hash': 'ca0cc662dab223e36842fd137b42293fa7a0c0c3' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddCollectionMetadataRelationship' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': {
            'kind': 'Name',
            'value': 'CollectionMetadataRelationshipInput',
          },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addMetadataRelationship' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'relationship' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'relationship' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'metadata' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'id' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddCollectionMetadataRelationshipMutation,
  AddCollectionMetadataRelationshipMutationVariables
>
export const AddCollectionPermissionDocument = {
  '__meta__': { 'hash': '0334351e9ec9bb673381357d779082429e600858' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddCollectionPermission' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'permission' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'PermissionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addPermission' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'permission' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'permission' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'groupId' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'action' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddCollectionPermissionMutation,
  AddCollectionPermissionMutationVariables
>
export const AddDocumentDocument = {
  '__meta__': { 'hash': '23d7879f0273a8ee9337d4e441780fb1487ab56e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddDocument' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'parentCollectionId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateVersion' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addDocument' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'parentCollectionId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'parentCollectionId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Metadata' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<AddDocumentMutation, AddDocumentMutationVariables>
export const AddGuideDocument = {
  '__meta__': { 'hash': 'ddbc609a1ae2e0c8f58699d4c7b79742a8705673' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddGuide' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'parentCollectionId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateVersion' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addGuide' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'parentCollectionId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'parentCollectionId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Metadata' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<AddGuideMutation, AddGuideMutationVariables>
export const AddGuideStepDocument = {
  '__meta__': { 'hash': '0cd2dfac44d0795856d0e127c57c94d0062cdda0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddGuideStep' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'sort' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateStepId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateVersion' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addGuideStep' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadataId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'version' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'sort' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'sort' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateStepId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateStepId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'GuideStep' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'date' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'metadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'modules' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  AddGuideStepMutation,
  AddGuideStepMutationVariables
>
export const AddGuideStepModuleDocument = {
  '__meta__': { 'hash': '03b32e2beae8dfcb67596d13bf1b349b15a375cd' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddGuideStepModule' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'stepId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'sort' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateVersion' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateStepId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'templateModuleId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addGuideStepModule' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadataId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'version' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'stepId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'stepId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'sort' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'sort' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateVersion' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateStepId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateStepId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'templateModuleId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'templateModuleId' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddGuideStepModuleMutation,
  AddGuideStepModuleMutationVariables
>
export const AddMetadataDocument = {
  '__meta__': { 'hash': 'cf07c810c1019f86629c07265389f10c72566371' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddMetadata' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadata' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'MetadataInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadata' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadata' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<AddMetadataMutation, AddMetadataMutationVariables>
export const AddMetadataCollectionDocument = {
  '__meta__': { 'hash': '264ff0589fd625b95a3e54465fd1dd9a2e4cf78a' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddMetadataCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collectionId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addChildMetadata' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'collectionId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddMetadataCollectionMutation,
  AddMetadataCollectionMutationVariables
>
export const AddMetadataPermissionDocument = {
  '__meta__': { 'hash': 'e5066aaf3d46e2f67c85d63033eee6439f3cbf2f' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddMetadataPermission' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'permission' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'PermissionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addPermission' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'permission' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'permission' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'groupId' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'action' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddMetadataPermissionMutation,
  AddMetadataPermissionMutationVariables
>
export const AddMetadataRelationshipDocument = {
  '__meta__': { 'hash': 'be3d3cc2a9a5209f3d5caf3b7546652d17ddf03d' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddMetadataRelationship' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'MetadataRelationshipInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addRelationship' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'relationship' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'relationship' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddMetadataRelationshipMutation,
  AddMetadataRelationshipMutationVariables
>
export const AddMetadataTraitDocument = {
  '__meta__': { 'hash': '453ae241d63ccdff07291cda01a535ff60c0ff9d' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddMetadataTrait' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'traitId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'addTrait' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadataId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'traitId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'traitId' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': {
                          'kind': 'Name',
                          'value': 'WorkflowExecutionId',
                        },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } }],
    },
  }],
} as unknown as DocumentNode<
  AddMetadataTraitMutation,
  AddMetadataTraitMutationVariables
>
export const AddModelDocument = {
  '__meta__': { 'hash': '106a5fa8ef6dc493cefd84869925de299a1f4473' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddModel' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'model' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'ModelInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'models' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'model' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'model' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Model' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Model' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Model' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<AddModelMutation, AddModelMutationVariables>
export const AddPersistedQueriesDocument = {
  '__meta__': { 'hash': 'c9f58ba27dc5b3d5f6fdd34bebccfe6a831b530e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddPersistedQueries' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'application' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'queries' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'ListType',
          'type': {
            'kind': 'NonNullType',
            'type': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'PersistedQueryInput' },
            },
          },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'persistedQueries' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'addAll' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'application' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'application' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'queries' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'queries' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  AddPersistedQueriesMutation,
  AddPersistedQueriesMutationVariables
>
export const AddPromptDocument = {
  '__meta__': { 'hash': 'c740a364a0853cd062a29ad4c39727efb7c02b1f' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddPrompt' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'prompt' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'PromptInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'prompts' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'prompt' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'prompt' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Prompt' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Prompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Prompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'inputType' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'outputType' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemPrompt' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'userPrompt' } },
      ],
    },
  }],
} as unknown as DocumentNode<AddPromptMutation, AddPromptMutationVariables>
export const AddStateDocument = {
  '__meta__': { 'hash': 'a7235455cc3fc2a707d441d135c45d97585d46f6' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddState' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'state' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'WorkflowStateInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'states' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'state' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'state' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'entryWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'exitWorkflowId' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
      ],
    },
  }],
} as unknown as DocumentNode<AddStateMutation, AddStateMutationVariables>
export const AddStorageSystemDocument = {
  '__meta__': { 'hash': '1d6b40e0b610507ae25e87e4a5cc57460544a0ff' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddStorageSystem' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'system' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'StorageSystemInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'storageSystems' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'storageSystem' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'system' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'modelId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  AddStorageSystemMutation,
  AddStorageSystemMutationVariables
>
export const AddTraitDocument = {
  '__meta__': { 'hash': '6ae56309bcea48a084674fcf36d0388a21fcf8e7' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddTrait' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'trait' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'TraitInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'traits' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'model' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'trait' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Trait' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Trait' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Trait' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'deleteWorkflowId' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<AddTraitMutation, AddTraitMutationVariables>
export const AddTransitionDocument = {
  '__meta__': { 'hash': '554f6523ada0db30161dd2d6d4ff3f702d3bcabd' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'transition' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'TransitionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'transitions' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'add' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'transition' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'transition' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Transition' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Transition' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Transition' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'fromStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'toStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
      ],
    },
  }],
} as unknown as DocumentNode<
  AddTransitionMutation,
  AddTransitionMutationVariables
>
export const AddWorkflowDocument = {
  '__meta__': { 'hash': '7c99e9073f38159bcbafc1f794e627dd36f5335c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'AddWorkflow' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'workflow' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'WorkflowInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'add' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'workflow' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'workflow' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Workflow' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Workflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<AddWorkflowMutation, AddWorkflowMutationVariables>
export const BeginCollectionTransitionDocument = {
  '__meta__': { 'hash': '79104189528c0d46a493ae89134d2cef15b5d438' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'BeginCollectionTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'state' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'status' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'beginTransition' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'request' },
              'value': {
                'kind': 'ObjectValue',
                'fields': [{
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'collectionId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'stateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'state' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'status' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'status' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'waitForCompletion' },
                  'value': { 'kind': 'BooleanValue', 'value': true },
                }],
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  BeginCollectionTransitionMutation,
  BeginCollectionTransitionMutationVariables
>
export const BeginMetadataTransitionDocument = {
  '__meta__': { 'hash': 'e98abc3212519612eeb75a7941a6f8d451f8cf0c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'BeginMetadataTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'state' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'status' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'stateValid' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'DateTime' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'beginTransition' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'request' },
              'value': {
                'kind': 'ObjectValue',
                'fields': [{
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'version' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'version' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'stateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'state' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'stateValid' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'stateValid' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'status' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'status' },
                  },
                }, {
                  'kind': 'ObjectField',
                  'name': { 'kind': 'Name', 'value': 'waitForCompletion' },
                  'value': { 'kind': 'BooleanValue', 'value': true },
                }],
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  BeginMetadataTransitionMutation,
  BeginMetadataTransitionMutationVariables
>
export const CancelMetadataWorkflowsDocument = {
  '__meta__': { 'hash': 'd20bbcd0e6d1127bdb9490728f7e7aad68873006' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'CancelMetadataWorkflows' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'workflowId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'cancelWorkflows' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'metadataId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'metadataVersion' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'workflowId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'workflowId' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  CancelMetadataWorkflowsMutation,
  CancelMetadataWorkflowsMutationVariables
>
export const CancelTransitionDocument = {
  '__meta__': { 'hash': '0e301ad4ed88e1a6abfce074f9b580cf157bcd6e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'CancelTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collectionId' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'Int' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'cancelTransition' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'collectionId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'collectionId' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'metadataId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'metadataId' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'metadataVersion' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  CancelTransitionMutation,
  CancelTransitionMutationVariables
>
export const DeleteActivityDocument = {
  '__meta__': { 'hash': '15f99be22e845c754a1f77d0ab947476ca556c95' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteActivity' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'activities' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'activityId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteActivityMutation,
  DeleteActivityMutationVariables
>
export const DeleteCollectionDocument = {
  '__meta__': { 'hash': 'eec8b6f5b611a0260eb6140e4e5c49cb7fdd81d0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'recursive' },
                  'value': { 'kind': 'BooleanValue', 'value': true },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteCollectionMutation,
  DeleteCollectionMutationVariables
>
export const DeleteConfigurationDocument = {
  '__meta__': { 'hash': 'c30209af54466700544192dae89fe73dbd51c876' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteConfiguration' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configurations' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'deleteConfiguration' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'key' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'key' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteConfigurationMutation,
  DeleteConfigurationMutationVariables
>
export const DeleteGuideDocument = {
  '__meta__': { 'hash': 'd2872d9ec7240dc973c0d109cc58da3ab58b33a1' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteGuide' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'deleteGuide' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'version' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<DeleteGuideMutation, DeleteGuideMutationVariables>
export const DeleteGuideStepDocument = {
  '__meta__': { 'hash': '0312ccd1b5021574df995054b2512e6eb1332948' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteGuideStep' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'stepId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'deleteGuideStep' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadataId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataVersion' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'version' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'stepId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'stepId' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteGuideStepMutation,
  DeleteGuideStepMutationVariables
>
export const DeleteMetadataDocument = {
  '__meta__': { 'hash': '6a99b6eabb9fa814b84a9b1f1213944eebf17cbc' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteMetadata' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteMetadataMutation,
  DeleteMetadataMutationVariables
>
export const DeleteModelDocument = {
  '__meta__': { 'hash': '25cefda386c6830d23f43101e50e3083039e7f67' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteModel' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'models' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<DeleteModelMutation, DeleteModelMutationVariables>
export const DeletePromptDocument = {
  '__meta__': { 'hash': 'f2115c1e9f8a503cd27988b38b6a6ee4a6f316c6' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeletePrompt' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'prompts' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeletePromptMutation,
  DeletePromptMutationVariables
>
export const DeleteStateDocument = {
  '__meta__': { 'hash': 'f482a1b7f014af7417124835e20f279866feb774' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteState' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'states' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<DeleteStateMutation, DeleteStateMutationVariables>
export const DeleteStorageSystemDocument = {
  '__meta__': { 'hash': '4321ee5729cd5a211646608ffcd007ae0bc15cf7' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteStorageSystem' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'storageSystems' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteStorageSystemMutation,
  DeleteStorageSystemMutationVariables
>
export const DeleteTraitDocument = {
  '__meta__': { 'hash': 'b725f0533c01b9644a39be015d847f4d66d9c8e4' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteTrait' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'traits' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<DeleteTraitMutation, DeleteTraitMutationVariables>
export const DeleteTransitionDocument = {
  '__meta__': { 'hash': 'dd59f12e1166b798b96580394cadda1c40246c32' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'fromStateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'toStateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'transitions' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'delete' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'fromStateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'fromStateId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'toStateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'toStateId' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteTransitionMutation,
  DeleteTransitionMutationVariables
>
export const DeleteWorkflowDocument = {
  '__meta__': { 'hash': 'a49fedeba38be7d3f392c0ac43c344318f5031be' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'DeleteWorkflow' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'delete' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  DeleteWorkflowMutation,
  DeleteWorkflowMutationVariables
>
export const EditActivityDocument = {
  '__meta__': { 'hash': '72c3c33a865cf9e455459febdd8e74660418c09d' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditActivity' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'ActivityInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'activities' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'activity' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Activity' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Activity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Activity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'childWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  EditActivityMutation,
  EditActivityMutationVariables
>
export const EditCollectionDocument = {
  '__meta__': { 'hash': '7039e5a039a248258464fd0830de40c711379a79' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'CollectionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'collection' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  EditCollectionMutation,
  EditCollectionMutationVariables
>
export const EditMetadataDocument = {
  '__meta__': { 'hash': 'b0aa3291535a76da8bcf2ea441d7d2f2519bec31' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditMetadata' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadata' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'MetadataInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadata' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadata' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  EditMetadataMutation,
  EditMetadataMutationVariables
>
export const EditModelDocument = {
  '__meta__': { 'hash': '213850217fe6af61a5fc7fdaf6e488007285fec0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditModel' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'ModelInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'models' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'model' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Model' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Model' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Model' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<EditModelMutation, EditModelMutationVariables>
export const EditPromptDocument = {
  '__meta__': { 'hash': '7ab390fe10398fdeea7b493e41a9591f807aaa60' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditPrompt' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'PromptInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'prompts' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'prompt' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Prompt' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Prompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Prompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'inputType' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'outputType' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemPrompt' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'userPrompt' } },
      ],
    },
  }],
} as unknown as DocumentNode<EditPromptMutation, EditPromptMutationVariables>
export const EditStateDocument = {
  '__meta__': { 'hash': '2c2f4f0637f134fe0a3c7fd9cbb2272d1948b97c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditState' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'WorkflowStateInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'states' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'state' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'entryWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'exitWorkflowId' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
      ],
    },
  }],
} as unknown as DocumentNode<EditStateMutation, EditStateMutationVariables>
export const EditStorageSystemDocument = {
  '__meta__': { 'hash': 'c8d5b11a17d45c61123c8475268bf5a4905832fc' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditStorageSystem' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'StorageSystemInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'storageSystems' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'storageSystem' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'modelId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  EditStorageSystemMutation,
  EditStorageSystemMutationVariables
>
export const EditTraitDocument = {
  '__meta__': { 'hash': 'fa70efddd85e3f6051547b74ddfa306d08e65df0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditTrait' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'TraitInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'traits' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'model' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Trait' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Trait' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Trait' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'deleteWorkflowId' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<EditTraitMutation, EditTraitMutationVariables>
export const EditTransitionDocument = {
  '__meta__': { 'hash': 'a5dacbbf03a219be27c5fdddab9d999c3c82c4e4' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'TransitionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'transitions' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'edit' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'transition' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'input' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Transition' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Transition' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Transition' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'fromStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'toStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
      ],
    },
  }],
} as unknown as DocumentNode<
  EditTransitionMutation,
  EditTransitionMutationVariables
>
export const EditWorkflowDocument = {
  '__meta__': { 'hash': 'c7fc016f1abf7ced4ad10bb26db4ed6a660045ab' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EditWorkflow' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'input' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'WorkflowInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'edit' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'workflow' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'input' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'id' },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  EditWorkflowMutation,
  EditWorkflowMutationVariables
>
export const EnqueueWorkflowDocument = {
  '__meta__': { 'hash': '2ce23302d22191283bffae661208058d2b43035f' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'EnqueueWorkflow' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'workflowId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collectionId' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'Int' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'configurations' },
      },
      'type': {
        'kind': 'ListType',
        'type': {
          'kind': 'NonNullType',
          'type': {
            'kind': 'NamedType',
            'name': { 'kind': 'Name', 'value': 'WorkflowConfigurationInput' },
          },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'enqueueWorkflow' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'workflowId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'workflowId' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'collectionId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'collectionId' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'metadataId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'metadataId' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'version' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'configurations' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'configurations' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'id' },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'queue' },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  EnqueueWorkflowMutation,
  EnqueueWorkflowMutationVariables
>
export const ExecuteSearchDocument = {
  '__meta__': { 'hash': '1a33ae492318451d69d318777df12fc3115421be' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'ExecuteSearch' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'query' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'filter' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'offset' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'limit' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'storageSystemId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'search' },
        'arguments': [{
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'query' },
          'value': {
            'kind': 'ObjectValue',
            'fields': [{
              'kind': 'ObjectField',
              'name': { 'kind': 'Name', 'value': 'query' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'query' },
              },
            }, {
              'kind': 'ObjectField',
              'name': { 'kind': 'Name', 'value': 'filter' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'filter' },
              },
            }, {
              'kind': 'ObjectField',
              'name': { 'kind': 'Name', 'value': 'offset' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'offset' },
              },
            }, {
              'kind': 'ObjectField',
              'name': { 'kind': 'Name', 'value': 'limit' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'limit' },
              },
            }, {
              'kind': 'ObjectField',
              'name': { 'kind': 'Name', 'value': 'storageSystemId' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'storageSystemId' },
              },
            }],
          },
        }],
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'documents' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'collection' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'CollectionIdName' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'metadata' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'MetadataIdName' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'profile' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'ProfileIdName' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionIdName' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataIdName' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'type' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ProfileIdName' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
      ],
    },
  }],
} as unknown as DocumentNode<ExecuteSearchQuery, ExecuteSearchQueryVariables>
export const FindCollectionsDocument = {
  '__meta__': { 'hash': '6e12b75942dc97eaa85b20b5146cbb3e29c29486' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'FindCollections' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'query' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'FindQueryInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'findCollections' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'query' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'query' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Collection' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  FindCollectionsQuery,
  FindCollectionsQueryVariables
>
export const FindCollectionsCountDocument = {
  '__meta__': { 'hash': 'ae207969822c874fa0834a5166e0cf43f13b24e5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'FindCollectionsCount' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'query' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'FindQueryInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'findCollectionsCount' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'query' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'query' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  FindCollectionsCountQuery,
  FindCollectionsCountQueryVariables
>
export const FindMetadataDocument = {
  '__meta__': { 'hash': 'c6821f11c5c06cb6e236fc99dc290137d8aebba0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'FindMetadata' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'query' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'FindQueryInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'findMetadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'query' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'query' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Metadata' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<FindMetadataQuery, FindMetadataQueryVariables>
export const FindMetadataCountDocument = {
  '__meta__': { 'hash': '16c75d9beb3666e7f425bcaab96905d14d5f9e34' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'FindMetadataCount' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'query' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'FindQueryInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'findMetadataCount' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'query' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'query' },
              },
            }],
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  FindMetadataCountQuery,
  FindMetadataCountQueryVariables
>
export const GetActivitiesDocument = {
  '__meta__': { 'hash': 'ac6948502f1e5ba7dc2dc0f586b274d15072bb04' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetActivities' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'activities' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Activity' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Activity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Activity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'childWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetActivitiesQuery, GetActivitiesQueryVariables>
export const GetActivityDocument = {
  '__meta__': { 'hash': '34695af0639638ac97d5d7d2a32034b139fb5606' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetActivity' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'activities' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'activity' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Activity' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Activity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Activity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'childWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetActivityQuery, GetActivityQueryVariables>
export const GetCollectionDocument = {
  '__meta__': { 'hash': 'ea9f1f7acc2f5e00e25f1cd65224dce4542ae05e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Collection' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetCollectionQuery, GetCollectionQueryVariables>
export const GetCollectionChildrenCollectionsDocument = {
  '__meta__': { 'hash': 'aaf21753749a387b0c87e55455cef15fd2614c50' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionChildrenCollections' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'offset' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'limit' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'collections' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'limit' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'limit' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'offset' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'offset' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Collection' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'collectionsCount' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionChildrenCollectionsQuery,
  GetCollectionChildrenCollectionsQueryVariables
>
export const GetCollectionChildrenMetadataDocument = {
  '__meta__': { 'hash': '7b996d8b30c862fc6c7520a430e0007af6c0b2ca' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionChildrenMetadata' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'offset' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'limit' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'metadata' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'limit' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'limit' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'offset' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'offset' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Metadata' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'metadataCount' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionChildrenMetadataQuery,
  GetCollectionChildrenMetadataQueryVariables
>
export const GetCollectionListDocument = {
  '__meta__': { 'hash': '5463354c2720673349d0dc9362b27dafdbda7aeb' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionList' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'CollectionList' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionList' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'FragmentSpread',
        'name': { 'kind': 'Name', 'value': 'Collection' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'items' },
        'arguments': [{
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'offset' },
          'value': { 'kind': 'IntValue', 'value': '0' },
        }, {
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'limit' },
          'value': { 'kind': 'IntValue', 'value': '1000' },
        }],
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': '__typename' },
          }, {
            'kind': 'InlineFragment',
            'typeCondition': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'Collection' },
            },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Collection' },
              }],
            },
          }, {
            'kind': 'InlineFragment',
            'typeCondition': {
              'kind': 'NamedType',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Metadata' },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionListQuery,
  GetCollectionListQueryVariables
>
export const GetCollectionMetadataRelationshipsDocument = {
  '__meta__': { 'hash': '390934f0a4a20dae596dfdc5e669a5d14c18a09f' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionMetadataRelationships' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'metadataRelationships' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': {
                      'kind': 'Name',
                      'value': 'CollectionMetadataRelationship',
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'pending' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'state' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionMetadataRelationship' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionMetadataRelationship' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionMetadataRelationshipsQuery,
  GetCollectionMetadataRelationshipsQueryVariables
>
export const GetCollectionParentsDocument = {
  '__meta__': { 'hash': 'a16e6dcbd63bd52603b455906d776a2f9f20ef82' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionParents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'CollectionParents' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ParentCollection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionParents' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'parentCollections' },
        'arguments': [{
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'offset' },
          'value': { 'kind': 'IntValue', 'value': '0' },
        }, {
          'kind': 'Argument',
          'name': { 'kind': 'Name', 'value': 'limit' },
          'value': { 'kind': 'IntValue', 'value': '100' },
        }],
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'ParentCollection' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionParentsQuery,
  GetCollectionParentsQueryVariables
>
export const GetCollectionPermissionsDocument = {
  '__meta__': { 'hash': '2aba3cf6a00474f501aaea5fbf04a89434a35acf' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionPermissions' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'permissions' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Permission' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Permission' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Permission' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'action' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'group' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Group' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionPermissionsQuery,
  GetCollectionPermissionsQueryVariables
>
export const GetCollectionRelationshipsDocument = {
  '__meta__': { 'hash': '95ef01fdc3d93b08f6613a0ba4bf552b8b574c56' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionRelationships' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'metadataRelationships' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': {
                      'kind': 'Name',
                      'value': 'CollectionMetadataRelationship',
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'pending' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'state' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionMetadataRelationship' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionMetadataRelationship' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionRelationshipsQuery,
  GetCollectionRelationshipsQueryVariables
>
export const GetCollectionSupplementaryDocument = {
  '__meta__': { 'hash': 'fdce815512b38c15282ee4df6e24ed4d737a8bc0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionSupplementary' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'supplementary' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'key' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'key' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': {
                      'kind': 'Name',
                      'value': 'CollectionSupplementary',
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionSupplementaryQuery,
  GetCollectionSupplementaryQueryVariables
>
export const GetCollectionTemplateDocument = {
  '__meta__': { 'hash': '17b7a8b04c3cafcb65878b326ef1d4e8f2b1e1b9' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionTemplate' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'Int' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'version' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'collectionTemplate' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'CollectionTemplate' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'key' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindAttributes' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindAttribute' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQuery' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQuery' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'FindAttributes' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'categoryIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'collectionType' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'extensionFilter' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'offset' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'limit' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'query' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'FindQuery' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Workflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionTemplate' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionTemplate' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'defaultAttributes' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'collectionFilter' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'options' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'FindQueryOption' },
              }],
            },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'description' },
            },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
            },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ui' } },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'list' } },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            },
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'workflows' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'workflow' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'FragmentSpread',
                      'name': { 'kind': 'Name', 'value': 'Workflow' },
                    }],
                  },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'autoRun' },
                }],
              },
            },
          ],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionTemplateQuery,
  GetCollectionTemplateQueryVariables
>
export const GetCollectionWorkflowPlansDocument = {
  '__meta__': { 'hash': 'a0bee16a8b69ca0d58681429da9ec39b91c0def1' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCollectionWorkflowPlans' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'workflow' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'plans' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': { 'kind': 'Name', 'value': 'WorkflowPlan' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowPlan' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionPlan' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'id' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'complete' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'active' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'failed' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'error' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'cancelled' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetCollectionWorkflowPlansQuery,
  GetCollectionWorkflowPlansQueryVariables
>
export const GetConfigurationDocument = {
  '__meta__': { 'hash': '71134fc822594b251abb1570fd2fc6a7996805d2' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetConfiguration' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configurations' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'configuration' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'key' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'key' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Configuration' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Configuration' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Configuration' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'permissions' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'action' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'group' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'name' },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetConfigurationQuery,
  GetConfigurationQueryVariables
>
export const GetConfigurationsDocument = {
  '__meta__': { 'hash': '23edf4d1b472d9a4d68bcce1552897a312e16a9a' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetConfigurations' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configurations' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'all' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Configuration' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Configuration' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Configuration' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'permissions' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'action' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'group' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'name' },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetConfigurationsQuery,
  GetConfigurationsQueryVariables
>
export const GetCurrentProfileDocument = {
  '__meta__': { 'hash': 'a9f0a96719ffeb0161f2cc4e690ad1ee2b62014c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetCurrentProfile' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profiles' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'current' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Profile' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetCurrentProfileQuery,
  GetCurrentProfileQueryVariables
>
export const GetGroupsDocument = {
  '__meta__': { 'hash': 'a3e9f23f3d4f5a07d0ec411b610718b02a39efb5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetGroups' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'offset' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'limit' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'groups' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'offset' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'offset' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'limit' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'limit' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Group' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }],
} as unknown as DocumentNode<GetGroupsQuery, GetGroupsQueryVariables>
export const GetMetadataDocument = {
  '__meta__': { 'hash': '6d9bb457d977d4c7d99ba1ed06552740d4eb1f05' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadata' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'Int' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'version' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Metadata' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetMetadataQuery, GetMetadataQueryVariables>
export const GetMetadataUploadDocument = {
  '__meta__': { 'hash': 'cf42fe53c4f84c3b488f8dff31af556f34c07abe' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataUpload' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'content' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': {
                      'kind': 'Name',
                      'value': 'MetadataContentUpload',
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContentUpload' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'urls' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'upload' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'url' },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'headers' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'name' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'value' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataUploadQuery,
  GetMetadataUploadQueryVariables
>
export const GetMetadataDocumentDocument = {
  '__meta__': { 'hash': '401c5469619c3e64ec4fb7c1e8fb6708620f2724' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataDocument' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'document' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Document' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Document' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Document' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'template' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'title' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'content' } },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataDocumentQuery,
  GetMetadataDocumentQueryVariables
>
export const GetMetadataDocumentTemplateDocument = {
  '__meta__': { 'hash': '45bb00eefc6178948e5d90b0477e9b90730d3ddc' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataDocumentTemplate' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'Int' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'version' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'documentTemplate' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'DocumentTemplate' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'autoRun' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflow' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflows' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementaryKey' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ui' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'list' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflows' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateWorkflow' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'DocumentTemplate' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'DocumentTemplate' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'schema' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'content' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'defaultAttributes' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'containers' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'DocumentTemplateContainer' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'TemplateAttribute' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataDocumentTemplateQuery,
  GetMetadataDocumentTemplateQueryVariables
>
export const GetMetadataGuideDocument = {
  '__meta__': { 'hash': '10468dc001aaff4b1f6c96aeaef81e0ac1e2a306' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataGuide' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'guide' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Guide' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'date' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'metadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Metadata' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'modules' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideStepModule' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Guide' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Guide' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'template' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'rrule' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'steps' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideStep' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataGuideQuery,
  GetMetadataGuideQueryVariables
>
export const GetMetadataGuideTemplateDocument = {
  '__meta__': { 'hash': 'f9c5f45b414af1ebe52ad38557dec626547ca0f2' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataGuideTemplate' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'version' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'Int' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'version' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'version' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'guideTemplate' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'GuideTemplate' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Metadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'modules' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'GuideTemplateStepModule' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'GuideTemplate' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'GuideTemplate' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'rrule' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'steps' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'GuideTemplateStep' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataGuideTemplateQuery,
  GetMetadataGuideTemplateQueryVariables
>
export const GetMetadataParentsDocument = {
  '__meta__': { 'hash': 'a20fe65084f0d33d17cfd1e32caa0f95dc0f49aa' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataParents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'parentCollections' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'offset' },
                  'value': { 'kind': 'IntValue', 'value': '0' },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'limit' },
                  'value': { 'kind': 'IntValue', 'value': '100' },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'ParentCollection' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ParentCollection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataParentsQuery,
  GetMetadataParentsQueryVariables
>
export const GetMetadataPermissionsDocument = {
  '__meta__': { 'hash': '087c894104439f01e4d053438228673f4b884c4d' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataPermissions' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'permissions' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Permission' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Permission' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Permission' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'action' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'group' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Group' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataPermissionsQuery,
  GetMetadataPermissionsQueryVariables
>
export const GetMetadataRelationshipsDocument = {
  '__meta__': { 'hash': '41a3e9f7a00bdac1d704a982e9a694f15e7cab00' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataRelationships' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'relationships' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'MetadataRelationship' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'pending' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'state' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataRelationship' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataRelationship' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'MetadataRelationshipMetadata' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataRelationshipsQuery,
  GetMetadataRelationshipsQueryVariables
>
export const GetMetadataSupplementaryDocument = {
  '__meta__': { 'hash': '20953c260f4aa6cf4f8b2cb52bbf19910b200104' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataSupplementary' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'supplementary' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'key' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'key' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': {
                      'kind': 'Name',
                      'value': 'MetadataSupplementary',
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataSupplementaryQuery,
  GetMetadataSupplementaryQueryVariables
>
export const GetMetadataSupplementaryJsonDocument = {
  '__meta__': { 'hash': '129ba20f6501851d4513ed66897e1c18089c6ca7' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataSupplementaryJson' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'supplementary' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'key' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'key' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'content' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'json' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataSupplementaryJsonQuery,
  GetMetadataSupplementaryJsonQueryVariables
>
export const GetMetadataSupplementaryTextDocument = {
  '__meta__': { 'hash': '255061232c84449a48f05643a628ecffce7998c5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataSupplementaryText' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'supplementary' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'key' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'key' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'content' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'text' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataSupplementaryTextQuery,
  GetMetadataSupplementaryTextQueryVariables
>
export const GetMetadataWorkflowPlansDocument = {
  '__meta__': { 'hash': 'e68ffc26afc628b5725b8986d58613deba5a5d8c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetMetadataWorkflowPlans' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'workflow' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'plans' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': { 'kind': 'Name', 'value': 'WorkflowPlan' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowPlan' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowExecutionPlan' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'id' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowExecutionId' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'complete' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'active' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'failed' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'error' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'cancelled' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'PlanWorkflow' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetMetadataWorkflowPlansQuery,
  GetMetadataWorkflowPlansQueryVariables
>
export const GetModelDocument = {
  '__meta__': { 'hash': '16c0bfecd51fb1e0a34e4c7543681976f89d7674' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetModel' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'models' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'model' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Model' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Model' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Model' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetModelQuery, GetModelQueryVariables>
export const GetModelsDocument = {
  '__meta__': { 'hash': 'e50a61648984bf0fc0d1d8f266038b22e06aa3a2' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetModels' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'models' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Model' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Model' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Model' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetModelsQuery, GetModelsQueryVariables>
export const GetPermissionActionsDocument = {
  '__meta__': { 'hash': '07a8e21bf0eb620e67c952133cdf515f98c7a775' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetPermissionActions' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'actions' },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetPermissionActionsQuery,
  GetPermissionActionsQueryVariables
>
export const GetPrincipalsDocument = {
  '__meta__': { 'hash': 'b0fa6fe6d2e8869207529fc88f288cea9ca721ec' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetPrincipals' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'offset' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'limit' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'principals' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'offset' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'offset' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'limit' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'limit' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Principal' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Group' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Group' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Principal' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Principal' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'verified' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'groups' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Group' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetPrincipalsQuery, GetPrincipalsQueryVariables>
export const GetProfileDocument = {
  '__meta__': { 'hash': '2d8f840a24da549d99a86bac92c689d95482d401' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetProfile' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profiles' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'profile' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Profile' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetProfileQuery, GetProfileQueryVariables>
export const GetProfilesDocument = {
  '__meta__': { 'hash': '0d9b648b0443d0f2fa3bf46b80cbf20a6d1885aa' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetProfiles' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'offset' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'limit' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profiles' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'all' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'offset' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'offset' },
              },
            }, {
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'limit' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'limit' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Profile' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetProfilesQuery, GetProfilesQueryVariables>
export const GetPromptDocument = {
  '__meta__': { 'hash': '1f760368a1be1608d542ff665dc1a2a698254817' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetPrompt' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'prompts' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'prompt' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Prompt' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Prompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Prompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'inputType' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'outputType' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemPrompt' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'userPrompt' } },
      ],
    },
  }],
} as unknown as DocumentNode<GetPromptQuery, GetPromptQueryVariables>
export const GetPromptsDocument = {
  '__meta__': { 'hash': '85127f79fbb2cc0571c67c584ac9bb9667b79a31' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetPrompts' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'prompts' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Prompt' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Prompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Prompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'inputType' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'outputType' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemPrompt' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'userPrompt' } },
      ],
    },
  }],
} as unknown as DocumentNode<GetPromptsQuery, GetPromptsQueryVariables>
export const GetRunningWorkflowCountDocument = {
  '__meta__': { 'hash': '20e6f6c67e76d479eef3bf7b038ec7393b7671c5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetRunningWorkflowCount' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'workflow' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'running' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetRunningWorkflowCountQuery,
  GetRunningWorkflowCountQueryVariables
>
export const GetSlugDocument = {
  '__meta__': { 'hash': 'f269b0b65541222622a73c1a8df4d688a59dc52e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetSlug' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'slug' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'slug' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'slug' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'slug' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'InlineFragment',
                'typeCondition': {
                  'kind': 'NamedType',
                  'name': { 'kind': 'Name', 'value': 'Metadata' },
                },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Metadata' },
                  }],
                },
              }, {
                'kind': 'InlineFragment',
                'typeCondition': {
                  'kind': 'NamedType',
                  'name': { 'kind': 'Name', 'value': 'Collection' },
                },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Collection' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetSlugQuery, GetSlugQueryVariables>
export const GetStateDocument = {
  '__meta__': { 'hash': 'e375fef52c15901145fcb9c2dd7796c8b4055fa8' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetState' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'states' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'state' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'entryWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'exitWorkflowId' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
      ],
    },
  }],
} as unknown as DocumentNode<GetStateQuery, GetStateQueryVariables>
export const GetStatesDocument = {
  '__meta__': { 'hash': '0329b69f65fb67b15e2fafb570dc9ff5271708d6' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetStates' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'states' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowState' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'entryWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'exitWorkflowId' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
      ],
    },
  }],
} as unknown as DocumentNode<GetStatesQuery, GetStatesQueryVariables>
export const GetStorageSystemDocument = {
  '__meta__': { 'hash': '38cc7c086868435a04ef9a517fc9912228f705b7' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetStorageSystem' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'storageSystems' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'storageSystem' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'modelId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetStorageSystemQuery,
  GetStorageSystemQueryVariables
>
export const GetStorageSystemsDocument = {
  '__meta__': { 'hash': '6dc1c25392fe0f1c7e4b255025f7622d9204e663' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetStorageSystems' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'storageSystems' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'modelId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetStorageSystemsQuery,
  GetStorageSystemsQueryVariables
>
export const GetSupplementaryTextContentsDocument = {
  '__meta__': { 'hash': 'b4f5f30a1d847113c496c1596c1cba2c65b431bf' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetSupplementaryTextContents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'key' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'supplementary' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'key' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'key' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'content' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'text' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetSupplementaryTextContentsQuery,
  GetSupplementaryTextContentsQueryVariables
>
export const GetTextContentsDocument = {
  '__meta__': { 'hash': '065b1d5046bc736509fb626ce85147fd8eaf980a' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetTextContents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'content' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'text' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  GetTextContentsQuery,
  GetTextContentsQueryVariables
>
export const GetTraitDocument = {
  '__meta__': { 'hash': '758d118707c3e89d218ae752d6995bd07353227c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetTrait' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'traits' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'trait' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Trait' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Trait' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Trait' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'deleteWorkflowId' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetTraitQuery, GetTraitQueryVariables>
export const GetTraitsDocument = {
  '__meta__': { 'hash': '0c0441d277640bbf9c662a41fd82ac4bf20a5e53' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetTraits' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'traits' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Trait' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Trait' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Trait' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'contentTypes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'workflowIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'deleteWorkflowId' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetTraitsQuery, GetTraitsQueryVariables>
export const GetTransitionDocument = {
  '__meta__': { 'hash': '4fe0db104ddb8b7d39662b65c7633c44f120804f' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetTransition' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'fromStateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'toStateId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'transitions' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'transition' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'fromStateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'fromStateId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'toStateId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'toStateId' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Transition' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Transition' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Transition' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'fromStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'toStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
      ],
    },
  }],
} as unknown as DocumentNode<GetTransitionQuery, GetTransitionQueryVariables>
export const GetTransitionsDocument = {
  '__meta__': { 'hash': 'a8a8a7b8f5644e3bbcc7226937c34fbe0512ad86' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetTransitions' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'transitions' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'all' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Transition' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Transition' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Transition' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'fromStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'toStateId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
      ],
    },
  }],
} as unknown as DocumentNode<GetTransitionsQuery, GetTransitionsQueryVariables>
export const GetWorkflowDocument = {
  '__meta__': { 'hash': 'cafe17bbd9f0d14ee3ad1305e7772d9d82cd7872' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetWorkflow' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'workflow' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Workflow' },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'activities' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'system' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Workflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'activityId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'executionGroup' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'storageSystems' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'WorkflowActivityStorageSystem',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'prompts' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetWorkflowQuery, GetWorkflowQueryVariables>
export const GetWorkflowActivitiesDocument = {
  '__meta__': { 'hash': 'cd121a12bfc28b1fa286bd709288fb95e9a2d812' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetWorkflowActivities' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'workflow' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'activities' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'system' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'activityId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'executionGroup' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'storageSystems' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'WorkflowActivityStorageSystem',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'prompts' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetWorkflowActivitiesQuery,
  GetWorkflowActivitiesQueryVariables
>
export const GetWorkflowActivityDocument = {
  '__meta__': { 'hash': 'a685437c6941c9af95f3f02b84f9305cd17895f8' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetWorkflowActivity' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Int' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'workflowActivity' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'id' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'id' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'system' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'activityId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'executionGroup' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'storageSystems' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'WorkflowActivityStorageSystem',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'prompts' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  GetWorkflowActivityQuery,
  GetWorkflowActivityQueryVariables
>
export const GetWorkflowsDocument = {
  '__meta__': { 'hash': '8d51cf2f07bab16b4852a298dabd5292dc43c528' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'GetWorkflows' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'all' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Workflow' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Workflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Workflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<GetWorkflowsQuery, GetWorkflowsQueryVariables>
export const LoginDocument = {
  '__meta__': { 'hash': 'a4efc66bd17c7662c53abd8b0a76d0c70fbae746' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'Login' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'identifier' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'password' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'login' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'password' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'identifier' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'identifier' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'password' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'password' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'profile' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': { 'kind': 'Name', 'value': 'Profile' },
                      }],
                    },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'principal' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'id' },
                      }, {
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'groups' },
                        'selectionSet': {
                          'kind': 'SelectionSet',
                          'selections': [{
                            'kind': 'Field',
                            'name': { 'kind': 'Name', 'value': 'id' },
                          }, {
                            'kind': 'Field',
                            'name': { 'kind': 'Name', 'value': 'name' },
                          }],
                        },
                      }],
                    },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'token' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'token' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<LoginMutation, LoginMutationVariables>
export const NextJobDocument = {
  '__meta__': { 'hash': '9ab488e65baf2dc21fe7fe788042e122a9539824' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'NextJob' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'queue' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflows' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'nextJob' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'queue' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'queue' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'planId' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'queue' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'id' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'index' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'queue' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'collection' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Collection' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'metadata' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Metadata' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'activity' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'Activity' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'context' },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'workflowActivity' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'FragmentSpread',
                    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'storageSystems' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'system' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': { 'kind': 'Name', 'value': 'StorageSystem' },
                      }],
                    },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'configuration' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'prompts' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'prompt' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': { 'kind': 'Name', 'value': 'Prompt' },
                      }],
                    },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'configuration' },
                  }],
                },
              }, {
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'models' },
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'model' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'FragmentSpread',
                        'name': { 'kind': 'Name', 'value': 'Model' },
                      }],
                    },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'configuration' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Ordering' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Ordering' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'path' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'order' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Category' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Category' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'id' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'CollectionSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'state' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'stateValid' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'pending' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'running' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementaryContent' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'length' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'urls' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'download' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'url' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'headers' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'name' },
                    }, {
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'value' },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'MetadataSupplementaryContent',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Profile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Profile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'visibility' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'attributes' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'typeId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'visibility' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'attributes' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'metadata' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'selectionSet': {
                    'kind': 'SelectionSet',
                    'selections': [{
                      'kind': 'Field',
                      'name': { 'kind': 'Name', 'value': 'urls' },
                      'selectionSet': {
                        'kind': 'SelectionSet',
                        'selections': [{
                          'kind': 'Field',
                          'name': { 'kind': 'Name', 'value': 'download' },
                          'selectionSet': {
                            'kind': 'SelectionSet',
                            'selections': [{
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'url' },
                            }, {
                              'kind': 'Field',
                              'name': { 'kind': 'Name', 'value': 'headers' },
                              'selectionSet': {
                                'kind': 'SelectionSet',
                                'selections': [{
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'name' },
                                }, {
                                  'kind': 'Field',
                                  'name': { 'kind': 'Name', 'value': 'value' },
                                }],
                              },
                            }],
                          },
                        }],
                      },
                    }],
                  },
                }],
              },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'profile' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'FragmentSpread',
            'name': { 'kind': 'Name', 'value': 'Profile' },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'name' },
      }, { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityStorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'system' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'id' },
          }],
        },
      }, {
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Collection' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Collection' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'alias': { 'kind': 'Name', 'value': 'collectionType' },
          'name': { 'kind': 'Name', 'value': 'type' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'publicList' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'templateMetadata' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'version' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'ordering' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Ordering' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'CollectionSupplementary' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Metadata' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Metadata' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': '__typename' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'version' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'slug' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'labels' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'languageTag' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'public' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicContent' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'publicSupplementary' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'parentId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'source' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'id' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'identifier' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'categories' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'Category' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'content' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataContent' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'created' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'modified' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'uploaded' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'ready' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'attributes' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemAttributes' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'traitIds' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'workflow' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataWorkflow' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'supplementary' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataSupplementary' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'profiles' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'MetadataProfile' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Activity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Activity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'childWorkflowId' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'ActivityParameter' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'WorkflowActivity' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'activityId' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'queue' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'executionGroup' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'inputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'outputs' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityParameter' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'storageSystems' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': {
                'kind': 'Name',
                'value': 'WorkflowActivityStorageSystem',
              },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityModel' },
            }],
          },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'prompts' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'FragmentSpread',
              'name': { 'kind': 'Name', 'value': 'WorkflowActivityPrompt' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'StorageSystem' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'models' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'modelId' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'configuration' },
            }],
          },
        },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Prompt' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Prompt' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'inputType' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'outputType' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'systemPrompt' },
        },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'userPrompt' } },
      ],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Model' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Model' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'name' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'type' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'configuration' },
        },
      ],
    },
  }],
} as unknown as DocumentNode<NextJobQuery, NextJobQueryVariables>
export const OnActivityChangedDocument = {
  '__meta__': { 'hash': 'a21107cb30091749111a8aa5859b466b434faaa5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnActivityChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'activity' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnActivityChangedSubscription,
  OnActivityChangedSubscriptionVariables
>
export const OnCollectionChangedDocument = {
  '__meta__': { 'hash': '8df75ee035091a6c9a05d14620023f173f978ed7' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnCollectionChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'collection' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnCollectionChangedSubscription,
  OnCollectionChangedSubscriptionVariables
>
export const OnMetadataChangedDocument = {
  '__meta__': { 'hash': '10be661596d115ada01a49c268393ea67f3de400' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnMetadataChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadata' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnMetadataChangedSubscription,
  OnMetadataChangedSubscriptionVariables
>
export const OnMetadataSupplementaryChangedDocument = {
  '__meta__': { 'hash': '290ed9bc573b64fc7659dfd6528c6f1f1491deb9' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnMetadataSupplementaryChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'metadataSupplementary' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [
            {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'contentId' },
            },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
            { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'planId' } },
          ],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnMetadataSupplementaryChangedSubscription,
  OnMetadataSupplementaryChangedSubscriptionVariables
>
export const OnModelChangedDocument = {
  '__meta__': { 'hash': '98b6743a46c52c2f176940255191b246770ea4b7' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnModelChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'model' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnModelChangedSubscription,
  OnModelChangedSubscriptionVariables
>
export const OnPromptChangedDocument = {
  '__meta__': { 'hash': 'e0991d6d11d4c404bf7367c164adf7697ae3968c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnPromptChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'prompt' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnPromptChangedSubscription,
  OnPromptChangedSubscriptionVariables
>
export const OnStateChangedDocument = {
  '__meta__': { 'hash': '4bd4a277c311c9de66034545ac42f39f3a14e53a' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnStateChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'state' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnStateChangedSubscription,
  OnStateChangedSubscriptionVariables
>
export const OnStorageSystemChangedDocument = {
  '__meta__': { 'hash': '46c080b484654bfef016c6bb66c80ff024306dc5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnStorageSystemChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'storageSystem' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnStorageSystemChangedSubscription,
  OnStorageSystemChangedSubscriptionVariables
>
export const OnTraitChangedDocument = {
  '__meta__': { 'hash': 'efc5d61e5c6079152ae8a9a7be77f20fb7c5a154' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnTraitChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'trait' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnTraitChangedSubscription,
  OnTraitChangedSubscriptionVariables
>
export const OnWorkflowChangedDocument = {
  '__meta__': { 'hash': 'a29c82e384456fa7836aff2df581e97fec8f19e4' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'subscription',
    'name': { 'kind': 'Name', 'value': 'OnWorkflowChanged' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'workflow' },
      }],
    },
  }],
} as unknown as DocumentNode<
  OnWorkflowChangedSubscription,
  OnWorkflowChangedSubscriptionVariables
>
export const RemoveCollectionCollectionDocument = {
  '__meta__': { 'hash': '5f5a9bd6838870cd9b826b57bcf143bf8279e8bf' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveCollectionCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collectionId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'removeChildCollection' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'collectionId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'collectionId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveCollectionCollectionMutation,
  RemoveCollectionCollectionMutationVariables
>
export const RemoveCollectionMetadataRelationshipDocument = {
  '__meta__': { 'hash': '4d9c5161ce05fbce6e2a3ca72c2042db96495b48' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveCollectionMetadataRelationship' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': {
                  'kind': 'Name',
                  'value': 'deleteMetadataRelationship',
                },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadataId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'relationship' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'relationship' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveCollectionMetadataRelationshipMutation,
  RemoveCollectionMetadataRelationshipMutationVariables
>
export const RemoveCollectionPermissionDocument = {
  '__meta__': { 'hash': '1f9519cd5164f4f6f98ee3c2ddfb14bd0e60695e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveCollectionPermission' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'permission' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'PermissionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'deletePermission' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'permission' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'permission' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'groupId' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'action' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveCollectionPermissionMutation,
  RemoveCollectionPermissionMutationVariables
>
export const RemoveMetadataCollectionDocument = {
  '__meta__': { 'hash': '4d837abe4e80f58b7e4bd16b24e7a6d06998b1dd' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveMetadataCollection' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'collectionId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'removeChildMetadata' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'collectionId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveMetadataCollectionMutation,
  RemoveMetadataCollectionMutationVariables
>
export const RemoveMetadataPermissionDocument = {
  '__meta__': { 'hash': '35dce174ed958aecf6d2429621b125c4e37d927a' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveMetadataPermission' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'permission' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'PermissionInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'deletePermission' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'permission' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'permission' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'groupId' },
                  }, {
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'action' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveMetadataPermissionMutation,
  RemoveMetadataPermissionMutationVariables
>
export const RemoveMetadataRelationshipDocument = {
  '__meta__': { 'hash': '72711cf5cb77b9d1cc862d2f6efe30eaee57705b' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveMetadataRelationship' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id1' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id2' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'relationship' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'deleteRelationship' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id1' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id1' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id2' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id2' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'relationship' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'relationship' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveMetadataRelationshipMutation,
  RemoveMetadataRelationshipMutationVariables
>
export const RemoveMetadataTraitDocument = {
  '__meta__': { 'hash': 'b1644a8d14174b22004a068f6064385e3c7de0c1' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'RemoveMetadataTrait' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'metadataId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'traitId' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'deleteTrait' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'metadataId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'metadataId' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'traitId' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'traitId' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                    'selectionSet': {
                      'kind': 'SelectionSet',
                      'selections': [{
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'id' },
                      }, {
                        'kind': 'Field',
                        'name': { 'kind': 'Name', 'value': 'queue' },
                      }],
                    },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  RemoveMetadataTraitMutation,
  RemoveMetadataTraitMutationVariables
>
export const SetCollectionAttributesDocument = {
  '__meta__': { 'hash': 'd306bf729a1d3192a0bda9e9e123ece79f7d34c5' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetCollectionAttributes' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'JSON' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setCollectionAttributes' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'attributes' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'attributes' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetCollectionAttributesMutation,
  SetCollectionAttributesMutationVariables
>
export const SetCollectionPublicDocument = {
  '__meta__': { 'hash': '549a13b16d49941dd8e74aebf0c97f169aead971' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetCollectionPublic' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'public' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Boolean' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setPublic' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'public' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'public' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetCollectionPublicMutation,
  SetCollectionPublicMutationVariables
>
export const SetCollectionPublicListDocument = {
  '__meta__': { 'hash': 'cfca3214c4c4bf0ecb0f61abd09a17fec4338816' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetCollectionPublicList' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'public' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Boolean' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setPublicList' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'public' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'public' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetCollectionPublicListMutation,
  SetCollectionPublicListMutationVariables
>
export const SetCollectionReadyDocument = {
  '__meta__': { 'hash': '8dbe0f6e76e7307f237a885b8b5f0a0e8aaee635' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetCollectionReady' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'collection' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setReady' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetCollectionReadyMutation,
  SetCollectionReadyMutationVariables
>
export const SetConfigurationDocument = {
  '__meta__': { 'hash': '3d3085fe33b862a7ed9c7095f5fae2ed57a90653' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetConfiguration' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'configuration' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'ConfigurationInput' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'configurations' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'setConfiguration' },
            'arguments': [{
              'kind': 'Argument',
              'name': { 'kind': 'Name', 'value': 'configuration' },
              'value': {
                'kind': 'Variable',
                'name': { 'kind': 'Name', 'value': 'configuration' },
              },
            }],
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'FragmentSpread',
                'name': { 'kind': 'Name', 'value': 'Configuration' },
              }],
            },
          }],
        },
      }],
    },
  }, {
    'kind': 'FragmentDefinition',
    'name': { 'kind': 'Name', 'value': 'Configuration' },
    'typeCondition': {
      'kind': 'NamedType',
      'name': { 'kind': 'Name', 'value': 'Configuration' },
    },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'id' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'key' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'description' } },
        { 'kind': 'Field', 'name': { 'kind': 'Name', 'value': 'value' } },
        {
          'kind': 'Field',
          'name': { 'kind': 'Name', 'value': 'permissions' },
          'selectionSet': {
            'kind': 'SelectionSet',
            'selections': [{
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'action' },
            }, {
              'kind': 'Field',
              'name': { 'kind': 'Name', 'value': 'group' },
              'selectionSet': {
                'kind': 'SelectionSet',
                'selections': [{
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'id' },
                }, {
                  'kind': 'Field',
                  'name': { 'kind': 'Name', 'value': 'name' },
                }],
              },
            }],
          },
        },
      ],
    },
  }],
} as unknown as DocumentNode<
  SetConfigurationMutation,
  SetConfigurationMutationVariables
>
export const SetContentsDocument = {
  '__meta__': { 'hash': 'ea2268636c71d1f4a62f91435dd47dc4e8c6c979' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetContents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'contentType' },
      },
      'type': {
        'kind': 'NamedType',
        'name': { 'kind': 'Name', 'value': 'String' },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'file' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Upload' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setMetadataContents' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'contentType' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'contentType' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'file' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'file' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<SetContentsMutation, SetContentsMutationVariables>
export const SetJsonContentsDocument = {
  '__meta__': { 'hash': 'a2562ea5b3803b68e71b8c0a983132a3b172a4ab' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetJsonContents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'contentType' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'content' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'JSON' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setMetadataJsonContents' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'contentType' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'contentType' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'content' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetJsonContentsMutation,
  SetJsonContentsMutationVariables
>
export const SetMetadataAttributesDocument = {
  '__meta__': { 'hash': 'e606bb3f2beff84dcaf7054e38bf3e380bd9e3d0' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetMetadataAttributes' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'attributes' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'JSON' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setMetadataAttributes' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'attributes' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'attributes' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetMetadataAttributesMutation,
  SetMetadataAttributesMutationVariables
>
export const SetMetadataContentPublicDocument = {
  '__meta__': { 'hash': '68fd0857158831c7a829f44dfcb0aa2fd624fe16' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetMetadataContentPublic' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'public' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Boolean' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setPublicContent' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'public' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'public' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetMetadataContentPublicMutation,
  SetMetadataContentPublicMutationVariables
>
export const SetMetadataPublicDocument = {
  '__meta__': { 'hash': 'b78537cef452178a6403d5a9eb6707f3e9b99e56' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetMetadataPublic' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'public' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Boolean' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setPublic' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'public' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'public' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetMetadataPublicMutation,
  SetMetadataPublicMutationVariables
>
export const SetMetadataReadyDocument = {
  '__meta__': { 'hash': '7b16ea81fcef469a9a1ea0d99745bafdb51fb106' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetMetadataReady' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setMetadataReady' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetMetadataReadyMutation,
  SetMetadataReadyMutationVariables
>
export const SetMetadataSupplementaryPublicDocument = {
  '__meta__': { 'hash': '88dfbc42f59ab4c1f7af5a4f2f314967944567a6' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetMetadataSupplementaryPublic' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'public' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'Boolean' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setPublicSupplementary' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'public' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'public' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetMetadataSupplementaryPublicMutation,
  SetMetadataSupplementaryPublicMutationVariables
>
export const SetTextContentsDocument = {
  '__meta__': { 'hash': '297d41a39573c91af926ad4845f3ef19d51b264e' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SetTextContents' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'id' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'contentType' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'content' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'content' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'metadata' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'setMetadataTextContents' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'id' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'contentType' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'contentType' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'content' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'content' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  SetTextContentsMutation,
  SetTextContentsMutationVariables
>
export const SignUpDocument = {
  '__meta__': { 'hash': '2b752bb563da8531229f20469b38788335daed98' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'SignUp' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'profile' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'ProfileInput' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'identifier' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }, {
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'password' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'signup' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'password' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'profile' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'profile' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'identifier' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'identifier' },
                  },
                }, {
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'password' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'password' },
                  },
                }],
                'selectionSet': {
                  'kind': 'SelectionSet',
                  'selections': [{
                    'kind': 'Field',
                    'name': { 'kind': 'Name', 'value': 'id' },
                  }],
                },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<SignUpMutation, SignUpMutationVariables>
export const ValidatePrincipalDocument = {
  '__meta__': { 'hash': 'bf49ddac6c52ce996e2dec2ad137af46b589b1c2' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'query',
    'name': { 'kind': 'Name', 'value': 'ValidatePrincipal' },
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'principal' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'id' },
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  ValidatePrincipalQuery,
  ValidatePrincipalQueryVariables
>
export const VerifySignUpDocument = {
  '__meta__': { 'hash': 'ef2592134a686b7148d4fcdd5ecb0db3b104717c' },
  'kind': 'Document',
  'definitions': [{
    'kind': 'OperationDefinition',
    'operation': 'mutation',
    'name': { 'kind': 'Name', 'value': 'VerifySignUp' },
    'variableDefinitions': [{
      'kind': 'VariableDefinition',
      'variable': {
        'kind': 'Variable',
        'name': { 'kind': 'Name', 'value': 'token' },
      },
      'type': {
        'kind': 'NonNullType',
        'type': {
          'kind': 'NamedType',
          'name': { 'kind': 'Name', 'value': 'String' },
        },
      },
    }],
    'selectionSet': {
      'kind': 'SelectionSet',
      'selections': [{
        'kind': 'Field',
        'name': { 'kind': 'Name', 'value': 'security' },
        'selectionSet': {
          'kind': 'SelectionSet',
          'selections': [{
            'kind': 'Field',
            'name': { 'kind': 'Name', 'value': 'signup' },
            'selectionSet': {
              'kind': 'SelectionSet',
              'selections': [{
                'kind': 'Field',
                'name': { 'kind': 'Name', 'value': 'passwordVerify' },
                'arguments': [{
                  'kind': 'Argument',
                  'name': { 'kind': 'Name', 'value': 'verificationToken' },
                  'value': {
                    'kind': 'Variable',
                    'name': { 'kind': 'Name', 'value': 'token' },
                  },
                }],
              }],
            },
          }],
        },
      }],
    },
  }],
} as unknown as DocumentNode<
  VerifySignUpMutation,
  VerifySignUpMutationVariables
>
