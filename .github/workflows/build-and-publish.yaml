name: Build & Publish Backend and Frontend

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]
    tags:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - uses: actions/checkout@v3
      - run: |
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v30.2/protoc-30.2-linux-x86_64.zip
          unzip protoc-30.2-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run: export PATH="$HOME/.cargo/bin:$PATH" && cargo clippy

  build-and-publish-backend:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.9
      - uses: actions/checkout@v3
      - run: |
          PB_REL="https://github.com/protocolbuffers/protobuf/releases"
          curl -LO $PB_REL/download/v30.2/protoc-30.2-linux-x86_64.zip
          unzip protoc-30.2-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"
      - run: curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
      - run: export PATH="$HOME/.cargo/bin:$PATH" && cargo build --release
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push database migrations
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-migrations
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/database-migrations:latest
            ghcr.io/sowers-io/bosca/database-migrations:${{ github.sha }}
      - name: Build and push server
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-server
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/server:latest
            ghcr.io/sowers-io/bosca/server:${{ github.sha }}
      - name: Build and push cache server
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-dc
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/cache:latest
            ghcr.io/sowers-io/bosca/cache:${{ github.sha }}
      - name: Build and push analytics
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-analytics
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/analytics:latest
            ghcr.io/sowers-io/bosca/analytics:${{ github.sha }}

  build-and-publish-runner-community:
    runs-on: ubuntu-large
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm-community'
      - run: |
          export JAVA_HOME=/opt/hostedtoolcache/graalvm-community-jdk-24.0.1_linux-x64_bin/24.0.1/x64/graalvm-community-openjdk-24.0.1+9.1
          export PATH=$PATH:$JAVA_HOME/bin
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/kotlin-runner-community:latest
            ghcr.io/sowers-io/bosca/kotlin-runner-community:${{ github.sha }}

      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-blog-installer
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/blog-installer:latest
            ghcr.io/sowers-io/bosca/blog-installer:${{ github.sha }}

  build-and-publish-runner-community-compatibility:
    runs-on: ubuntu-large
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
      MARCH: compatibility
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm-community'
      - run: |
          export JAVA_HOME=/opt/hostedtoolcache/graalvm-community-jdk-24.0.1_linux-x64_bin/24.0.1/x64/graalvm-community-openjdk-24.0.1+9.1
          export PATH=$PATH:$JAVA_HOME/bin
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/kotlin-runner-community-compatibility:latest
            ghcr.io/sowers-io/bosca/kotlin-runner-community-compatibility:${{ github.sha }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-blog-installer
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/blog-installer-compatibility:latest
            ghcr.io/sowers-io/bosca/blog-installer-compatibility:${{ github.sha }}

  build-and-publish-runner-enterprise:
    runs-on: ubuntu-large
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ssh-known-hosts: ${{ secrets.KNOWN_HOSTS }}
          ssh-key: ${{ secrets.READ_SSH_KEY }}
          token: ${{ secrets.PRIVATE_PAT }}
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm-community'
      - run: |
          export JAVA_HOME=/opt/hostedtoolcache/graalvm-community-jdk-24.0.1_linux-x64_bin/24.0.1/x64/graalvm-community-openjdk-24.0.1+9.1
          export PATH=$PATH:$JAVA_HOME/bin
      - run: cd workspace/runners/enterprise/bible && ./gradlew publishToMavenLocal
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/kotlin-runner-enterprise:latest
            ghcr.io/sowers-io/bosca/kotlin-runner-enterprise:${{ github.sha }}

  build-and-publish-runner-enterprise-compatibility:
    runs-on: ubuntu-large
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
      MARCH: compatibility
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ssh-known-hosts: ${{ secrets.KNOWN_HOSTS }}
          ssh-key: ${{ secrets.READ_SSH_KEY }}
          token: ${{ secrets.PRIVATE_PAT }}
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '24'
          distribution: 'graalvm-community'
      - run: |
          export JAVA_HOME=/opt/hostedtoolcache/graalvm-community-jdk-24.0.1_linux-x64_bin/24.0.1/x64/graalvm-community-openjdk-24.0.1+9.1
          export PATH=$PATH:$JAVA_HOME/bin
      - run: cd workspace/runners/enterprise/bible && ./gradlew publishToMavenLocal
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/kotlin-runner-enterprise-compatibility:latest
            ghcr.io/sowers-io/bosca/kotlin-runner-enterprise-compatibility:${{ github.sha }}

  build-and-publish-imageprocessor:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push imageprocessor
        uses: docker/build-push-action@v3
        with:
          context: workspace/core/imageprocessor
          file: workspace/core/imageprocessor/Dockerfile
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/imageprocessor:latest
            ghcr.io/sowers-io/bosca/imageprocessor:${{ github.sha }}

  build-and-publish-administration:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ github.sha }}
      NUXT_UI_PRO_LICENSE: ${{ secrets.NUXT_UI_PRO_LICENSE }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          ssh-known-hosts: ${{ secrets.KNOWN_HOSTS }}
          ssh-key: ${{ secrets.READ_SSH_KEY }}
          token: ${{ secrets.PRIVATE_PAT }}
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - run: ./scripts/build-administration
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Administration Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-administration
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/administration:latest
            ghcr.io/sowers-io/bosca/administration:${{ github.sha }}
      - name: Build and Publish Administration Query Installer Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-administration-query-installer
          push: true
          tags: |
            ghcr.io/sowers-io/bosca/administration-query-installer:latest
            ghcr.io/sowers-io/bosca/administration-query-installer:${{ github.sha }}
