name: Build & Publish Backend and Frontend

on:
  push:
    branches: [ "main" ]
    tags:
      - '*'
  pull_request:
    branches: [ "main" ]
    tags:
      - '*'

jobs:
  lint:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - uses: actions/checkout@v3
      - run: cargo clippy

  build-and-publish-backend:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.6
      - uses: actions/checkout@v3
      - run: cargo build --release
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push database migrations
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-migrations
          push: true
          tags: |
            src.sowers.io/sowers/bosca/database-migrations:latest
            src.sowers.io/sowers/bosca/database-migrations:${{ gitea.sha }}
      - name: Build and push server
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-server
          push: true
          tags: |
            src.sowers.io/sowers/bosca/server:latest
            src.sowers.io/sowers/bosca/server:${{ gitea.sha }}
      - name: Build and push analytics
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-analytics
          push: true
          tags: |
            src.sowers.io/sowers/bosca/analytics:latest
            src.sowers.io/sowers/bosca/analytics:${{ gitea.sha }}

  build-and-publish-runner-community:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23.0.2'
          distribution: 'graalvm-community'

      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            src.sowers.io/sowers/bosca/kotlin-runner-community:latest
            src.sowers.io/sowers/bosca/kotlin-runner-community:${{ gitea.sha }}

  build-and-publish-runner-community-compatibility:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
      MARCH: compatibility
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: false
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23.0.2'
          distribution: 'graalvm-community'
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            src.sowers.io/sowers/bosca/kotlin-runner-community-compatibility:latest
            src.sowers.io/sowers/bosca/kotlin-runner-community-compatibility:${{ gitea.sha }}

  build-and-publish-runner-enterprise:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
      GITHUB_TOKEN: ${{ secrets.PRIVATE_PAT }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PRIVATE_PAT }}
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23.0.2'
          distribution: 'graalvm-community'
      - run: cd workspace/runners/enterprise/bible && ./gradlew publishToMavenLocal
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            src.sowers.io/sowers/bosca/kotlin-runner-enterprise:latest
            src.sowers.io/sowers/bosca/kotlin-runner-enterprise:${{ gitea.sha }}

  build-and-publish-runner-enterprise-compatibility:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
      GITHUB_TOKEN: ${{ secrets.PRIVATE_PAT }}
      MARCH: compatibility
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.PRIVATE_PAT }}
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '23.0.2'
          distribution: 'graalvm-community'
      - run: cd workspace/runners/enterprise/bible && ./gradlew publishToMavenLocal
      - run: cd workspace/runners/kotlin && ./gradlew nativeBuild
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Runner Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-runner
          push: true
          tags: |
            src.sowers.io/sowers/bosca/kotlin-runner-enterprise-compatibility:latest
            src.sowers.io/sowers/bosca/kotlin-runner-enterprise-compatibility:${{ gitea.sha }}

  build-and-publish-imageprocessor:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push imageprocessor
        uses: docker/build-push-action@v3
        with:
          context: workspace/core/imageprocessor
          file: workspace/core/imageprocessor/Dockerfile
          push: true
          tags: |
            src.sowers.io/sowers/bosca/imageprocessor:latest
            src.sowers.io/sowers/bosca/imageprocessor:${{ gitea.sha }}

  build-and-publish-administration:
    runs-on: ubuntu-22.04
    env:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      IMAGE_TAG: ${{ gitea.sha }}
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"
    steps:
      - uses: actions/checkout@v3
      - uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x
      - run: ./scripts/build-administration
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          registry: src.sowers.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Publish Administration Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-administration
          push: true
          tags: |
            src.sowers.io/sowers/bosca/administration:latest
            src.sowers.io/sowers/bosca/administration:${{ gitea.sha }}
      - name: Build and Publish Administration Query Installer Image
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile-administration-query-installer
          push: true
          tags: |
            src.sowers.io/sowers/bosca/administration-query-installer:latest
            src.sowers.io/sowers/bosca/administration-query-installer:${{ gitea.sha }}
